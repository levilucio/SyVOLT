"""
__MT_pre__UMLRT2Kiltera_MM_MM.py______________________________________________________

Automatically generated AToM3 MetaModel (DO NOT MODIFY DIRECTLY)
Author: gehan
Modified: Sun Feb 15 10:22:26 2015
______________________________________________________________________________________
"""
from ASG_MT_pre__UMLRT2Kiltera_MM import *
from graph_ASG_ERmetaMetaModel import *
from Tkinter         import *
from ATOM3TypeInfo   import *
from ATOM3String     import *
from StatusBar       import *
from ATOM3TypeDialog import *

from MT_pre__MatchModel       import *
from MT_pre__ApplyModel       import *
from MT_pre__MetaModelElement_S       import *
from MT_pre__MetaModelElement_T       import *
from MT_pre__Element       import *
from MT_pre__NamedElement       import *
from MT_pre__Trigger_S       import *
from MT_pre__Action       import *
from MT_pre__PortRef       import *
from MT_pre__PortConnectorRef       import *
from MT_pre__StateMachineElement       import *
from MT_pre__Protocol       import *
from MT_pre__Signal       import *
from MT_pre__Port       import *
from MT_pre__Vertex       import *
from MT_pre__InitialPoint       import *
from MT_pre__EntryPoint       import *
from MT_pre__ExitPoint       import *
from MT_pre__Transition       import *
from MT_pre__StateMachine       import *
from MT_pre__State       import *
from MT_pre__Capsule       import *
from MT_pre__PackageContainer       import *
from MT_pre__Model_S       import *
from MT_pre__Package       import *
from MT_pre__CapsuleRole       import *
from MT_pre__PortConnector       import *
from MT_pre__Thread       import *
from MT_pre__PhysicalThread       import *
from MT_pre__LogicalThread       import *
from MT_pre__PortType       import *
from MT_pre__BASE0       import *
from MT_pre__CONJUGATE1       import *
from MT_pre__SignalType       import *
from MT_pre__OUT1       import *
from MT_pre__IN0       import *
from MT_pre__RoleType       import *
from MT_pre__FIXED0       import *
from MT_pre__OPTIONAL1       import *
from MT_pre__PLUGIN2       import *
from MT_pre__TransitionType       import *
from MT_pre__SIBLING0       import *
from MT_pre__IN1       import *
from MT_pre__OUT2       import *
from MT_pre__Def       import *
from MT_pre__Expr       import *
from MT_pre__Pattern       import *
from MT_pre__Proc       import *
from MT_pre__ProcDef       import *
from MT_pre__FuncDef       import *
from MT_pre__Name       import *
from MT_pre__PythonRef       import *
from MT_pre__Module       import *
from MT_pre__Null       import *
from MT_pre__Trigger_T       import *
from MT_pre__Listen       import *
from MT_pre__ConditionBranch       import *
from MT_pre__ListenBranch       import *
from MT_pre__Site       import *
from MT_pre__Model_T       import *
from MT_pre__MatchCase       import *
from MT_pre__Condition       import *
from MT_pre__New       import *
from MT_pre__Delay       import *
from MT_pre__Par       import *
from MT_pre__ParIndexed       import *
from MT_pre__Inst       import *
from MT_pre__LocalDef       import *
from MT_pre__Seq       import *
from MT_pre__ConditionSet       import *
from MT_pre__Match       import *
from MT_pre__Print       import *
from MT_pre__Attribute       import *
from MT_pre__Expression       import *
from MT_pre__Equation       import *
from MT_pre__Operation       import *
from MT_pre__Add       import *
from MT_pre__Subtract       import *
from MT_pre__Concat       import *
from MT_pre__Constant       import *
from MT_pre__GenericNode_UMLRT2Kiltera_MM       import *
from MT_pre__paired_with       import *
from MT_pre__match_contains       import *
from MT_pre__apply_contains       import *
from MT_pre__directLink_T       import *
from MT_pre__directLink_S       import *
from MT_pre__indirectLink_S       import *
from MT_pre__backward_link       import *
from MT_pre__trace_link       import *
from MT_pre__hasAttribute_S       import *
from MT_pre__hasAttribute_T       import *
from MT_pre__leftExpr       import *
from MT_pre__rightExpr       import *
from MT_pre__hasArgs       import *
from MT_pre__GenericEdge_UMLRT2Kiltera_MM       import *
def createNewASGroot(self):
   return ASG_MT_pre__UMLRT2Kiltera_MM(self, None)

def createModelMenu(self, modelMenu):
    "Creates a customized Model Menu for the actual formalism"
    modelMenu.add_command(label="New MT_pre__MatchModel", command=lambda x=self: x.createNewMT_pre__MatchModel(x, 100, 100) )
    modelMenu.add_command(label="New MT_pre__ApplyModel", command=lambda x=self: x.createNewMT_pre__ApplyModel(x, 100, 100) )
    modelMenu.add_command(label="New MT_pre__MetaModelElement_S", command=lambda x=self: x.createNewMT_pre__MetaModelElement_S(x, 100, 100) )
    modelMenu.add_command(label="New MT_pre__MetaModelElement_T", command=lambda x=self: x.createNewMT_pre__MetaModelElement_T(x, 100, 100) )
    modelMenu.add_command(label="New MT_pre__Element", command=lambda x=self: x.createNewMT_pre__Element(x, 100, 100) )
    modelMenu.add_command(label="New MT_pre__NamedElement", command=lambda x=self: x.createNewMT_pre__NamedElement(x, 100, 100) )
    modelMenu.add_command(label="New MT_pre__Trigger_S", command=lambda x=self: x.createNewMT_pre__Trigger_S(x, 100, 100) )
    modelMenu.add_command(label="New MT_pre__Action", command=lambda x=self: x.createNewMT_pre__Action(x, 100, 100) )
    modelMenu.add_command(label="New MT_pre__PortRef", command=lambda x=self: x.createNewMT_pre__PortRef(x, 100, 100) )
    modelMenu.add_command(label="New MT_pre__PortConnectorRef", command=lambda x=self: x.createNewMT_pre__PortConnectorRef(x, 100, 100) )
    modelMenu.add_command(label="New MT_pre__StateMachineElement", command=lambda x=self: x.createNewMT_pre__StateMachineElement(x, 100, 100) )
    modelMenu.add_command(label="New MT_pre__Protocol", command=lambda x=self: x.createNewMT_pre__Protocol(x, 100, 100) )
    modelMenu.add_command(label="New MT_pre__Signal", command=lambda x=self: x.createNewMT_pre__Signal(x, 100, 100) )
    modelMenu.add_command(label="New MT_pre__Port", command=lambda x=self: x.createNewMT_pre__Port(x, 100, 100) )
    modelMenu.add_command(label="New MT_pre__Vertex", command=lambda x=self: x.createNewMT_pre__Vertex(x, 100, 100) )
    modelMenu.add_command(label="New MT_pre__InitialPoint", command=lambda x=self: x.createNewMT_pre__InitialPoint(x, 100, 100) )
    modelMenu.add_command(label="New MT_pre__EntryPoint", command=lambda x=self: x.createNewMT_pre__EntryPoint(x, 100, 100) )
    modelMenu.add_command(label="New MT_pre__ExitPoint", command=lambda x=self: x.createNewMT_pre__ExitPoint(x, 100, 100) )
    modelMenu.add_command(label="New MT_pre__Transition", command=lambda x=self: x.createNewMT_pre__Transition(x, 100, 100) )
    modelMenu.add_command(label="New MT_pre__StateMachine", command=lambda x=self: x.createNewMT_pre__StateMachine(x, 100, 100) )
    modelMenu.add_command(label="New MT_pre__State", command=lambda x=self: x.createNewMT_pre__State(x, 100, 100) )
    modelMenu.add_command(label="New MT_pre__Capsule", command=lambda x=self: x.createNewMT_pre__Capsule(x, 100, 100) )
    modelMenu.add_command(label="New MT_pre__PackageContainer", command=lambda x=self: x.createNewMT_pre__PackageContainer(x, 100, 100) )
    modelMenu.add_command(label="New MT_pre__Model_S", command=lambda x=self: x.createNewMT_pre__Model_S(x, 100, 100) )
    modelMenu.add_command(label="New MT_pre__Package", command=lambda x=self: x.createNewMT_pre__Package(x, 100, 100) )
    modelMenu.add_command(label="New MT_pre__CapsuleRole", command=lambda x=self: x.createNewMT_pre__CapsuleRole(x, 100, 100) )
    modelMenu.add_command(label="New MT_pre__PortConnector", command=lambda x=self: x.createNewMT_pre__PortConnector(x, 100, 100) )
    modelMenu.add_command(label="New MT_pre__Thread", command=lambda x=self: x.createNewMT_pre__Thread(x, 100, 100) )
    modelMenu.add_command(label="New MT_pre__PhysicalThread", command=lambda x=self: x.createNewMT_pre__PhysicalThread(x, 100, 100) )
    modelMenu.add_command(label="New MT_pre__LogicalThread", command=lambda x=self: x.createNewMT_pre__LogicalThread(x, 100, 100) )
    modelMenu.add_command(label="New MT_pre__PortType", command=lambda x=self: x.createNewMT_pre__PortType(x, 100, 100) )
    modelMenu.add_command(label="New MT_pre__BASE0", command=lambda x=self: x.createNewMT_pre__BASE0(x, 100, 100) )
    modelMenu.add_command(label="New MT_pre__CONJUGATE1", command=lambda x=self: x.createNewMT_pre__CONJUGATE1(x, 100, 100) )
    modelMenu.add_command(label="New MT_pre__SignalType", command=lambda x=self: x.createNewMT_pre__SignalType(x, 100, 100) )
    modelMenu.add_command(label="New MT_pre__OUT1", command=lambda x=self: x.createNewMT_pre__OUT1(x, 100, 100) )
    modelMenu.add_command(label="New MT_pre__IN0", command=lambda x=self: x.createNewMT_pre__IN0(x, 100, 100) )
    modelMenu.add_command(label="New MT_pre__RoleType", command=lambda x=self: x.createNewMT_pre__RoleType(x, 100, 100) )
    modelMenu.add_command(label="New MT_pre__FIXED0", command=lambda x=self: x.createNewMT_pre__FIXED0(x, 100, 100) )
    modelMenu.add_command(label="New MT_pre__OPTIONAL1", command=lambda x=self: x.createNewMT_pre__OPTIONAL1(x, 100, 100) )
    modelMenu.add_command(label="New MT_pre__PLUGIN2", command=lambda x=self: x.createNewMT_pre__PLUGIN2(x, 100, 100) )
    modelMenu.add_command(label="New MT_pre__TransitionType", command=lambda x=self: x.createNewMT_pre__TransitionType(x, 100, 100) )
    modelMenu.add_command(label="New MT_pre__SIBLING0", command=lambda x=self: x.createNewMT_pre__SIBLING0(x, 100, 100) )
    modelMenu.add_command(label="New MT_pre__IN1", command=lambda x=self: x.createNewMT_pre__IN1(x, 100, 100) )
    modelMenu.add_command(label="New MT_pre__OUT2", command=lambda x=self: x.createNewMT_pre__OUT2(x, 100, 100) )
    modelMenu.add_command(label="New MT_pre__Def", command=lambda x=self: x.createNewMT_pre__Def(x, 100, 100) )
    modelMenu.add_command(label="New MT_pre__Expr", command=lambda x=self: x.createNewMT_pre__Expr(x, 100, 100) )
    modelMenu.add_command(label="New MT_pre__Pattern", command=lambda x=self: x.createNewMT_pre__Pattern(x, 100, 100) )
    modelMenu.add_command(label="New MT_pre__Proc", command=lambda x=self: x.createNewMT_pre__Proc(x, 100, 100) )
    modelMenu.add_command(label="New MT_pre__ProcDef", command=lambda x=self: x.createNewMT_pre__ProcDef(x, 100, 100) )
    modelMenu.add_command(label="New MT_pre__FuncDef", command=lambda x=self: x.createNewMT_pre__FuncDef(x, 100, 100) )
    modelMenu.add_command(label="New MT_pre__Name", command=lambda x=self: x.createNewMT_pre__Name(x, 100, 100) )
    modelMenu.add_command(label="New MT_pre__PythonRef", command=lambda x=self: x.createNewMT_pre__PythonRef(x, 100, 100) )
    modelMenu.add_command(label="New MT_pre__Module", command=lambda x=self: x.createNewMT_pre__Module(x, 100, 100) )
    modelMenu.add_command(label="New MT_pre__Null", command=lambda x=self: x.createNewMT_pre__Null(x, 100, 100) )
    modelMenu.add_command(label="New MT_pre__Trigger_T", command=lambda x=self: x.createNewMT_pre__Trigger_T(x, 100, 100) )
    modelMenu.add_command(label="New MT_pre__Listen", command=lambda x=self: x.createNewMT_pre__Listen(x, 100, 100) )
    modelMenu.add_command(label="New MT_pre__ConditionBranch", command=lambda x=self: x.createNewMT_pre__ConditionBranch(x, 100, 100) )
    modelMenu.add_command(label="New MT_pre__ListenBranch", command=lambda x=self: x.createNewMT_pre__ListenBranch(x, 100, 100) )
    modelMenu.add_command(label="New MT_pre__Site", command=lambda x=self: x.createNewMT_pre__Site(x, 100, 100) )
    modelMenu.add_command(label="New MT_pre__Model_T", command=lambda x=self: x.createNewMT_pre__Model_T(x, 100, 100) )
    modelMenu.add_command(label="New MT_pre__MatchCase", command=lambda x=self: x.createNewMT_pre__MatchCase(x, 100, 100) )
    modelMenu.add_command(label="New MT_pre__Condition", command=lambda x=self: x.createNewMT_pre__Condition(x, 100, 100) )
    modelMenu.add_command(label="New MT_pre__New", command=lambda x=self: x.createNewMT_pre__New(x, 100, 100) )
    modelMenu.add_command(label="New MT_pre__Delay", command=lambda x=self: x.createNewMT_pre__Delay(x, 100, 100) )
    modelMenu.add_command(label="New MT_pre__Par", command=lambda x=self: x.createNewMT_pre__Par(x, 100, 100) )
    modelMenu.add_command(label="New MT_pre__ParIndexed", command=lambda x=self: x.createNewMT_pre__ParIndexed(x, 100, 100) )
    modelMenu.add_command(label="New MT_pre__Inst", command=lambda x=self: x.createNewMT_pre__Inst(x, 100, 100) )
    modelMenu.add_command(label="New MT_pre__LocalDef", command=lambda x=self: x.createNewMT_pre__LocalDef(x, 100, 100) )
    modelMenu.add_command(label="New MT_pre__Seq", command=lambda x=self: x.createNewMT_pre__Seq(x, 100, 100) )
    modelMenu.add_command(label="New MT_pre__ConditionSet", command=lambda x=self: x.createNewMT_pre__ConditionSet(x, 100, 100) )
    modelMenu.add_command(label="New MT_pre__Match", command=lambda x=self: x.createNewMT_pre__Match(x, 100, 100) )
    modelMenu.add_command(label="New MT_pre__Print", command=lambda x=self: x.createNewMT_pre__Print(x, 100, 100) )
    modelMenu.add_command(label="New MT_pre__Attribute", command=lambda x=self: x.createNewMT_pre__Attribute(x, 100, 100) )
    modelMenu.add_command(label="New MT_pre__Expression", command=lambda x=self: x.createNewMT_pre__Expression(x, 100, 100) )
    modelMenu.add_command(label="New MT_pre__Equation", command=lambda x=self: x.createNewMT_pre__Equation(x, 100, 100) )
    modelMenu.add_command(label="New MT_pre__Operation", command=lambda x=self: x.createNewMT_pre__Operation(x, 100, 100) )
    modelMenu.add_command(label="New MT_pre__Add", command=lambda x=self: x.createNewMT_pre__Add(x, 100, 100) )
    modelMenu.add_command(label="New MT_pre__Subtract", command=lambda x=self: x.createNewMT_pre__Subtract(x, 100, 100) )
    modelMenu.add_command(label="New MT_pre__Concat", command=lambda x=self: x.createNewMT_pre__Concat(x, 100, 100) )
    modelMenu.add_command(label="New MT_pre__Constant", command=lambda x=self: x.createNewMT_pre__Constant(x, 100, 100) )
    modelMenu.add_command(label="New MT_pre__GenericNode_UMLRT2Kiltera_MM", command=lambda x=self: x.createNewMT_pre__GenericNode_UMLRT2Kiltera_MM(x, 100, 100) )
    modelMenu.add_command(label="New MT_pre__paired_with", command=lambda x=self: x.createNewMT_pre__paired_with(x, 100, 100) )
    modelMenu.add_command(label="New MT_pre__match_contains", command=lambda x=self: x.createNewMT_pre__match_contains(x, 100, 100) )
    modelMenu.add_command(label="New MT_pre__apply_contains", command=lambda x=self: x.createNewMT_pre__apply_contains(x, 100, 100) )
    modelMenu.add_command(label="New MT_pre__directLink_T", command=lambda x=self: x.createNewMT_pre__directLink_T(x, 100, 100) )
    modelMenu.add_command(label="New MT_pre__directLink_S", command=lambda x=self: x.createNewMT_pre__directLink_S(x, 100, 100) )
    modelMenu.add_command(label="New MT_pre__indirectLink_S", command=lambda x=self: x.createNewMT_pre__indirectLink_S(x, 100, 100) )
    modelMenu.add_command(label="New MT_pre__backward_link", command=lambda x=self: x.createNewMT_pre__backward_link(x, 100, 100) )
    modelMenu.add_command(label="New MT_pre__trace_link", command=lambda x=self: x.createNewMT_pre__trace_link(x, 100, 100) )
    modelMenu.add_command(label="New MT_pre__hasAttribute_S", command=lambda x=self: x.createNewMT_pre__hasAttribute_S(x, 100, 100) )
    modelMenu.add_command(label="New MT_pre__hasAttribute_T", command=lambda x=self: x.createNewMT_pre__hasAttribute_T(x, 100, 100) )
    modelMenu.add_command(label="New MT_pre__leftExpr", command=lambda x=self: x.createNewMT_pre__leftExpr(x, 100, 100) )
    modelMenu.add_command(label="New MT_pre__rightExpr", command=lambda x=self: x.createNewMT_pre__rightExpr(x, 100, 100) )
    modelMenu.add_command(label="New MT_pre__hasArgs", command=lambda x=self: x.createNewMT_pre__hasArgs(x, 100, 100) )
    modelMenu.add_command(label="New MT_pre__GenericEdge_UMLRT2Kiltera_MM", command=lambda x=self: x.createNewMT_pre__GenericEdge_UMLRT2Kiltera_MM(x, 100, 100) )
def setConnectivity(self):
    self.ConnectivityMap['MT_pre__GenericNode_UMLRT2Kiltera_MM']={
           'MT_pre__GenericNode_UMLRT2Kiltera_MM': [( 'MT_pre__GenericEdge_UMLRT2Kiltera_MM', self.createNewMT_pre__GenericEdge_UMLRT2Kiltera_MM)]
          ,'MT_pre__OPTIONAL1': [( 'MT_pre__GenericEdge_UMLRT2Kiltera_MM', self.createNewMT_pre__GenericEdge_UMLRT2Kiltera_MM)]
          ,'MT_pre__backward_link': []
          ,'MT_pre__Expression': [( 'MT_pre__GenericEdge_UMLRT2Kiltera_MM', self.createNewMT_pre__GenericEdge_UMLRT2Kiltera_MM)]
          ,'MT_pre__PhysicalThread': [( 'MT_pre__GenericEdge_UMLRT2Kiltera_MM', self.createNewMT_pre__GenericEdge_UMLRT2Kiltera_MM)]
          ,'MT_pre__PortRef': [( 'MT_pre__GenericEdge_UMLRT2Kiltera_MM', self.createNewMT_pre__GenericEdge_UMLRT2Kiltera_MM)]
          ,'MT_pre__PortConnectorRef': [( 'MT_pre__GenericEdge_UMLRT2Kiltera_MM', self.createNewMT_pre__GenericEdge_UMLRT2Kiltera_MM)]
          ,'MT_pre__Name': [( 'MT_pre__GenericEdge_UMLRT2Kiltera_MM', self.createNewMT_pre__GenericEdge_UMLRT2Kiltera_MM)]
          ,'MT_pre__RoleType': [( 'MT_pre__GenericEdge_UMLRT2Kiltera_MM', self.createNewMT_pre__GenericEdge_UMLRT2Kiltera_MM)]
          ,'MT_pre__Module': [( 'MT_pre__GenericEdge_UMLRT2Kiltera_MM', self.createNewMT_pre__GenericEdge_UMLRT2Kiltera_MM)]
          ,'MT_pre__Thread': [( 'MT_pre__GenericEdge_UMLRT2Kiltera_MM', self.createNewMT_pre__GenericEdge_UMLRT2Kiltera_MM)]
          ,'MT_pre__indirectLink_S': []
          ,'MT_pre__ConditionBranch': [( 'MT_pre__GenericEdge_UMLRT2Kiltera_MM', self.createNewMT_pre__GenericEdge_UMLRT2Kiltera_MM)]
          ,'MT_pre__BASE0': [( 'MT_pre__GenericEdge_UMLRT2Kiltera_MM', self.createNewMT_pre__GenericEdge_UMLRT2Kiltera_MM)]
          ,'MT_pre__NamedElement': [( 'MT_pre__GenericEdge_UMLRT2Kiltera_MM', self.createNewMT_pre__GenericEdge_UMLRT2Kiltera_MM)]
          ,'MT_pre__Element': [( 'MT_pre__GenericEdge_UMLRT2Kiltera_MM', self.createNewMT_pre__GenericEdge_UMLRT2Kiltera_MM)]
          ,'MT_pre__OUT2': [( 'MT_pre__GenericEdge_UMLRT2Kiltera_MM', self.createNewMT_pre__GenericEdge_UMLRT2Kiltera_MM)]
          ,'MT_pre__OUT1': [( 'MT_pre__GenericEdge_UMLRT2Kiltera_MM', self.createNewMT_pre__GenericEdge_UMLRT2Kiltera_MM)]
          ,'MT_pre__LocalDef': [( 'MT_pre__GenericEdge_UMLRT2Kiltera_MM', self.createNewMT_pre__GenericEdge_UMLRT2Kiltera_MM)]
          ,'MT_pre__Expr': [( 'MT_pre__GenericEdge_UMLRT2Kiltera_MM', self.createNewMT_pre__GenericEdge_UMLRT2Kiltera_MM)]
          ,'MT_pre__Signal': [( 'MT_pre__GenericEdge_UMLRT2Kiltera_MM', self.createNewMT_pre__GenericEdge_UMLRT2Kiltera_MM)]
          ,'MT_pre__MetaModelElement_T': [( 'MT_pre__GenericEdge_UMLRT2Kiltera_MM', self.createNewMT_pre__GenericEdge_UMLRT2Kiltera_MM)]
          ,'MT_pre__MetaModelElement_S': [( 'MT_pre__GenericEdge_UMLRT2Kiltera_MM', self.createNewMT_pre__GenericEdge_UMLRT2Kiltera_MM)]
          ,'MT_pre__Package': [( 'MT_pre__GenericEdge_UMLRT2Kiltera_MM', self.createNewMT_pre__GenericEdge_UMLRT2Kiltera_MM)]
          ,'MT_pre__apply_contains': []
          ,'MT_pre__ConditionSet': [( 'MT_pre__GenericEdge_UMLRT2Kiltera_MM', self.createNewMT_pre__GenericEdge_UMLRT2Kiltera_MM)]
          ,'MT_pre__State': [( 'MT_pre__GenericEdge_UMLRT2Kiltera_MM', self.createNewMT_pre__GenericEdge_UMLRT2Kiltera_MM)]
          ,'MT_pre__MatchCase': [( 'MT_pre__GenericEdge_UMLRT2Kiltera_MM', self.createNewMT_pre__GenericEdge_UMLRT2Kiltera_MM)]
          ,'MT_pre__PortType': [( 'MT_pre__GenericEdge_UMLRT2Kiltera_MM', self.createNewMT_pre__GenericEdge_UMLRT2Kiltera_MM)]
          ,'MT_pre__Match': [( 'MT_pre__GenericEdge_UMLRT2Kiltera_MM', self.createNewMT_pre__GenericEdge_UMLRT2Kiltera_MM)]
          ,'MT_pre__paired_with': []
          ,'MT_pre__PackageContainer': [( 'MT_pre__GenericEdge_UMLRT2Kiltera_MM', self.createNewMT_pre__GenericEdge_UMLRT2Kiltera_MM)]
          ,'MT_pre__IN1': [( 'MT_pre__GenericEdge_UMLRT2Kiltera_MM', self.createNewMT_pre__GenericEdge_UMLRT2Kiltera_MM)]
          ,'MT_pre__IN0': [( 'MT_pre__GenericEdge_UMLRT2Kiltera_MM', self.createNewMT_pre__GenericEdge_UMLRT2Kiltera_MM)]
          ,'MT_pre__LogicalThread': [( 'MT_pre__GenericEdge_UMLRT2Kiltera_MM', self.createNewMT_pre__GenericEdge_UMLRT2Kiltera_MM)]
          ,'MT_pre__Operation': [( 'MT_pre__GenericEdge_UMLRT2Kiltera_MM', self.createNewMT_pre__GenericEdge_UMLRT2Kiltera_MM)]
          ,'MT_pre__FuncDef': [( 'MT_pre__GenericEdge_UMLRT2Kiltera_MM', self.createNewMT_pre__GenericEdge_UMLRT2Kiltera_MM)]
          ,'MT_pre__SIBLING0': [( 'MT_pre__GenericEdge_UMLRT2Kiltera_MM', self.createNewMT_pre__GenericEdge_UMLRT2Kiltera_MM)]
          ,'MT_pre__InitialPoint': [( 'MT_pre__GenericEdge_UMLRT2Kiltera_MM', self.createNewMT_pre__GenericEdge_UMLRT2Kiltera_MM)]
          ,'MT_pre__PortConnector': [( 'MT_pre__GenericEdge_UMLRT2Kiltera_MM', self.createNewMT_pre__GenericEdge_UMLRT2Kiltera_MM)]
          ,'MT_pre__Null': [( 'MT_pre__GenericEdge_UMLRT2Kiltera_MM', self.createNewMT_pre__GenericEdge_UMLRT2Kiltera_MM)]
          ,'MT_pre__Par': [( 'MT_pre__GenericEdge_UMLRT2Kiltera_MM', self.createNewMT_pre__GenericEdge_UMLRT2Kiltera_MM)]
          ,'MT_pre__ParIndexed': [( 'MT_pre__GenericEdge_UMLRT2Kiltera_MM', self.createNewMT_pre__GenericEdge_UMLRT2Kiltera_MM)]
          ,'MT_pre__rightExpr': []
          ,'MT_pre__Listen': [( 'MT_pre__GenericEdge_UMLRT2Kiltera_MM', self.createNewMT_pre__GenericEdge_UMLRT2Kiltera_MM)]
          ,'MT_pre__MatchModel': [( 'MT_pre__GenericEdge_UMLRT2Kiltera_MM', self.createNewMT_pre__GenericEdge_UMLRT2Kiltera_MM)]
          ,'MT_pre__Site': [( 'MT_pre__GenericEdge_UMLRT2Kiltera_MM', self.createNewMT_pre__GenericEdge_UMLRT2Kiltera_MM)]
          ,'MT_pre__New': [( 'MT_pre__GenericEdge_UMLRT2Kiltera_MM', self.createNewMT_pre__GenericEdge_UMLRT2Kiltera_MM)]
          ,'MT_pre__Concat': [( 'MT_pre__GenericEdge_UMLRT2Kiltera_MM', self.createNewMT_pre__GenericEdge_UMLRT2Kiltera_MM)]
          ,'MT_pre__trace_link': []
          ,'MT_pre__SignalType': [( 'MT_pre__GenericEdge_UMLRT2Kiltera_MM', self.createNewMT_pre__GenericEdge_UMLRT2Kiltera_MM)]
          ,'MT_pre__Subtract': [( 'MT_pre__GenericEdge_UMLRT2Kiltera_MM', self.createNewMT_pre__GenericEdge_UMLRT2Kiltera_MM)]
          ,'MT_pre__directLink_S': []
          ,'MT_pre__Inst': [( 'MT_pre__GenericEdge_UMLRT2Kiltera_MM', self.createNewMT_pre__GenericEdge_UMLRT2Kiltera_MM)]
          ,'MT_pre__PythonRef': [( 'MT_pre__GenericEdge_UMLRT2Kiltera_MM', self.createNewMT_pre__GenericEdge_UMLRT2Kiltera_MM)]
          ,'MT_pre__EntryPoint': [( 'MT_pre__GenericEdge_UMLRT2Kiltera_MM', self.createNewMT_pre__GenericEdge_UMLRT2Kiltera_MM)]
          ,'MT_pre__CONJUGATE1': [( 'MT_pre__GenericEdge_UMLRT2Kiltera_MM', self.createNewMT_pre__GenericEdge_UMLRT2Kiltera_MM)]
          ,'MT_pre__Protocol': [( 'MT_pre__GenericEdge_UMLRT2Kiltera_MM', self.createNewMT_pre__GenericEdge_UMLRT2Kiltera_MM)]
          ,'MT_pre__directLink_T': []
          ,'MT_pre__Def': [( 'MT_pre__GenericEdge_UMLRT2Kiltera_MM', self.createNewMT_pre__GenericEdge_UMLRT2Kiltera_MM)]
          ,'MT_pre__StateMachine': [( 'MT_pre__GenericEdge_UMLRT2Kiltera_MM', self.createNewMT_pre__GenericEdge_UMLRT2Kiltera_MM)]
          ,'MT_pre__Seq': [( 'MT_pre__GenericEdge_UMLRT2Kiltera_MM', self.createNewMT_pre__GenericEdge_UMLRT2Kiltera_MM)]
          ,'MT_pre__match_contains': []
          ,'MT_pre__Transition': [( 'MT_pre__GenericEdge_UMLRT2Kiltera_MM', self.createNewMT_pre__GenericEdge_UMLRT2Kiltera_MM)]
          ,'MT_pre__Vertex': [( 'MT_pre__GenericEdge_UMLRT2Kiltera_MM', self.createNewMT_pre__GenericEdge_UMLRT2Kiltera_MM)]
          ,'MT_pre__StateMachineElement': [( 'MT_pre__GenericEdge_UMLRT2Kiltera_MM', self.createNewMT_pre__GenericEdge_UMLRT2Kiltera_MM)]
          ,'MT_pre__hasArgs': []
          ,'MT_pre__Port': [( 'MT_pre__GenericEdge_UMLRT2Kiltera_MM', self.createNewMT_pre__GenericEdge_UMLRT2Kiltera_MM)]
          ,'MT_pre__hasAttribute_S': []
          ,'MT_pre__hasAttribute_T': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': []
          ,'MT_pre__ApplyModel': [( 'MT_pre__GenericEdge_UMLRT2Kiltera_MM', self.createNewMT_pre__GenericEdge_UMLRT2Kiltera_MM)]
          ,'MT_pre__Condition': [( 'MT_pre__GenericEdge_UMLRT2Kiltera_MM', self.createNewMT_pre__GenericEdge_UMLRT2Kiltera_MM)]
          ,'MT_pre__Attribute': [( 'MT_pre__GenericEdge_UMLRT2Kiltera_MM', self.createNewMT_pre__GenericEdge_UMLRT2Kiltera_MM)]
          ,'MT_pre__Print': [( 'MT_pre__GenericEdge_UMLRT2Kiltera_MM', self.createNewMT_pre__GenericEdge_UMLRT2Kiltera_MM)]
          ,'MT_pre__Constant': [( 'MT_pre__GenericEdge_UMLRT2Kiltera_MM', self.createNewMT_pre__GenericEdge_UMLRT2Kiltera_MM)]
          ,'MT_pre__ExitPoint': [( 'MT_pre__GenericEdge_UMLRT2Kiltera_MM', self.createNewMT_pre__GenericEdge_UMLRT2Kiltera_MM)]
          ,'MT_pre__Pattern': [( 'MT_pre__GenericEdge_UMLRT2Kiltera_MM', self.createNewMT_pre__GenericEdge_UMLRT2Kiltera_MM)]
          ,'MT_pre__TransitionType': [( 'MT_pre__GenericEdge_UMLRT2Kiltera_MM', self.createNewMT_pre__GenericEdge_UMLRT2Kiltera_MM)]
          ,'MT_pre__Capsule': [( 'MT_pre__GenericEdge_UMLRT2Kiltera_MM', self.createNewMT_pre__GenericEdge_UMLRT2Kiltera_MM)]
          ,'MT_pre__ListenBranch': [( 'MT_pre__GenericEdge_UMLRT2Kiltera_MM', self.createNewMT_pre__GenericEdge_UMLRT2Kiltera_MM)]
          ,'MT_pre__ProcDef': [( 'MT_pre__GenericEdge_UMLRT2Kiltera_MM', self.createNewMT_pre__GenericEdge_UMLRT2Kiltera_MM)]
          ,'MT_pre__Delay': [( 'MT_pre__GenericEdge_UMLRT2Kiltera_MM', self.createNewMT_pre__GenericEdge_UMLRT2Kiltera_MM)]
          ,'MT_pre__Add': [( 'MT_pre__GenericEdge_UMLRT2Kiltera_MM', self.createNewMT_pre__GenericEdge_UMLRT2Kiltera_MM)]
          ,'MT_pre__Trigger_S': [( 'MT_pre__GenericEdge_UMLRT2Kiltera_MM', self.createNewMT_pre__GenericEdge_UMLRT2Kiltera_MM)]
          ,'MT_pre__Proc': [( 'MT_pre__GenericEdge_UMLRT2Kiltera_MM', self.createNewMT_pre__GenericEdge_UMLRT2Kiltera_MM)]
          ,'MT_pre__Trigger_T': [( 'MT_pre__GenericEdge_UMLRT2Kiltera_MM', self.createNewMT_pre__GenericEdge_UMLRT2Kiltera_MM)]
          ,'MT_pre__PLUGIN2': [( 'MT_pre__GenericEdge_UMLRT2Kiltera_MM', self.createNewMT_pre__GenericEdge_UMLRT2Kiltera_MM)]
          ,'MT_pre__Action': [( 'MT_pre__GenericEdge_UMLRT2Kiltera_MM', self.createNewMT_pre__GenericEdge_UMLRT2Kiltera_MM)]
          ,'MT_pre__Model_T': [( 'MT_pre__GenericEdge_UMLRT2Kiltera_MM', self.createNewMT_pre__GenericEdge_UMLRT2Kiltera_MM)]
          ,'MT_pre__Model_S': [( 'MT_pre__GenericEdge_UMLRT2Kiltera_MM', self.createNewMT_pre__GenericEdge_UMLRT2Kiltera_MM)]
          ,'MT_pre__CapsuleRole': [( 'MT_pre__GenericEdge_UMLRT2Kiltera_MM', self.createNewMT_pre__GenericEdge_UMLRT2Kiltera_MM)]
          ,'MT_pre__leftExpr': []
          ,'MT_pre__FIXED0': [( 'MT_pre__GenericEdge_UMLRT2Kiltera_MM', self.createNewMT_pre__GenericEdge_UMLRT2Kiltera_MM)]
          ,'MT_pre__Equation': [( 'MT_pre__GenericEdge_UMLRT2Kiltera_MM', self.createNewMT_pre__GenericEdge_UMLRT2Kiltera_MM)] }
    self.ConnectivityMap['MT_pre__OPTIONAL1']={
           'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__OPTIONAL1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__backward_link': []
          ,'MT_pre__Expression': []
          ,'MT_pre__PhysicalThread': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__PortRef': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__PortConnectorRef': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Name': []
          ,'MT_pre__RoleType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Module': []
          ,'MT_pre__Thread': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__indirectLink_S': []
          ,'MT_pre__ConditionBranch': []
          ,'MT_pre__BASE0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__NamedElement': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Element': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__OUT2': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__OUT1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__LocalDef': []
          ,'MT_pre__Expr': []
          ,'MT_pre__Signal': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__MetaModelElement_T': []
          ,'MT_pre__MetaModelElement_S': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Package': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__apply_contains': []
          ,'MT_pre__ConditionSet': []
          ,'MT_pre__State': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__MatchCase': []
          ,'MT_pre__PortType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Match': []
          ,'MT_pre__paired_with': []
          ,'MT_pre__PackageContainer': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__IN1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__IN0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__LogicalThread': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Operation': []
          ,'MT_pre__FuncDef': []
          ,'MT_pre__SIBLING0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__InitialPoint': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__PortConnector': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Null': []
          ,'MT_pre__Par': []
          ,'MT_pre__ParIndexed': []
          ,'MT_pre__rightExpr': []
          ,'MT_pre__Listen': []
          ,'MT_pre__MatchModel': []
          ,'MT_pre__Site': []
          ,'MT_pre__New': []
          ,'MT_pre__Concat': []
          ,'MT_pre__trace_link': []
          ,'MT_pre__SignalType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Subtract': []
          ,'MT_pre__directLink_S': []
          ,'MT_pre__Inst': []
          ,'MT_pre__PythonRef': []
          ,'MT_pre__EntryPoint': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__CONJUGATE1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Protocol': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__directLink_T': []
          ,'MT_pre__Def': []
          ,'MT_pre__StateMachine': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Seq': []
          ,'MT_pre__match_contains': []
          ,'MT_pre__Transition': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Vertex': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__StateMachineElement': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__hasArgs': []
          ,'MT_pre__Port': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__hasAttribute_S': []
          ,'MT_pre__hasAttribute_T': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__Condition': []
          ,'MT_pre__Attribute': [( 'MT_pre__hasAttribute_S', self.createNewMT_pre__hasAttribute_S)]
          ,'MT_pre__Print': []
          ,'MT_pre__Constant': []
          ,'MT_pre__ExitPoint': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Pattern': []
          ,'MT_pre__TransitionType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Capsule': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__ListenBranch': []
          ,'MT_pre__ProcDef': []
          ,'MT_pre__Delay': []
          ,'MT_pre__Add': []
          ,'MT_pre__Trigger_S': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Proc': []
          ,'MT_pre__Trigger_T': []
          ,'MT_pre__PLUGIN2': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Action': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Model_T': []
          ,'MT_pre__Model_S': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__CapsuleRole': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__leftExpr': []
          ,'MT_pre__FIXED0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Equation': [] }
    self.ConnectivityMap['MT_pre__backward_link']={
           'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__OPTIONAL1': []
          ,'MT_pre__backward_link': []
          ,'MT_pre__Expression': []
          ,'MT_pre__PhysicalThread': []
          ,'MT_pre__PortRef': []
          ,'MT_pre__PortConnectorRef': []
          ,'MT_pre__Name': []
          ,'MT_pre__RoleType': []
          ,'MT_pre__Module': []
          ,'MT_pre__Thread': []
          ,'MT_pre__indirectLink_S': [( 'MT_pre__MetaModelElement_S', self.createNewMT_pre__MetaModelElement_S), ( 'MT_pre__Element', self.createNewMT_pre__Element), ( 'MT_pre__NamedElement', self.createNewMT_pre__NamedElement), ( 'MT_pre__Trigger_S', self.createNewMT_pre__Trigger_S), ( 'MT_pre__Action', self.createNewMT_pre__Action), ( 'MT_pre__PortRef', self.createNewMT_pre__PortRef), ( 'MT_pre__PortConnectorRef', self.createNewMT_pre__PortConnectorRef), ( 'MT_pre__StateMachineElement', self.createNewMT_pre__StateMachineElement), ( 'MT_pre__Protocol', self.createNewMT_pre__Protocol), ( 'MT_pre__Signal', self.createNewMT_pre__Signal), ( 'MT_pre__Port', self.createNewMT_pre__Port), ( 'MT_pre__Vertex', self.createNewMT_pre__Vertex), ( 'MT_pre__InitialPoint', self.createNewMT_pre__InitialPoint), ( 'MT_pre__EntryPoint', self.createNewMT_pre__EntryPoint), ( 'MT_pre__ExitPoint', self.createNewMT_pre__ExitPoint), ( 'MT_pre__Transition', self.createNewMT_pre__Transition), ( 'MT_pre__StateMachine', self.createNewMT_pre__StateMachine), ( 'MT_pre__State', self.createNewMT_pre__State), ( 'MT_pre__Capsule', self.createNewMT_pre__Capsule), ( 'MT_pre__PackageContainer', self.createNewMT_pre__PackageContainer), ( 'MT_pre__Model_S', self.createNewMT_pre__Model_S), ( 'MT_pre__Package', self.createNewMT_pre__Package), ( 'MT_pre__CapsuleRole', self.createNewMT_pre__CapsuleRole), ( 'MT_pre__PortConnector', self.createNewMT_pre__PortConnector), ( 'MT_pre__Thread', self.createNewMT_pre__Thread), ( 'MT_pre__PhysicalThread', self.createNewMT_pre__PhysicalThread), ( 'MT_pre__LogicalThread', self.createNewMT_pre__LogicalThread), ( 'MT_pre__PortType', self.createNewMT_pre__PortType), ( 'MT_pre__BASE0', self.createNewMT_pre__BASE0), ( 'MT_pre__CONJUGATE1', self.createNewMT_pre__CONJUGATE1), ( 'MT_pre__SignalType', self.createNewMT_pre__SignalType), ( 'MT_pre__OUT1', self.createNewMT_pre__OUT1), ( 'MT_pre__IN0', self.createNewMT_pre__IN0), ( 'MT_pre__RoleType', self.createNewMT_pre__RoleType), ( 'MT_pre__FIXED0', self.createNewMT_pre__FIXED0), ( 'MT_pre__OPTIONAL1', self.createNewMT_pre__OPTIONAL1), ( 'MT_pre__PLUGIN2', self.createNewMT_pre__PLUGIN2), ( 'MT_pre__TransitionType', self.createNewMT_pre__TransitionType), ( 'MT_pre__SIBLING0', self.createNewMT_pre__SIBLING0), ( 'MT_pre__IN1', self.createNewMT_pre__IN1), ( 'MT_pre__OUT2', self.createNewMT_pre__OUT2)]
          ,'MT_pre__ConditionBranch': []
          ,'MT_pre__BASE0': []
          ,'MT_pre__NamedElement': []
          ,'MT_pre__Element': []
          ,'MT_pre__OUT2': []
          ,'MT_pre__OUT1': []
          ,'MT_pre__LocalDef': []
          ,'MT_pre__Expr': []
          ,'MT_pre__Signal': []
          ,'MT_pre__MetaModelElement_T': []
          ,'MT_pre__MetaModelElement_S': []
          ,'MT_pre__Package': []
          ,'MT_pre__apply_contains': []
          ,'MT_pre__ConditionSet': []
          ,'MT_pre__State': []
          ,'MT_pre__MatchCase': []
          ,'MT_pre__PortType': []
          ,'MT_pre__Match': []
          ,'MT_pre__paired_with': []
          ,'MT_pre__PackageContainer': []
          ,'MT_pre__IN1': []
          ,'MT_pre__IN0': []
          ,'MT_pre__LogicalThread': []
          ,'MT_pre__Operation': []
          ,'MT_pre__FuncDef': []
          ,'MT_pre__SIBLING0': []
          ,'MT_pre__InitialPoint': []
          ,'MT_pre__PortConnector': []
          ,'MT_pre__Null': []
          ,'MT_pre__Par': []
          ,'MT_pre__ParIndexed': []
          ,'MT_pre__rightExpr': []
          ,'MT_pre__Listen': []
          ,'MT_pre__MatchModel': []
          ,'MT_pre__Site': []
          ,'MT_pre__New': []
          ,'MT_pre__Concat': []
          ,'MT_pre__trace_link': []
          ,'MT_pre__SignalType': []
          ,'MT_pre__Subtract': []
          ,'MT_pre__directLink_S': [( 'MT_pre__MetaModelElement_S', self.createNewMT_pre__MetaModelElement_S), ( 'MT_pre__Element', self.createNewMT_pre__Element), ( 'MT_pre__NamedElement', self.createNewMT_pre__NamedElement), ( 'MT_pre__Trigger_S', self.createNewMT_pre__Trigger_S), ( 'MT_pre__Action', self.createNewMT_pre__Action), ( 'MT_pre__PortRef', self.createNewMT_pre__PortRef), ( 'MT_pre__PortConnectorRef', self.createNewMT_pre__PortConnectorRef), ( 'MT_pre__StateMachineElement', self.createNewMT_pre__StateMachineElement), ( 'MT_pre__Protocol', self.createNewMT_pre__Protocol), ( 'MT_pre__Signal', self.createNewMT_pre__Signal), ( 'MT_pre__Port', self.createNewMT_pre__Port), ( 'MT_pre__Vertex', self.createNewMT_pre__Vertex), ( 'MT_pre__InitialPoint', self.createNewMT_pre__InitialPoint), ( 'MT_pre__EntryPoint', self.createNewMT_pre__EntryPoint), ( 'MT_pre__ExitPoint', self.createNewMT_pre__ExitPoint), ( 'MT_pre__Transition', self.createNewMT_pre__Transition), ( 'MT_pre__StateMachine', self.createNewMT_pre__StateMachine), ( 'MT_pre__State', self.createNewMT_pre__State), ( 'MT_pre__Capsule', self.createNewMT_pre__Capsule), ( 'MT_pre__PackageContainer', self.createNewMT_pre__PackageContainer), ( 'MT_pre__Model_S', self.createNewMT_pre__Model_S), ( 'MT_pre__Package', self.createNewMT_pre__Package), ( 'MT_pre__CapsuleRole', self.createNewMT_pre__CapsuleRole), ( 'MT_pre__PortConnector', self.createNewMT_pre__PortConnector), ( 'MT_pre__Thread', self.createNewMT_pre__Thread), ( 'MT_pre__PhysicalThread', self.createNewMT_pre__PhysicalThread), ( 'MT_pre__LogicalThread', self.createNewMT_pre__LogicalThread), ( 'MT_pre__PortType', self.createNewMT_pre__PortType), ( 'MT_pre__BASE0', self.createNewMT_pre__BASE0), ( 'MT_pre__CONJUGATE1', self.createNewMT_pre__CONJUGATE1), ( 'MT_pre__SignalType', self.createNewMT_pre__SignalType), ( 'MT_pre__OUT1', self.createNewMT_pre__OUT1), ( 'MT_pre__IN0', self.createNewMT_pre__IN0), ( 'MT_pre__RoleType', self.createNewMT_pre__RoleType), ( 'MT_pre__FIXED0', self.createNewMT_pre__FIXED0), ( 'MT_pre__OPTIONAL1', self.createNewMT_pre__OPTIONAL1), ( 'MT_pre__PLUGIN2', self.createNewMT_pre__PLUGIN2), ( 'MT_pre__TransitionType', self.createNewMT_pre__TransitionType), ( 'MT_pre__SIBLING0', self.createNewMT_pre__SIBLING0), ( 'MT_pre__IN1', self.createNewMT_pre__IN1), ( 'MT_pre__OUT2', self.createNewMT_pre__OUT2)]
          ,'MT_pre__Inst': []
          ,'MT_pre__PythonRef': []
          ,'MT_pre__EntryPoint': []
          ,'MT_pre__CONJUGATE1': []
          ,'MT_pre__Protocol': []
          ,'MT_pre__directLink_T': []
          ,'MT_pre__Def': []
          ,'MT_pre__StateMachine': []
          ,'MT_pre__Seq': []
          ,'MT_pre__match_contains': []
          ,'MT_pre__Transition': []
          ,'MT_pre__Vertex': []
          ,'MT_pre__StateMachineElement': []
          ,'MT_pre__hasArgs': []
          ,'MT_pre__Port': []
          ,'MT_pre__hasAttribute_S': [( 'MT_pre__MetaModelElement_S', self.createNewMT_pre__MetaModelElement_S), ( 'MT_pre__Element', self.createNewMT_pre__Element), ( 'MT_pre__NamedElement', self.createNewMT_pre__NamedElement), ( 'MT_pre__Trigger_S', self.createNewMT_pre__Trigger_S), ( 'MT_pre__Action', self.createNewMT_pre__Action), ( 'MT_pre__PortRef', self.createNewMT_pre__PortRef), ( 'MT_pre__PortConnectorRef', self.createNewMT_pre__PortConnectorRef), ( 'MT_pre__StateMachineElement', self.createNewMT_pre__StateMachineElement), ( 'MT_pre__Protocol', self.createNewMT_pre__Protocol), ( 'MT_pre__Signal', self.createNewMT_pre__Signal), ( 'MT_pre__Port', self.createNewMT_pre__Port), ( 'MT_pre__Vertex', self.createNewMT_pre__Vertex), ( 'MT_pre__InitialPoint', self.createNewMT_pre__InitialPoint), ( 'MT_pre__EntryPoint', self.createNewMT_pre__EntryPoint), ( 'MT_pre__ExitPoint', self.createNewMT_pre__ExitPoint), ( 'MT_pre__Transition', self.createNewMT_pre__Transition), ( 'MT_pre__StateMachine', self.createNewMT_pre__StateMachine), ( 'MT_pre__State', self.createNewMT_pre__State), ( 'MT_pre__Capsule', self.createNewMT_pre__Capsule), ( 'MT_pre__PackageContainer', self.createNewMT_pre__PackageContainer), ( 'MT_pre__Model_S', self.createNewMT_pre__Model_S), ( 'MT_pre__Package', self.createNewMT_pre__Package), ( 'MT_pre__CapsuleRole', self.createNewMT_pre__CapsuleRole), ( 'MT_pre__PortConnector', self.createNewMT_pre__PortConnector), ( 'MT_pre__Thread', self.createNewMT_pre__Thread), ( 'MT_pre__PhysicalThread', self.createNewMT_pre__PhysicalThread), ( 'MT_pre__LogicalThread', self.createNewMT_pre__LogicalThread), ( 'MT_pre__PortType', self.createNewMT_pre__PortType), ( 'MT_pre__BASE0', self.createNewMT_pre__BASE0), ( 'MT_pre__CONJUGATE1', self.createNewMT_pre__CONJUGATE1), ( 'MT_pre__SignalType', self.createNewMT_pre__SignalType), ( 'MT_pre__OUT1', self.createNewMT_pre__OUT1), ( 'MT_pre__IN0', self.createNewMT_pre__IN0), ( 'MT_pre__RoleType', self.createNewMT_pre__RoleType), ( 'MT_pre__FIXED0', self.createNewMT_pre__FIXED0), ( 'MT_pre__OPTIONAL1', self.createNewMT_pre__OPTIONAL1), ( 'MT_pre__PLUGIN2', self.createNewMT_pre__PLUGIN2), ( 'MT_pre__TransitionType', self.createNewMT_pre__TransitionType), ( 'MT_pre__SIBLING0', self.createNewMT_pre__SIBLING0), ( 'MT_pre__IN1', self.createNewMT_pre__IN1), ( 'MT_pre__OUT2', self.createNewMT_pre__OUT2)]
          ,'MT_pre__hasAttribute_T': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__Condition': []
          ,'MT_pre__Attribute': []
          ,'MT_pre__Print': []
          ,'MT_pre__Constant': []
          ,'MT_pre__ExitPoint': []
          ,'MT_pre__Pattern': []
          ,'MT_pre__TransitionType': []
          ,'MT_pre__Capsule': []
          ,'MT_pre__ListenBranch': []
          ,'MT_pre__ProcDef': []
          ,'MT_pre__Delay': []
          ,'MT_pre__Add': []
          ,'MT_pre__Trigger_S': []
          ,'MT_pre__Proc': []
          ,'MT_pre__Trigger_T': []
          ,'MT_pre__PLUGIN2': []
          ,'MT_pre__Action': []
          ,'MT_pre__Model_T': []
          ,'MT_pre__Model_S': []
          ,'MT_pre__CapsuleRole': []
          ,'MT_pre__leftExpr': []
          ,'MT_pre__FIXED0': []
          ,'MT_pre__Equation': [] }
    self.ConnectivityMap['MT_pre__Expression']={
           'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__OPTIONAL1': []
          ,'MT_pre__backward_link': []
          ,'MT_pre__Expression': []
          ,'MT_pre__PhysicalThread': []
          ,'MT_pre__PortRef': []
          ,'MT_pre__PortConnectorRef': []
          ,'MT_pre__Name': []
          ,'MT_pre__RoleType': []
          ,'MT_pre__Module': []
          ,'MT_pre__Thread': []
          ,'MT_pre__indirectLink_S': []
          ,'MT_pre__ConditionBranch': []
          ,'MT_pre__BASE0': []
          ,'MT_pre__NamedElement': []
          ,'MT_pre__Element': []
          ,'MT_pre__OUT2': []
          ,'MT_pre__OUT1': []
          ,'MT_pre__LocalDef': []
          ,'MT_pre__Expr': []
          ,'MT_pre__Signal': []
          ,'MT_pre__MetaModelElement_T': []
          ,'MT_pre__MetaModelElement_S': []
          ,'MT_pre__Package': []
          ,'MT_pre__apply_contains': []
          ,'MT_pre__ConditionSet': []
          ,'MT_pre__State': []
          ,'MT_pre__MatchCase': []
          ,'MT_pre__PortType': []
          ,'MT_pre__Match': []
          ,'MT_pre__paired_with': []
          ,'MT_pre__PackageContainer': []
          ,'MT_pre__IN1': []
          ,'MT_pre__IN0': []
          ,'MT_pre__LogicalThread': []
          ,'MT_pre__Operation': []
          ,'MT_pre__FuncDef': []
          ,'MT_pre__SIBLING0': []
          ,'MT_pre__InitialPoint': []
          ,'MT_pre__PortConnector': []
          ,'MT_pre__Null': []
          ,'MT_pre__Par': []
          ,'MT_pre__ParIndexed': []
          ,'MT_pre__rightExpr': []
          ,'MT_pre__Listen': []
          ,'MT_pre__MatchModel': []
          ,'MT_pre__Site': []
          ,'MT_pre__New': []
          ,'MT_pre__Concat': []
          ,'MT_pre__trace_link': []
          ,'MT_pre__SignalType': []
          ,'MT_pre__Subtract': []
          ,'MT_pre__directLink_S': []
          ,'MT_pre__Inst': []
          ,'MT_pre__PythonRef': []
          ,'MT_pre__EntryPoint': []
          ,'MT_pre__CONJUGATE1': []
          ,'MT_pre__Protocol': []
          ,'MT_pre__directLink_T': []
          ,'MT_pre__Def': []
          ,'MT_pre__StateMachine': []
          ,'MT_pre__Seq': []
          ,'MT_pre__match_contains': []
          ,'MT_pre__Transition': []
          ,'MT_pre__Vertex': []
          ,'MT_pre__StateMachineElement': []
          ,'MT_pre__hasArgs': []
          ,'MT_pre__Port': []
          ,'MT_pre__hasAttribute_S': []
          ,'MT_pre__hasAttribute_T': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__Condition': []
          ,'MT_pre__Attribute': []
          ,'MT_pre__Print': []
          ,'MT_pre__Constant': []
          ,'MT_pre__ExitPoint': []
          ,'MT_pre__Pattern': []
          ,'MT_pre__TransitionType': []
          ,'MT_pre__Capsule': []
          ,'MT_pre__ListenBranch': []
          ,'MT_pre__ProcDef': []
          ,'MT_pre__Delay': []
          ,'MT_pre__Add': []
          ,'MT_pre__Trigger_S': []
          ,'MT_pre__Proc': []
          ,'MT_pre__Trigger_T': []
          ,'MT_pre__PLUGIN2': []
          ,'MT_pre__Action': []
          ,'MT_pre__Model_T': []
          ,'MT_pre__Model_S': []
          ,'MT_pre__CapsuleRole': []
          ,'MT_pre__leftExpr': []
          ,'MT_pre__FIXED0': []
          ,'MT_pre__Equation': [] }
    self.ConnectivityMap['MT_pre__PhysicalThread']={
           'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__OPTIONAL1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__backward_link': []
          ,'MT_pre__Expression': []
          ,'MT_pre__PhysicalThread': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__PortRef': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__PortConnectorRef': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Name': []
          ,'MT_pre__RoleType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Module': []
          ,'MT_pre__Thread': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__indirectLink_S': []
          ,'MT_pre__ConditionBranch': []
          ,'MT_pre__BASE0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__NamedElement': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Element': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__OUT2': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__OUT1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__LocalDef': []
          ,'MT_pre__Expr': []
          ,'MT_pre__Signal': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__MetaModelElement_T': []
          ,'MT_pre__MetaModelElement_S': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Package': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__apply_contains': []
          ,'MT_pre__ConditionSet': []
          ,'MT_pre__State': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__MatchCase': []
          ,'MT_pre__PortType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Match': []
          ,'MT_pre__paired_with': []
          ,'MT_pre__PackageContainer': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__IN1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__IN0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__LogicalThread': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Operation': []
          ,'MT_pre__FuncDef': []
          ,'MT_pre__SIBLING0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__InitialPoint': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__PortConnector': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Null': []
          ,'MT_pre__Par': []
          ,'MT_pre__ParIndexed': []
          ,'MT_pre__rightExpr': []
          ,'MT_pre__Listen': []
          ,'MT_pre__MatchModel': []
          ,'MT_pre__Site': []
          ,'MT_pre__New': []
          ,'MT_pre__Concat': []
          ,'MT_pre__trace_link': []
          ,'MT_pre__SignalType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Subtract': []
          ,'MT_pre__directLink_S': []
          ,'MT_pre__Inst': []
          ,'MT_pre__PythonRef': []
          ,'MT_pre__EntryPoint': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__CONJUGATE1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Protocol': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__directLink_T': []
          ,'MT_pre__Def': []
          ,'MT_pre__StateMachine': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Seq': []
          ,'MT_pre__match_contains': []
          ,'MT_pre__Transition': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Vertex': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__StateMachineElement': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__hasArgs': []
          ,'MT_pre__Port': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__hasAttribute_S': []
          ,'MT_pre__hasAttribute_T': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__Condition': []
          ,'MT_pre__Attribute': [( 'MT_pre__hasAttribute_S', self.createNewMT_pre__hasAttribute_S)]
          ,'MT_pre__Print': []
          ,'MT_pre__Constant': []
          ,'MT_pre__ExitPoint': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Pattern': []
          ,'MT_pre__TransitionType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Capsule': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__ListenBranch': []
          ,'MT_pre__ProcDef': []
          ,'MT_pre__Delay': []
          ,'MT_pre__Add': []
          ,'MT_pre__Trigger_S': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Proc': []
          ,'MT_pre__Trigger_T': []
          ,'MT_pre__PLUGIN2': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Action': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Model_T': []
          ,'MT_pre__Model_S': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__CapsuleRole': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__leftExpr': []
          ,'MT_pre__FIXED0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Equation': [] }
    self.ConnectivityMap['MT_pre__PortRef']={
           'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__OPTIONAL1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__backward_link': []
          ,'MT_pre__Expression': []
          ,'MT_pre__PhysicalThread': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__PortRef': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__PortConnectorRef': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Name': []
          ,'MT_pre__RoleType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Module': []
          ,'MT_pre__Thread': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__indirectLink_S': []
          ,'MT_pre__ConditionBranch': []
          ,'MT_pre__BASE0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__NamedElement': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Element': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__OUT2': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__OUT1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__LocalDef': []
          ,'MT_pre__Expr': []
          ,'MT_pre__Signal': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__MetaModelElement_T': []
          ,'MT_pre__MetaModelElement_S': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Package': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__apply_contains': []
          ,'MT_pre__ConditionSet': []
          ,'MT_pre__State': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__MatchCase': []
          ,'MT_pre__PortType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Match': []
          ,'MT_pre__paired_with': []
          ,'MT_pre__PackageContainer': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__IN1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__IN0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__LogicalThread': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Operation': []
          ,'MT_pre__FuncDef': []
          ,'MT_pre__SIBLING0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__InitialPoint': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__PortConnector': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Null': []
          ,'MT_pre__Par': []
          ,'MT_pre__ParIndexed': []
          ,'MT_pre__rightExpr': []
          ,'MT_pre__Listen': []
          ,'MT_pre__MatchModel': []
          ,'MT_pre__Site': []
          ,'MT_pre__New': []
          ,'MT_pre__Concat': []
          ,'MT_pre__trace_link': []
          ,'MT_pre__SignalType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Subtract': []
          ,'MT_pre__directLink_S': []
          ,'MT_pre__Inst': []
          ,'MT_pre__PythonRef': []
          ,'MT_pre__EntryPoint': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__CONJUGATE1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Protocol': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__directLink_T': []
          ,'MT_pre__Def': []
          ,'MT_pre__StateMachine': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Seq': []
          ,'MT_pre__match_contains': []
          ,'MT_pre__Transition': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Vertex': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__StateMachineElement': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__hasArgs': []
          ,'MT_pre__Port': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__hasAttribute_S': []
          ,'MT_pre__hasAttribute_T': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__Condition': []
          ,'MT_pre__Attribute': [( 'MT_pre__hasAttribute_S', self.createNewMT_pre__hasAttribute_S)]
          ,'MT_pre__Print': []
          ,'MT_pre__Constant': []
          ,'MT_pre__ExitPoint': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Pattern': []
          ,'MT_pre__TransitionType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Capsule': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__ListenBranch': []
          ,'MT_pre__ProcDef': []
          ,'MT_pre__Delay': []
          ,'MT_pre__Add': []
          ,'MT_pre__Trigger_S': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Proc': []
          ,'MT_pre__Trigger_T': []
          ,'MT_pre__PLUGIN2': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Action': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Model_T': []
          ,'MT_pre__Model_S': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__CapsuleRole': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__leftExpr': []
          ,'MT_pre__FIXED0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Equation': [] }
    self.ConnectivityMap['MT_pre__PortConnectorRef']={
           'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__OPTIONAL1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__backward_link': []
          ,'MT_pre__Expression': []
          ,'MT_pre__PhysicalThread': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__PortRef': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__PortConnectorRef': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Name': []
          ,'MT_pre__RoleType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Module': []
          ,'MT_pre__Thread': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__indirectLink_S': []
          ,'MT_pre__ConditionBranch': []
          ,'MT_pre__BASE0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__NamedElement': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Element': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__OUT2': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__OUT1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__LocalDef': []
          ,'MT_pre__Expr': []
          ,'MT_pre__Signal': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__MetaModelElement_T': []
          ,'MT_pre__MetaModelElement_S': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Package': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__apply_contains': []
          ,'MT_pre__ConditionSet': []
          ,'MT_pre__State': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__MatchCase': []
          ,'MT_pre__PortType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Match': []
          ,'MT_pre__paired_with': []
          ,'MT_pre__PackageContainer': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__IN1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__IN0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__LogicalThread': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Operation': []
          ,'MT_pre__FuncDef': []
          ,'MT_pre__SIBLING0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__InitialPoint': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__PortConnector': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Null': []
          ,'MT_pre__Par': []
          ,'MT_pre__ParIndexed': []
          ,'MT_pre__rightExpr': []
          ,'MT_pre__Listen': []
          ,'MT_pre__MatchModel': []
          ,'MT_pre__Site': []
          ,'MT_pre__New': []
          ,'MT_pre__Concat': []
          ,'MT_pre__trace_link': []
          ,'MT_pre__SignalType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Subtract': []
          ,'MT_pre__directLink_S': []
          ,'MT_pre__Inst': []
          ,'MT_pre__PythonRef': []
          ,'MT_pre__EntryPoint': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__CONJUGATE1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Protocol': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__directLink_T': []
          ,'MT_pre__Def': []
          ,'MT_pre__StateMachine': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Seq': []
          ,'MT_pre__match_contains': []
          ,'MT_pre__Transition': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Vertex': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__StateMachineElement': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__hasArgs': []
          ,'MT_pre__Port': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__hasAttribute_S': []
          ,'MT_pre__hasAttribute_T': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__Condition': []
          ,'MT_pre__Attribute': [( 'MT_pre__hasAttribute_S', self.createNewMT_pre__hasAttribute_S)]
          ,'MT_pre__Print': []
          ,'MT_pre__Constant': []
          ,'MT_pre__ExitPoint': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Pattern': []
          ,'MT_pre__TransitionType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Capsule': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__ListenBranch': []
          ,'MT_pre__ProcDef': []
          ,'MT_pre__Delay': []
          ,'MT_pre__Add': []
          ,'MT_pre__Trigger_S': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Proc': []
          ,'MT_pre__Trigger_T': []
          ,'MT_pre__PLUGIN2': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Action': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Model_T': []
          ,'MT_pre__Model_S': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__CapsuleRole': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__leftExpr': []
          ,'MT_pre__FIXED0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Equation': [] }
    self.ConnectivityMap['MT_pre__Name']={
           'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__OPTIONAL1': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__backward_link': []
          ,'MT_pre__Expression': []
          ,'MT_pre__PhysicalThread': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__PortRef': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__PortConnectorRef': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Name': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__RoleType': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Module': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Thread': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__indirectLink_S': []
          ,'MT_pre__ConditionBranch': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__BASE0': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__NamedElement': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Element': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__OUT2': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__OUT1': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__LocalDef': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Expr': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Signal': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__MetaModelElement_T': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__MetaModelElement_S': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Package': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__apply_contains': []
          ,'MT_pre__ConditionSet': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__State': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__MatchCase': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__PortType': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Match': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__paired_with': []
          ,'MT_pre__PackageContainer': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__IN1': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__IN0': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__LogicalThread': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Operation': []
          ,'MT_pre__FuncDef': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__SIBLING0': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__InitialPoint': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__PortConnector': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Null': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Par': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__ParIndexed': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__rightExpr': []
          ,'MT_pre__Listen': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__MatchModel': []
          ,'MT_pre__Site': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__New': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Concat': []
          ,'MT_pre__trace_link': []
          ,'MT_pre__SignalType': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Subtract': []
          ,'MT_pre__directLink_S': []
          ,'MT_pre__Inst': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__PythonRef': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__EntryPoint': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__CONJUGATE1': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Protocol': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__directLink_T': []
          ,'MT_pre__Def': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__StateMachine': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Seq': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__match_contains': []
          ,'MT_pre__Transition': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Vertex': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__StateMachineElement': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__hasArgs': []
          ,'MT_pre__Port': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__hasAttribute_S': []
          ,'MT_pre__hasAttribute_T': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__Condition': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Attribute': [( 'MT_pre__hasAttribute_T', self.createNewMT_pre__hasAttribute_T)]
          ,'MT_pre__Print': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Constant': []
          ,'MT_pre__ExitPoint': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Pattern': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__TransitionType': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Capsule': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__ListenBranch': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__ProcDef': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Delay': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Add': []
          ,'MT_pre__Trigger_S': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Proc': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Trigger_T': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__PLUGIN2': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Action': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Model_T': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Model_S': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__CapsuleRole': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__leftExpr': []
          ,'MT_pre__FIXED0': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Equation': [] }
    self.ConnectivityMap['MT_pre__Capsule']={
           'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__OPTIONAL1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__backward_link': []
          ,'MT_pre__Expression': []
          ,'MT_pre__PhysicalThread': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__PortRef': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__PortConnectorRef': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Name': []
          ,'MT_pre__RoleType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Module': []
          ,'MT_pre__Thread': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__indirectLink_S': []
          ,'MT_pre__ConditionBranch': []
          ,'MT_pre__BASE0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__NamedElement': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Element': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__OUT2': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__OUT1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__LocalDef': []
          ,'MT_pre__Expr': []
          ,'MT_pre__Signal': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__MetaModelElement_T': []
          ,'MT_pre__MetaModelElement_S': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Package': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__apply_contains': []
          ,'MT_pre__ConditionSet': []
          ,'MT_pre__State': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__MatchCase': []
          ,'MT_pre__PortType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Match': []
          ,'MT_pre__paired_with': []
          ,'MT_pre__PackageContainer': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__IN1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__IN0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__LogicalThread': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Operation': []
          ,'MT_pre__FuncDef': []
          ,'MT_pre__SIBLING0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__InitialPoint': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__PortConnector': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Null': []
          ,'MT_pre__Par': []
          ,'MT_pre__ParIndexed': []
          ,'MT_pre__rightExpr': []
          ,'MT_pre__Listen': []
          ,'MT_pre__MatchModel': []
          ,'MT_pre__Site': []
          ,'MT_pre__New': []
          ,'MT_pre__Concat': []
          ,'MT_pre__trace_link': []
          ,'MT_pre__SignalType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Subtract': []
          ,'MT_pre__directLink_S': []
          ,'MT_pre__Inst': []
          ,'MT_pre__PythonRef': []
          ,'MT_pre__EntryPoint': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__CONJUGATE1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Protocol': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__directLink_T': []
          ,'MT_pre__Def': []
          ,'MT_pre__StateMachine': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Seq': []
          ,'MT_pre__match_contains': []
          ,'MT_pre__Transition': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Vertex': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__StateMachineElement': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__hasArgs': []
          ,'MT_pre__Port': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__hasAttribute_S': []
          ,'MT_pre__hasAttribute_T': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__Condition': []
          ,'MT_pre__Attribute': [( 'MT_pre__hasAttribute_S', self.createNewMT_pre__hasAttribute_S)]
          ,'MT_pre__Print': []
          ,'MT_pre__Constant': []
          ,'MT_pre__ExitPoint': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Pattern': []
          ,'MT_pre__TransitionType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Capsule': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__ListenBranch': []
          ,'MT_pre__ProcDef': []
          ,'MT_pre__Delay': []
          ,'MT_pre__Add': []
          ,'MT_pre__Trigger_S': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Proc': []
          ,'MT_pre__Trigger_T': []
          ,'MT_pre__PLUGIN2': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Action': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Model_T': []
          ,'MT_pre__Model_S': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__CapsuleRole': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__leftExpr': []
          ,'MT_pre__FIXED0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Equation': [] }
    self.ConnectivityMap['MT_pre__Module']={
           'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__OPTIONAL1': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__backward_link': []
          ,'MT_pre__Expression': []
          ,'MT_pre__PhysicalThread': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__PortRef': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__PortConnectorRef': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Name': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__RoleType': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Module': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Thread': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__indirectLink_S': []
          ,'MT_pre__ConditionBranch': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__BASE0': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__NamedElement': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Element': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__OUT2': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__OUT1': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__LocalDef': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Expr': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Signal': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__MetaModelElement_T': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__MetaModelElement_S': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Package': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__apply_contains': []
          ,'MT_pre__ConditionSet': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__State': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__MatchCase': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__PortType': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Match': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__paired_with': []
          ,'MT_pre__PackageContainer': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__IN1': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__IN0': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__LogicalThread': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Operation': []
          ,'MT_pre__FuncDef': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__SIBLING0': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__InitialPoint': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__PortConnector': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Null': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Par': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__ParIndexed': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__rightExpr': []
          ,'MT_pre__Listen': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__MatchModel': []
          ,'MT_pre__Site': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__New': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Concat': []
          ,'MT_pre__trace_link': []
          ,'MT_pre__SignalType': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Subtract': []
          ,'MT_pre__directLink_S': []
          ,'MT_pre__Inst': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__PythonRef': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__EntryPoint': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__CONJUGATE1': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Protocol': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__directLink_T': []
          ,'MT_pre__Def': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__StateMachine': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Seq': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__match_contains': []
          ,'MT_pre__Transition': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Vertex': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__StateMachineElement': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__hasArgs': []
          ,'MT_pre__Port': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__hasAttribute_S': []
          ,'MT_pre__hasAttribute_T': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__Condition': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Attribute': [( 'MT_pre__hasAttribute_T', self.createNewMT_pre__hasAttribute_T)]
          ,'MT_pre__Print': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Constant': []
          ,'MT_pre__ExitPoint': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Pattern': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__TransitionType': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Capsule': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__ListenBranch': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__ProcDef': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Delay': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Add': []
          ,'MT_pre__Trigger_S': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Proc': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Trigger_T': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__PLUGIN2': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Action': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Model_T': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Model_S': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__CapsuleRole': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__leftExpr': []
          ,'MT_pre__FIXED0': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Equation': [] }
    self.ConnectivityMap['MT_pre__Thread']={
           'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__OPTIONAL1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__backward_link': []
          ,'MT_pre__Expression': []
          ,'MT_pre__PhysicalThread': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__PortRef': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__PortConnectorRef': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Name': []
          ,'MT_pre__RoleType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Module': []
          ,'MT_pre__Thread': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__indirectLink_S': []
          ,'MT_pre__ConditionBranch': []
          ,'MT_pre__BASE0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__NamedElement': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Element': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__OUT2': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__OUT1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__LocalDef': []
          ,'MT_pre__Expr': []
          ,'MT_pre__Signal': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__MetaModelElement_T': []
          ,'MT_pre__MetaModelElement_S': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Package': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__apply_contains': []
          ,'MT_pre__ConditionSet': []
          ,'MT_pre__State': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__MatchCase': []
          ,'MT_pre__PortType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Match': []
          ,'MT_pre__paired_with': []
          ,'MT_pre__PackageContainer': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__IN1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__IN0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__LogicalThread': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Operation': []
          ,'MT_pre__FuncDef': []
          ,'MT_pre__SIBLING0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__InitialPoint': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__PortConnector': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Null': []
          ,'MT_pre__Par': []
          ,'MT_pre__ParIndexed': []
          ,'MT_pre__rightExpr': []
          ,'MT_pre__Listen': []
          ,'MT_pre__MatchModel': []
          ,'MT_pre__Site': []
          ,'MT_pre__New': []
          ,'MT_pre__Concat': []
          ,'MT_pre__trace_link': []
          ,'MT_pre__SignalType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Subtract': []
          ,'MT_pre__directLink_S': []
          ,'MT_pre__Inst': []
          ,'MT_pre__PythonRef': []
          ,'MT_pre__EntryPoint': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__CONJUGATE1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Protocol': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__directLink_T': []
          ,'MT_pre__Def': []
          ,'MT_pre__StateMachine': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Seq': []
          ,'MT_pre__match_contains': []
          ,'MT_pre__Transition': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Vertex': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__StateMachineElement': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__hasArgs': []
          ,'MT_pre__Port': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__hasAttribute_S': []
          ,'MT_pre__hasAttribute_T': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__Condition': []
          ,'MT_pre__Attribute': [( 'MT_pre__hasAttribute_S', self.createNewMT_pre__hasAttribute_S)]
          ,'MT_pre__Print': []
          ,'MT_pre__Constant': []
          ,'MT_pre__ExitPoint': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Pattern': []
          ,'MT_pre__TransitionType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Capsule': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__ListenBranch': []
          ,'MT_pre__ProcDef': []
          ,'MT_pre__Delay': []
          ,'MT_pre__Add': []
          ,'MT_pre__Trigger_S': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Proc': []
          ,'MT_pre__Trigger_T': []
          ,'MT_pre__PLUGIN2': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Action': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Model_T': []
          ,'MT_pre__Model_S': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__CapsuleRole': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__leftExpr': []
          ,'MT_pre__FIXED0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Equation': [] }
    self.ConnectivityMap['MT_pre__indirectLink_S']={
           'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__OPTIONAL1': []
          ,'MT_pre__backward_link': []
          ,'MT_pre__Expression': []
          ,'MT_pre__PhysicalThread': []
          ,'MT_pre__PortRef': []
          ,'MT_pre__PortConnectorRef': []
          ,'MT_pre__Name': []
          ,'MT_pre__RoleType': []
          ,'MT_pre__Module': []
          ,'MT_pre__Thread': []
          ,'MT_pre__indirectLink_S': [( 'MT_pre__MetaModelElement_S', self.createNewMT_pre__MetaModelElement_S), ( 'MT_pre__Element', self.createNewMT_pre__Element), ( 'MT_pre__NamedElement', self.createNewMT_pre__NamedElement), ( 'MT_pre__Trigger_S', self.createNewMT_pre__Trigger_S), ( 'MT_pre__Action', self.createNewMT_pre__Action), ( 'MT_pre__PortRef', self.createNewMT_pre__PortRef), ( 'MT_pre__PortConnectorRef', self.createNewMT_pre__PortConnectorRef), ( 'MT_pre__StateMachineElement', self.createNewMT_pre__StateMachineElement), ( 'MT_pre__Protocol', self.createNewMT_pre__Protocol), ( 'MT_pre__Signal', self.createNewMT_pre__Signal), ( 'MT_pre__Port', self.createNewMT_pre__Port), ( 'MT_pre__Vertex', self.createNewMT_pre__Vertex), ( 'MT_pre__InitialPoint', self.createNewMT_pre__InitialPoint), ( 'MT_pre__EntryPoint', self.createNewMT_pre__EntryPoint), ( 'MT_pre__ExitPoint', self.createNewMT_pre__ExitPoint), ( 'MT_pre__Transition', self.createNewMT_pre__Transition), ( 'MT_pre__StateMachine', self.createNewMT_pre__StateMachine), ( 'MT_pre__State', self.createNewMT_pre__State), ( 'MT_pre__Capsule', self.createNewMT_pre__Capsule), ( 'MT_pre__PackageContainer', self.createNewMT_pre__PackageContainer), ( 'MT_pre__Model_S', self.createNewMT_pre__Model_S), ( 'MT_pre__Package', self.createNewMT_pre__Package), ( 'MT_pre__CapsuleRole', self.createNewMT_pre__CapsuleRole), ( 'MT_pre__PortConnector', self.createNewMT_pre__PortConnector), ( 'MT_pre__Thread', self.createNewMT_pre__Thread), ( 'MT_pre__PhysicalThread', self.createNewMT_pre__PhysicalThread), ( 'MT_pre__LogicalThread', self.createNewMT_pre__LogicalThread), ( 'MT_pre__PortType', self.createNewMT_pre__PortType), ( 'MT_pre__BASE0', self.createNewMT_pre__BASE0), ( 'MT_pre__CONJUGATE1', self.createNewMT_pre__CONJUGATE1), ( 'MT_pre__SignalType', self.createNewMT_pre__SignalType), ( 'MT_pre__OUT1', self.createNewMT_pre__OUT1), ( 'MT_pre__IN0', self.createNewMT_pre__IN0), ( 'MT_pre__RoleType', self.createNewMT_pre__RoleType), ( 'MT_pre__FIXED0', self.createNewMT_pre__FIXED0), ( 'MT_pre__OPTIONAL1', self.createNewMT_pre__OPTIONAL1), ( 'MT_pre__PLUGIN2', self.createNewMT_pre__PLUGIN2), ( 'MT_pre__TransitionType', self.createNewMT_pre__TransitionType), ( 'MT_pre__SIBLING0', self.createNewMT_pre__SIBLING0), ( 'MT_pre__IN1', self.createNewMT_pre__IN1), ( 'MT_pre__OUT2', self.createNewMT_pre__OUT2)]
          ,'MT_pre__ConditionBranch': []
          ,'MT_pre__BASE0': []
          ,'MT_pre__NamedElement': []
          ,'MT_pre__Element': []
          ,'MT_pre__OUT2': []
          ,'MT_pre__OUT1': []
          ,'MT_pre__LocalDef': []
          ,'MT_pre__Expr': []
          ,'MT_pre__Signal': []
          ,'MT_pre__MetaModelElement_T': []
          ,'MT_pre__MetaModelElement_S': []
          ,'MT_pre__Package': []
          ,'MT_pre__apply_contains': []
          ,'MT_pre__ConditionSet': []
          ,'MT_pre__State': []
          ,'MT_pre__MatchCase': []
          ,'MT_pre__PortType': []
          ,'MT_pre__Match': []
          ,'MT_pre__paired_with': []
          ,'MT_pre__PackageContainer': []
          ,'MT_pre__IN1': []
          ,'MT_pre__IN0': []
          ,'MT_pre__LogicalThread': []
          ,'MT_pre__Operation': []
          ,'MT_pre__FuncDef': []
          ,'MT_pre__SIBLING0': []
          ,'MT_pre__InitialPoint': []
          ,'MT_pre__PortConnector': []
          ,'MT_pre__Null': []
          ,'MT_pre__Par': []
          ,'MT_pre__ParIndexed': []
          ,'MT_pre__rightExpr': []
          ,'MT_pre__Listen': []
          ,'MT_pre__MatchModel': []
          ,'MT_pre__Site': []
          ,'MT_pre__New': []
          ,'MT_pre__Concat': []
          ,'MT_pre__trace_link': []
          ,'MT_pre__SignalType': []
          ,'MT_pre__Subtract': []
          ,'MT_pre__directLink_S': [( 'MT_pre__MetaModelElement_S', self.createNewMT_pre__MetaModelElement_S), ( 'MT_pre__Element', self.createNewMT_pre__Element), ( 'MT_pre__NamedElement', self.createNewMT_pre__NamedElement), ( 'MT_pre__Trigger_S', self.createNewMT_pre__Trigger_S), ( 'MT_pre__Action', self.createNewMT_pre__Action), ( 'MT_pre__PortRef', self.createNewMT_pre__PortRef), ( 'MT_pre__PortConnectorRef', self.createNewMT_pre__PortConnectorRef), ( 'MT_pre__StateMachineElement', self.createNewMT_pre__StateMachineElement), ( 'MT_pre__Protocol', self.createNewMT_pre__Protocol), ( 'MT_pre__Signal', self.createNewMT_pre__Signal), ( 'MT_pre__Port', self.createNewMT_pre__Port), ( 'MT_pre__Vertex', self.createNewMT_pre__Vertex), ( 'MT_pre__InitialPoint', self.createNewMT_pre__InitialPoint), ( 'MT_pre__EntryPoint', self.createNewMT_pre__EntryPoint), ( 'MT_pre__ExitPoint', self.createNewMT_pre__ExitPoint), ( 'MT_pre__Transition', self.createNewMT_pre__Transition), ( 'MT_pre__StateMachine', self.createNewMT_pre__StateMachine), ( 'MT_pre__State', self.createNewMT_pre__State), ( 'MT_pre__Capsule', self.createNewMT_pre__Capsule), ( 'MT_pre__PackageContainer', self.createNewMT_pre__PackageContainer), ( 'MT_pre__Model_S', self.createNewMT_pre__Model_S), ( 'MT_pre__Package', self.createNewMT_pre__Package), ( 'MT_pre__CapsuleRole', self.createNewMT_pre__CapsuleRole), ( 'MT_pre__PortConnector', self.createNewMT_pre__PortConnector), ( 'MT_pre__Thread', self.createNewMT_pre__Thread), ( 'MT_pre__PhysicalThread', self.createNewMT_pre__PhysicalThread), ( 'MT_pre__LogicalThread', self.createNewMT_pre__LogicalThread), ( 'MT_pre__PortType', self.createNewMT_pre__PortType), ( 'MT_pre__BASE0', self.createNewMT_pre__BASE0), ( 'MT_pre__CONJUGATE1', self.createNewMT_pre__CONJUGATE1), ( 'MT_pre__SignalType', self.createNewMT_pre__SignalType), ( 'MT_pre__OUT1', self.createNewMT_pre__OUT1), ( 'MT_pre__IN0', self.createNewMT_pre__IN0), ( 'MT_pre__RoleType', self.createNewMT_pre__RoleType), ( 'MT_pre__FIXED0', self.createNewMT_pre__FIXED0), ( 'MT_pre__OPTIONAL1', self.createNewMT_pre__OPTIONAL1), ( 'MT_pre__PLUGIN2', self.createNewMT_pre__PLUGIN2), ( 'MT_pre__TransitionType', self.createNewMT_pre__TransitionType), ( 'MT_pre__SIBLING0', self.createNewMT_pre__SIBLING0), ( 'MT_pre__IN1', self.createNewMT_pre__IN1), ( 'MT_pre__OUT2', self.createNewMT_pre__OUT2)]
          ,'MT_pre__Inst': []
          ,'MT_pre__PythonRef': []
          ,'MT_pre__EntryPoint': []
          ,'MT_pre__CONJUGATE1': []
          ,'MT_pre__Protocol': []
          ,'MT_pre__directLink_T': []
          ,'MT_pre__Def': []
          ,'MT_pre__StateMachine': []
          ,'MT_pre__Seq': []
          ,'MT_pre__match_contains': []
          ,'MT_pre__Transition': []
          ,'MT_pre__Vertex': []
          ,'MT_pre__StateMachineElement': []
          ,'MT_pre__hasArgs': []
          ,'MT_pre__Port': []
          ,'MT_pre__hasAttribute_S': [( 'MT_pre__MetaModelElement_S', self.createNewMT_pre__MetaModelElement_S), ( 'MT_pre__Element', self.createNewMT_pre__Element), ( 'MT_pre__NamedElement', self.createNewMT_pre__NamedElement), ( 'MT_pre__Trigger_S', self.createNewMT_pre__Trigger_S), ( 'MT_pre__Action', self.createNewMT_pre__Action), ( 'MT_pre__PortRef', self.createNewMT_pre__PortRef), ( 'MT_pre__PortConnectorRef', self.createNewMT_pre__PortConnectorRef), ( 'MT_pre__StateMachineElement', self.createNewMT_pre__StateMachineElement), ( 'MT_pre__Protocol', self.createNewMT_pre__Protocol), ( 'MT_pre__Signal', self.createNewMT_pre__Signal), ( 'MT_pre__Port', self.createNewMT_pre__Port), ( 'MT_pre__Vertex', self.createNewMT_pre__Vertex), ( 'MT_pre__InitialPoint', self.createNewMT_pre__InitialPoint), ( 'MT_pre__EntryPoint', self.createNewMT_pre__EntryPoint), ( 'MT_pre__ExitPoint', self.createNewMT_pre__ExitPoint), ( 'MT_pre__Transition', self.createNewMT_pre__Transition), ( 'MT_pre__StateMachine', self.createNewMT_pre__StateMachine), ( 'MT_pre__State', self.createNewMT_pre__State), ( 'MT_pre__Capsule', self.createNewMT_pre__Capsule), ( 'MT_pre__PackageContainer', self.createNewMT_pre__PackageContainer), ( 'MT_pre__Model_S', self.createNewMT_pre__Model_S), ( 'MT_pre__Package', self.createNewMT_pre__Package), ( 'MT_pre__CapsuleRole', self.createNewMT_pre__CapsuleRole), ( 'MT_pre__PortConnector', self.createNewMT_pre__PortConnector), ( 'MT_pre__Thread', self.createNewMT_pre__Thread), ( 'MT_pre__PhysicalThread', self.createNewMT_pre__PhysicalThread), ( 'MT_pre__LogicalThread', self.createNewMT_pre__LogicalThread), ( 'MT_pre__PortType', self.createNewMT_pre__PortType), ( 'MT_pre__BASE0', self.createNewMT_pre__BASE0), ( 'MT_pre__CONJUGATE1', self.createNewMT_pre__CONJUGATE1), ( 'MT_pre__SignalType', self.createNewMT_pre__SignalType), ( 'MT_pre__OUT1', self.createNewMT_pre__OUT1), ( 'MT_pre__IN0', self.createNewMT_pre__IN0), ( 'MT_pre__RoleType', self.createNewMT_pre__RoleType), ( 'MT_pre__FIXED0', self.createNewMT_pre__FIXED0), ( 'MT_pre__OPTIONAL1', self.createNewMT_pre__OPTIONAL1), ( 'MT_pre__PLUGIN2', self.createNewMT_pre__PLUGIN2), ( 'MT_pre__TransitionType', self.createNewMT_pre__TransitionType), ( 'MT_pre__SIBLING0', self.createNewMT_pre__SIBLING0), ( 'MT_pre__IN1', self.createNewMT_pre__IN1), ( 'MT_pre__OUT2', self.createNewMT_pre__OUT2)]
          ,'MT_pre__hasAttribute_T': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__Condition': []
          ,'MT_pre__Attribute': []
          ,'MT_pre__Print': []
          ,'MT_pre__Constant': []
          ,'MT_pre__ExitPoint': []
          ,'MT_pre__Pattern': []
          ,'MT_pre__TransitionType': []
          ,'MT_pre__Capsule': []
          ,'MT_pre__ListenBranch': []
          ,'MT_pre__ProcDef': []
          ,'MT_pre__Delay': []
          ,'MT_pre__Add': []
          ,'MT_pre__Trigger_S': []
          ,'MT_pre__Proc': []
          ,'MT_pre__Trigger_T': []
          ,'MT_pre__PLUGIN2': []
          ,'MT_pre__Action': []
          ,'MT_pre__Model_T': []
          ,'MT_pre__Model_S': []
          ,'MT_pre__CapsuleRole': []
          ,'MT_pre__leftExpr': []
          ,'MT_pre__FIXED0': []
          ,'MT_pre__Equation': [] }
    self.ConnectivityMap['MT_pre__ConditionBranch']={
           'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__OPTIONAL1': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__backward_link': []
          ,'MT_pre__Expression': []
          ,'MT_pre__PhysicalThread': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__PortRef': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__PortConnectorRef': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Name': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__RoleType': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Module': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Thread': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__indirectLink_S': []
          ,'MT_pre__ConditionBranch': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__BASE0': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__NamedElement': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Element': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__OUT2': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__OUT1': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__LocalDef': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Expr': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Signal': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__MetaModelElement_T': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__MetaModelElement_S': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Package': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__apply_contains': []
          ,'MT_pre__ConditionSet': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__State': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__MatchCase': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__PortType': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Match': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__paired_with': []
          ,'MT_pre__PackageContainer': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__IN1': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__IN0': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__LogicalThread': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Operation': []
          ,'MT_pre__FuncDef': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__SIBLING0': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__InitialPoint': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__PortConnector': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Null': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Par': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__ParIndexed': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__rightExpr': []
          ,'MT_pre__Listen': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__MatchModel': []
          ,'MT_pre__Site': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__New': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Concat': []
          ,'MT_pre__trace_link': []
          ,'MT_pre__SignalType': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Subtract': []
          ,'MT_pre__directLink_S': []
          ,'MT_pre__Inst': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__PythonRef': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__EntryPoint': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__CONJUGATE1': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Protocol': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__directLink_T': []
          ,'MT_pre__Def': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__StateMachine': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Seq': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__match_contains': []
          ,'MT_pre__Transition': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Vertex': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__StateMachineElement': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__hasArgs': []
          ,'MT_pre__Port': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__hasAttribute_S': []
          ,'MT_pre__hasAttribute_T': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__Condition': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Attribute': [( 'MT_pre__hasAttribute_T', self.createNewMT_pre__hasAttribute_T)]
          ,'MT_pre__Print': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Constant': []
          ,'MT_pre__ExitPoint': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Pattern': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__TransitionType': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Capsule': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__ListenBranch': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__ProcDef': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Delay': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Add': []
          ,'MT_pre__Trigger_S': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Proc': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Trigger_T': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__PLUGIN2': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Action': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Model_T': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Model_S': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__CapsuleRole': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__leftExpr': []
          ,'MT_pre__FIXED0': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Equation': [] }
    self.ConnectivityMap['MT_pre__Delay']={
           'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__OPTIONAL1': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__backward_link': []
          ,'MT_pre__Expression': []
          ,'MT_pre__PhysicalThread': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__PortRef': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__PortConnectorRef': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Name': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__RoleType': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Module': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Thread': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__indirectLink_S': []
          ,'MT_pre__ConditionBranch': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__BASE0': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__NamedElement': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Element': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__OUT2': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__OUT1': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__LocalDef': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Expr': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Signal': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__MetaModelElement_T': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__MetaModelElement_S': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Package': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__apply_contains': []
          ,'MT_pre__ConditionSet': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__State': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__MatchCase': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__PortType': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Match': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__paired_with': []
          ,'MT_pre__PackageContainer': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__IN1': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__IN0': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__LogicalThread': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Operation': []
          ,'MT_pre__FuncDef': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__SIBLING0': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__InitialPoint': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__PortConnector': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Null': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Par': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__ParIndexed': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__rightExpr': []
          ,'MT_pre__Listen': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__MatchModel': []
          ,'MT_pre__Site': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__New': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Concat': []
          ,'MT_pre__trace_link': []
          ,'MT_pre__SignalType': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Subtract': []
          ,'MT_pre__directLink_S': []
          ,'MT_pre__Inst': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__PythonRef': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__EntryPoint': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__CONJUGATE1': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Protocol': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__directLink_T': []
          ,'MT_pre__Def': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__StateMachine': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Seq': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__match_contains': []
          ,'MT_pre__Transition': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Vertex': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__StateMachineElement': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__hasArgs': []
          ,'MT_pre__Port': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__hasAttribute_S': []
          ,'MT_pre__hasAttribute_T': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__Condition': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Attribute': [( 'MT_pre__hasAttribute_T', self.createNewMT_pre__hasAttribute_T)]
          ,'MT_pre__Print': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Constant': []
          ,'MT_pre__ExitPoint': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Pattern': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__TransitionType': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Capsule': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__ListenBranch': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__ProcDef': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Delay': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Add': []
          ,'MT_pre__Trigger_S': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Proc': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Trigger_T': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__PLUGIN2': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Action': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Model_T': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Model_S': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__CapsuleRole': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__leftExpr': []
          ,'MT_pre__FIXED0': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Equation': [] }
    self.ConnectivityMap['MT_pre__NamedElement']={
           'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__OPTIONAL1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__backward_link': []
          ,'MT_pre__Expression': []
          ,'MT_pre__PhysicalThread': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__PortRef': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__PortConnectorRef': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Name': []
          ,'MT_pre__RoleType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Module': []
          ,'MT_pre__Thread': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__indirectLink_S': []
          ,'MT_pre__ConditionBranch': []
          ,'MT_pre__BASE0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__NamedElement': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Element': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__OUT2': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__OUT1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__LocalDef': []
          ,'MT_pre__Expr': []
          ,'MT_pre__Signal': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__MetaModelElement_T': []
          ,'MT_pre__MetaModelElement_S': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Package': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__apply_contains': []
          ,'MT_pre__ConditionSet': []
          ,'MT_pre__State': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__MatchCase': []
          ,'MT_pre__PortType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Match': []
          ,'MT_pre__paired_with': []
          ,'MT_pre__PackageContainer': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__IN1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__IN0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__LogicalThread': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Operation': []
          ,'MT_pre__FuncDef': []
          ,'MT_pre__SIBLING0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__InitialPoint': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__PortConnector': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Null': []
          ,'MT_pre__Par': []
          ,'MT_pre__ParIndexed': []
          ,'MT_pre__rightExpr': []
          ,'MT_pre__Listen': []
          ,'MT_pre__MatchModel': []
          ,'MT_pre__Site': []
          ,'MT_pre__New': []
          ,'MT_pre__Concat': []
          ,'MT_pre__trace_link': []
          ,'MT_pre__SignalType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Subtract': []
          ,'MT_pre__directLink_S': []
          ,'MT_pre__Inst': []
          ,'MT_pre__PythonRef': []
          ,'MT_pre__EntryPoint': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__CONJUGATE1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Protocol': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__directLink_T': []
          ,'MT_pre__Def': []
          ,'MT_pre__StateMachine': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Seq': []
          ,'MT_pre__match_contains': []
          ,'MT_pre__Transition': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Vertex': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__StateMachineElement': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__hasArgs': []
          ,'MT_pre__Port': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__hasAttribute_S': []
          ,'MT_pre__hasAttribute_T': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__Condition': []
          ,'MT_pre__Attribute': [( 'MT_pre__hasAttribute_S', self.createNewMT_pre__hasAttribute_S)]
          ,'MT_pre__Print': []
          ,'MT_pre__Constant': []
          ,'MT_pre__ExitPoint': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Pattern': []
          ,'MT_pre__TransitionType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Capsule': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__ListenBranch': []
          ,'MT_pre__ProcDef': []
          ,'MT_pre__Delay': []
          ,'MT_pre__Add': []
          ,'MT_pre__Trigger_S': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Proc': []
          ,'MT_pre__Trigger_T': []
          ,'MT_pre__PLUGIN2': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Action': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Model_T': []
          ,'MT_pre__Model_S': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__CapsuleRole': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__leftExpr': []
          ,'MT_pre__FIXED0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Equation': [] }
    self.ConnectivityMap['MT_pre__Element']={
           'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__OPTIONAL1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__backward_link': []
          ,'MT_pre__Expression': []
          ,'MT_pre__PhysicalThread': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__PortRef': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__PortConnectorRef': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Name': []
          ,'MT_pre__RoleType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Module': []
          ,'MT_pre__Thread': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__indirectLink_S': []
          ,'MT_pre__ConditionBranch': []
          ,'MT_pre__BASE0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__NamedElement': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Element': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__OUT2': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__OUT1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__LocalDef': []
          ,'MT_pre__Expr': []
          ,'MT_pre__Signal': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__MetaModelElement_T': []
          ,'MT_pre__MetaModelElement_S': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Package': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__apply_contains': []
          ,'MT_pre__ConditionSet': []
          ,'MT_pre__State': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__MatchCase': []
          ,'MT_pre__PortType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Match': []
          ,'MT_pre__paired_with': []
          ,'MT_pre__PackageContainer': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__IN1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__IN0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__LogicalThread': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Operation': []
          ,'MT_pre__FuncDef': []
          ,'MT_pre__SIBLING0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__InitialPoint': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__PortConnector': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Null': []
          ,'MT_pre__Par': []
          ,'MT_pre__ParIndexed': []
          ,'MT_pre__rightExpr': []
          ,'MT_pre__Listen': []
          ,'MT_pre__MatchModel': []
          ,'MT_pre__Site': []
          ,'MT_pre__New': []
          ,'MT_pre__Concat': []
          ,'MT_pre__trace_link': []
          ,'MT_pre__SignalType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Subtract': []
          ,'MT_pre__directLink_S': []
          ,'MT_pre__Inst': []
          ,'MT_pre__PythonRef': []
          ,'MT_pre__EntryPoint': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__CONJUGATE1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Protocol': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__directLink_T': []
          ,'MT_pre__Def': []
          ,'MT_pre__StateMachine': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Seq': []
          ,'MT_pre__match_contains': []
          ,'MT_pre__Transition': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Vertex': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__StateMachineElement': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__hasArgs': []
          ,'MT_pre__Port': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__hasAttribute_S': []
          ,'MT_pre__hasAttribute_T': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__Condition': []
          ,'MT_pre__Attribute': [( 'MT_pre__hasAttribute_S', self.createNewMT_pre__hasAttribute_S)]
          ,'MT_pre__Print': []
          ,'MT_pre__Constant': []
          ,'MT_pre__ExitPoint': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Pattern': []
          ,'MT_pre__TransitionType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Capsule': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__ListenBranch': []
          ,'MT_pre__ProcDef': []
          ,'MT_pre__Delay': []
          ,'MT_pre__Add': []
          ,'MT_pre__Trigger_S': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Proc': []
          ,'MT_pre__Trigger_T': []
          ,'MT_pre__PLUGIN2': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Action': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Model_T': []
          ,'MT_pre__Model_S': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__CapsuleRole': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__leftExpr': []
          ,'MT_pre__FIXED0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Equation': [] }
    self.ConnectivityMap['MT_pre__OUT2']={
           'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__OPTIONAL1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__backward_link': []
          ,'MT_pre__Expression': []
          ,'MT_pre__PhysicalThread': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__PortRef': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__PortConnectorRef': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Name': []
          ,'MT_pre__RoleType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Module': []
          ,'MT_pre__Thread': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__indirectLink_S': []
          ,'MT_pre__ConditionBranch': []
          ,'MT_pre__BASE0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__NamedElement': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Element': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__OUT2': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__OUT1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__LocalDef': []
          ,'MT_pre__Expr': []
          ,'MT_pre__Signal': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__MetaModelElement_T': []
          ,'MT_pre__MetaModelElement_S': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Package': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__apply_contains': []
          ,'MT_pre__ConditionSet': []
          ,'MT_pre__State': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__MatchCase': []
          ,'MT_pre__PortType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Match': []
          ,'MT_pre__paired_with': []
          ,'MT_pre__PackageContainer': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__IN1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__IN0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__LogicalThread': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Operation': []
          ,'MT_pre__FuncDef': []
          ,'MT_pre__SIBLING0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__InitialPoint': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__PortConnector': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Null': []
          ,'MT_pre__Par': []
          ,'MT_pre__ParIndexed': []
          ,'MT_pre__rightExpr': []
          ,'MT_pre__Listen': []
          ,'MT_pre__MatchModel': []
          ,'MT_pre__Site': []
          ,'MT_pre__New': []
          ,'MT_pre__Concat': []
          ,'MT_pre__trace_link': []
          ,'MT_pre__SignalType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Subtract': []
          ,'MT_pre__directLink_S': []
          ,'MT_pre__Inst': []
          ,'MT_pre__PythonRef': []
          ,'MT_pre__EntryPoint': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__CONJUGATE1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Protocol': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__directLink_T': []
          ,'MT_pre__Def': []
          ,'MT_pre__StateMachine': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Seq': []
          ,'MT_pre__match_contains': []
          ,'MT_pre__Transition': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Vertex': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__StateMachineElement': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__hasArgs': []
          ,'MT_pre__Port': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__hasAttribute_S': []
          ,'MT_pre__hasAttribute_T': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__Condition': []
          ,'MT_pre__Attribute': [( 'MT_pre__hasAttribute_S', self.createNewMT_pre__hasAttribute_S)]
          ,'MT_pre__Print': []
          ,'MT_pre__Constant': []
          ,'MT_pre__ExitPoint': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Pattern': []
          ,'MT_pre__TransitionType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Capsule': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__ListenBranch': []
          ,'MT_pre__ProcDef': []
          ,'MT_pre__Delay': []
          ,'MT_pre__Add': []
          ,'MT_pre__Trigger_S': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Proc': []
          ,'MT_pre__Trigger_T': []
          ,'MT_pre__PLUGIN2': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Action': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Model_T': []
          ,'MT_pre__Model_S': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__CapsuleRole': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__leftExpr': []
          ,'MT_pre__FIXED0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Equation': [] }
    self.ConnectivityMap['MT_pre__OUT1']={
           'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__OPTIONAL1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__backward_link': []
          ,'MT_pre__Expression': []
          ,'MT_pre__PhysicalThread': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__PortRef': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__PortConnectorRef': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Name': []
          ,'MT_pre__RoleType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Module': []
          ,'MT_pre__Thread': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__indirectLink_S': []
          ,'MT_pre__ConditionBranch': []
          ,'MT_pre__BASE0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__NamedElement': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Element': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__OUT2': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__OUT1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__LocalDef': []
          ,'MT_pre__Expr': []
          ,'MT_pre__Signal': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__MetaModelElement_T': []
          ,'MT_pre__MetaModelElement_S': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Package': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__apply_contains': []
          ,'MT_pre__ConditionSet': []
          ,'MT_pre__State': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__MatchCase': []
          ,'MT_pre__PortType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Match': []
          ,'MT_pre__paired_with': []
          ,'MT_pre__PackageContainer': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__IN1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__IN0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__LogicalThread': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Operation': []
          ,'MT_pre__FuncDef': []
          ,'MT_pre__SIBLING0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__InitialPoint': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__PortConnector': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Null': []
          ,'MT_pre__Par': []
          ,'MT_pre__ParIndexed': []
          ,'MT_pre__rightExpr': []
          ,'MT_pre__Listen': []
          ,'MT_pre__MatchModel': []
          ,'MT_pre__Site': []
          ,'MT_pre__New': []
          ,'MT_pre__Concat': []
          ,'MT_pre__trace_link': []
          ,'MT_pre__SignalType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Subtract': []
          ,'MT_pre__directLink_S': []
          ,'MT_pre__Inst': []
          ,'MT_pre__PythonRef': []
          ,'MT_pre__EntryPoint': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__CONJUGATE1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Protocol': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__directLink_T': []
          ,'MT_pre__Def': []
          ,'MT_pre__StateMachine': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Seq': []
          ,'MT_pre__match_contains': []
          ,'MT_pre__Transition': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Vertex': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__StateMachineElement': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__hasArgs': []
          ,'MT_pre__Port': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__hasAttribute_S': []
          ,'MT_pre__hasAttribute_T': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__Condition': []
          ,'MT_pre__Attribute': [( 'MT_pre__hasAttribute_S', self.createNewMT_pre__hasAttribute_S)]
          ,'MT_pre__Print': []
          ,'MT_pre__Constant': []
          ,'MT_pre__ExitPoint': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Pattern': []
          ,'MT_pre__TransitionType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Capsule': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__ListenBranch': []
          ,'MT_pre__ProcDef': []
          ,'MT_pre__Delay': []
          ,'MT_pre__Add': []
          ,'MT_pre__Trigger_S': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Proc': []
          ,'MT_pre__Trigger_T': []
          ,'MT_pre__PLUGIN2': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Action': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Model_T': []
          ,'MT_pre__Model_S': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__CapsuleRole': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__leftExpr': []
          ,'MT_pre__FIXED0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Equation': [] }
    self.ConnectivityMap['MT_pre__LocalDef']={
           'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__OPTIONAL1': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__backward_link': []
          ,'MT_pre__Expression': []
          ,'MT_pre__PhysicalThread': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__PortRef': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__PortConnectorRef': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Name': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__RoleType': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Module': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Thread': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__indirectLink_S': []
          ,'MT_pre__ConditionBranch': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__BASE0': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__NamedElement': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Element': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__OUT2': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__OUT1': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__LocalDef': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Expr': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Signal': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__MetaModelElement_T': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__MetaModelElement_S': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Package': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__apply_contains': []
          ,'MT_pre__ConditionSet': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__State': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__MatchCase': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__PortType': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Match': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__paired_with': []
          ,'MT_pre__PackageContainer': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__IN1': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__IN0': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__LogicalThread': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Operation': []
          ,'MT_pre__FuncDef': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__SIBLING0': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__InitialPoint': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__PortConnector': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Null': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Par': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__ParIndexed': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__rightExpr': []
          ,'MT_pre__Listen': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__MatchModel': []
          ,'MT_pre__Site': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__New': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Concat': []
          ,'MT_pre__trace_link': []
          ,'MT_pre__SignalType': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Subtract': []
          ,'MT_pre__directLink_S': []
          ,'MT_pre__Inst': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__PythonRef': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__EntryPoint': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__CONJUGATE1': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Protocol': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__directLink_T': []
          ,'MT_pre__Def': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__StateMachine': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Seq': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__match_contains': []
          ,'MT_pre__Transition': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Vertex': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__StateMachineElement': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__hasArgs': []
          ,'MT_pre__Port': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__hasAttribute_S': []
          ,'MT_pre__hasAttribute_T': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__Condition': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Attribute': [( 'MT_pre__hasAttribute_T', self.createNewMT_pre__hasAttribute_T)]
          ,'MT_pre__Print': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Constant': []
          ,'MT_pre__ExitPoint': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Pattern': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__TransitionType': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Capsule': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__ListenBranch': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__ProcDef': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Delay': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Add': []
          ,'MT_pre__Trigger_S': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Proc': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Trigger_T': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__PLUGIN2': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Action': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Model_T': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Model_S': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__CapsuleRole': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__leftExpr': []
          ,'MT_pre__FIXED0': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Equation': [] }
    self.ConnectivityMap['MT_pre__Expr']={
           'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__OPTIONAL1': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__backward_link': []
          ,'MT_pre__Expression': []
          ,'MT_pre__PhysicalThread': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__PortRef': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__PortConnectorRef': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Name': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__RoleType': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Module': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Thread': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__indirectLink_S': []
          ,'MT_pre__ConditionBranch': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__BASE0': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__NamedElement': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Element': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__OUT2': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__OUT1': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__LocalDef': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Expr': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Signal': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__MetaModelElement_T': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__MetaModelElement_S': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Package': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__apply_contains': []
          ,'MT_pre__ConditionSet': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__State': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__MatchCase': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__PortType': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Match': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__paired_with': []
          ,'MT_pre__PackageContainer': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__IN1': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__IN0': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__LogicalThread': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Operation': []
          ,'MT_pre__FuncDef': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__SIBLING0': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__InitialPoint': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__PortConnector': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Null': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Par': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__ParIndexed': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__rightExpr': []
          ,'MT_pre__Listen': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__MatchModel': []
          ,'MT_pre__Site': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__New': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Concat': []
          ,'MT_pre__trace_link': []
          ,'MT_pre__SignalType': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Subtract': []
          ,'MT_pre__directLink_S': []
          ,'MT_pre__Inst': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__PythonRef': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__EntryPoint': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__CONJUGATE1': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Protocol': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__directLink_T': []
          ,'MT_pre__Def': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__StateMachine': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Seq': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__match_contains': []
          ,'MT_pre__Transition': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Vertex': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__StateMachineElement': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__hasArgs': []
          ,'MT_pre__Port': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__hasAttribute_S': []
          ,'MT_pre__hasAttribute_T': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__Condition': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Attribute': [( 'MT_pre__hasAttribute_T', self.createNewMT_pre__hasAttribute_T)]
          ,'MT_pre__Print': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Constant': []
          ,'MT_pre__ExitPoint': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Pattern': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__TransitionType': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Capsule': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__ListenBranch': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__ProcDef': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Delay': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Add': []
          ,'MT_pre__Trigger_S': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Proc': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Trigger_T': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__PLUGIN2': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Action': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Model_T': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Model_S': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__CapsuleRole': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__leftExpr': []
          ,'MT_pre__FIXED0': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Equation': [] }
    self.ConnectivityMap['MT_pre__Signal']={
           'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__OPTIONAL1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__backward_link': []
          ,'MT_pre__Expression': []
          ,'MT_pre__PhysicalThread': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__PortRef': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__PortConnectorRef': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Name': []
          ,'MT_pre__RoleType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Module': []
          ,'MT_pre__Thread': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__indirectLink_S': []
          ,'MT_pre__ConditionBranch': []
          ,'MT_pre__BASE0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__NamedElement': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Element': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__OUT2': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__OUT1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__LocalDef': []
          ,'MT_pre__Expr': []
          ,'MT_pre__Signal': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__MetaModelElement_T': []
          ,'MT_pre__MetaModelElement_S': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Package': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__apply_contains': []
          ,'MT_pre__ConditionSet': []
          ,'MT_pre__State': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__MatchCase': []
          ,'MT_pre__PortType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Match': []
          ,'MT_pre__paired_with': []
          ,'MT_pre__PackageContainer': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__IN1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__IN0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__LogicalThread': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Operation': []
          ,'MT_pre__FuncDef': []
          ,'MT_pre__SIBLING0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__InitialPoint': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__PortConnector': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Null': []
          ,'MT_pre__Par': []
          ,'MT_pre__ParIndexed': []
          ,'MT_pre__rightExpr': []
          ,'MT_pre__Listen': []
          ,'MT_pre__MatchModel': []
          ,'MT_pre__Site': []
          ,'MT_pre__New': []
          ,'MT_pre__Concat': []
          ,'MT_pre__trace_link': []
          ,'MT_pre__SignalType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Subtract': []
          ,'MT_pre__directLink_S': []
          ,'MT_pre__Inst': []
          ,'MT_pre__PythonRef': []
          ,'MT_pre__EntryPoint': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__CONJUGATE1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Protocol': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__directLink_T': []
          ,'MT_pre__Def': []
          ,'MT_pre__StateMachine': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Seq': []
          ,'MT_pre__match_contains': []
          ,'MT_pre__Transition': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Vertex': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__StateMachineElement': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__hasArgs': []
          ,'MT_pre__Port': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__hasAttribute_S': []
          ,'MT_pre__hasAttribute_T': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__Condition': []
          ,'MT_pre__Attribute': [( 'MT_pre__hasAttribute_S', self.createNewMT_pre__hasAttribute_S)]
          ,'MT_pre__Print': []
          ,'MT_pre__Constant': []
          ,'MT_pre__ExitPoint': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Pattern': []
          ,'MT_pre__TransitionType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Capsule': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__ListenBranch': []
          ,'MT_pre__ProcDef': []
          ,'MT_pre__Delay': []
          ,'MT_pre__Add': []
          ,'MT_pre__Trigger_S': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Proc': []
          ,'MT_pre__Trigger_T': []
          ,'MT_pre__PLUGIN2': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Action': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Model_T': []
          ,'MT_pre__Model_S': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__CapsuleRole': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__leftExpr': []
          ,'MT_pre__FIXED0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Equation': [] }
    self.ConnectivityMap['MT_pre__MetaModelElement_T']={
           'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__OPTIONAL1': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__backward_link': []
          ,'MT_pre__Expression': []
          ,'MT_pre__PhysicalThread': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__PortRef': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__PortConnectorRef': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Name': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__RoleType': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Module': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Thread': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__indirectLink_S': []
          ,'MT_pre__ConditionBranch': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__BASE0': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__NamedElement': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Element': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__OUT2': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__OUT1': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__LocalDef': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Expr': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Signal': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__MetaModelElement_T': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__MetaModelElement_S': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Package': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__apply_contains': []
          ,'MT_pre__ConditionSet': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__State': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__MatchCase': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__PortType': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Match': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__paired_with': []
          ,'MT_pre__PackageContainer': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__IN1': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__IN0': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__LogicalThread': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Operation': []
          ,'MT_pre__FuncDef': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__SIBLING0': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__InitialPoint': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__PortConnector': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Null': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Par': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__ParIndexed': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__rightExpr': []
          ,'MT_pre__Listen': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__MatchModel': []
          ,'MT_pre__Site': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__New': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Concat': []
          ,'MT_pre__trace_link': []
          ,'MT_pre__SignalType': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Subtract': []
          ,'MT_pre__directLink_S': []
          ,'MT_pre__Inst': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__PythonRef': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__EntryPoint': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__CONJUGATE1': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Protocol': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__directLink_T': []
          ,'MT_pre__Def': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__StateMachine': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Seq': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__match_contains': []
          ,'MT_pre__Transition': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Vertex': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__StateMachineElement': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__hasArgs': []
          ,'MT_pre__Port': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__hasAttribute_S': []
          ,'MT_pre__hasAttribute_T': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__Condition': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Attribute': [( 'MT_pre__hasAttribute_T', self.createNewMT_pre__hasAttribute_T)]
          ,'MT_pre__Print': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Constant': []
          ,'MT_pre__ExitPoint': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Pattern': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__TransitionType': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Capsule': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__ListenBranch': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__ProcDef': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Delay': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Add': []
          ,'MT_pre__Trigger_S': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Proc': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Trigger_T': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__PLUGIN2': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Action': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Model_T': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Model_S': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__CapsuleRole': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__leftExpr': []
          ,'MT_pre__FIXED0': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Equation': [] }
    self.ConnectivityMap['MT_pre__MetaModelElement_S']={
           'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__OPTIONAL1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__backward_link': []
          ,'MT_pre__Expression': []
          ,'MT_pre__PhysicalThread': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__PortRef': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__PortConnectorRef': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Name': []
          ,'MT_pre__RoleType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Module': []
          ,'MT_pre__Thread': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__indirectLink_S': []
          ,'MT_pre__ConditionBranch': []
          ,'MT_pre__BASE0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__NamedElement': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Element': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__OUT2': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__OUT1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__LocalDef': []
          ,'MT_pre__Expr': []
          ,'MT_pre__Signal': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__MetaModelElement_T': []
          ,'MT_pre__MetaModelElement_S': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Package': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__apply_contains': []
          ,'MT_pre__ConditionSet': []
          ,'MT_pre__State': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__MatchCase': []
          ,'MT_pre__PortType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Match': []
          ,'MT_pre__paired_with': []
          ,'MT_pre__PackageContainer': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__IN1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__IN0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__LogicalThread': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Operation': []
          ,'MT_pre__FuncDef': []
          ,'MT_pre__SIBLING0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__InitialPoint': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__PortConnector': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Null': []
          ,'MT_pre__Par': []
          ,'MT_pre__ParIndexed': []
          ,'MT_pre__rightExpr': []
          ,'MT_pre__Listen': []
          ,'MT_pre__MatchModel': []
          ,'MT_pre__Site': []
          ,'MT_pre__New': []
          ,'MT_pre__Concat': []
          ,'MT_pre__trace_link': []
          ,'MT_pre__SignalType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Subtract': []
          ,'MT_pre__directLink_S': []
          ,'MT_pre__Inst': []
          ,'MT_pre__PythonRef': []
          ,'MT_pre__EntryPoint': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__CONJUGATE1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Protocol': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__directLink_T': []
          ,'MT_pre__Def': []
          ,'MT_pre__StateMachine': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Seq': []
          ,'MT_pre__match_contains': []
          ,'MT_pre__Transition': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Vertex': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__StateMachineElement': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__hasArgs': []
          ,'MT_pre__Port': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__hasAttribute_S': []
          ,'MT_pre__hasAttribute_T': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__Condition': []
          ,'MT_pre__Attribute': [( 'MT_pre__hasAttribute_S', self.createNewMT_pre__hasAttribute_S)]
          ,'MT_pre__Print': []
          ,'MT_pre__Constant': []
          ,'MT_pre__ExitPoint': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Pattern': []
          ,'MT_pre__TransitionType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Capsule': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__ListenBranch': []
          ,'MT_pre__ProcDef': []
          ,'MT_pre__Delay': []
          ,'MT_pre__Add': []
          ,'MT_pre__Trigger_S': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Proc': []
          ,'MT_pre__Trigger_T': []
          ,'MT_pre__PLUGIN2': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Action': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Model_T': []
          ,'MT_pre__Model_S': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__CapsuleRole': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__leftExpr': []
          ,'MT_pre__FIXED0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Equation': [] }
    self.ConnectivityMap['MT_pre__Package']={
           'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__OPTIONAL1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__backward_link': []
          ,'MT_pre__Expression': []
          ,'MT_pre__PhysicalThread': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__PortRef': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__PortConnectorRef': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Name': []
          ,'MT_pre__RoleType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Module': []
          ,'MT_pre__Thread': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__indirectLink_S': []
          ,'MT_pre__ConditionBranch': []
          ,'MT_pre__BASE0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__NamedElement': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Element': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__OUT2': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__OUT1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__LocalDef': []
          ,'MT_pre__Expr': []
          ,'MT_pre__Signal': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__MetaModelElement_T': []
          ,'MT_pre__MetaModelElement_S': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Package': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__apply_contains': []
          ,'MT_pre__ConditionSet': []
          ,'MT_pre__State': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__MatchCase': []
          ,'MT_pre__PortType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Match': []
          ,'MT_pre__paired_with': []
          ,'MT_pre__PackageContainer': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__IN1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__IN0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__LogicalThread': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Operation': []
          ,'MT_pre__FuncDef': []
          ,'MT_pre__SIBLING0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__InitialPoint': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__PortConnector': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Null': []
          ,'MT_pre__Par': []
          ,'MT_pre__ParIndexed': []
          ,'MT_pre__rightExpr': []
          ,'MT_pre__Listen': []
          ,'MT_pre__MatchModel': []
          ,'MT_pre__Site': []
          ,'MT_pre__New': []
          ,'MT_pre__Concat': []
          ,'MT_pre__trace_link': []
          ,'MT_pre__SignalType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Subtract': []
          ,'MT_pre__directLink_S': []
          ,'MT_pre__Inst': []
          ,'MT_pre__PythonRef': []
          ,'MT_pre__EntryPoint': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__CONJUGATE1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Protocol': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__directLink_T': []
          ,'MT_pre__Def': []
          ,'MT_pre__StateMachine': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Seq': []
          ,'MT_pre__match_contains': []
          ,'MT_pre__Transition': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Vertex': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__StateMachineElement': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__hasArgs': []
          ,'MT_pre__Port': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__hasAttribute_S': []
          ,'MT_pre__hasAttribute_T': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__Condition': []
          ,'MT_pre__Attribute': [( 'MT_pre__hasAttribute_S', self.createNewMT_pre__hasAttribute_S)]
          ,'MT_pre__Print': []
          ,'MT_pre__Constant': []
          ,'MT_pre__ExitPoint': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Pattern': []
          ,'MT_pre__TransitionType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Capsule': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__ListenBranch': []
          ,'MT_pre__ProcDef': []
          ,'MT_pre__Delay': []
          ,'MT_pre__Add': []
          ,'MT_pre__Trigger_S': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Proc': []
          ,'MT_pre__Trigger_T': []
          ,'MT_pre__PLUGIN2': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Action': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Model_T': []
          ,'MT_pre__Model_S': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__CapsuleRole': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__leftExpr': []
          ,'MT_pre__FIXED0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Equation': [] }
    self.ConnectivityMap['MT_pre__apply_contains']={
           'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__OPTIONAL1': []
          ,'MT_pre__backward_link': [( 'MT_pre__MetaModelElement_T', self.createNewMT_pre__MetaModelElement_T), ( 'MT_pre__Def', self.createNewMT_pre__Def), ( 'MT_pre__Expr', self.createNewMT_pre__Expr), ( 'MT_pre__Pattern', self.createNewMT_pre__Pattern), ( 'MT_pre__Proc', self.createNewMT_pre__Proc), ( 'MT_pre__ProcDef', self.createNewMT_pre__ProcDef), ( 'MT_pre__FuncDef', self.createNewMT_pre__FuncDef), ( 'MT_pre__Name', self.createNewMT_pre__Name), ( 'MT_pre__PythonRef', self.createNewMT_pre__PythonRef), ( 'MT_pre__Module', self.createNewMT_pre__Module), ( 'MT_pre__Null', self.createNewMT_pre__Null), ( 'MT_pre__Trigger_T', self.createNewMT_pre__Trigger_T), ( 'MT_pre__Listen', self.createNewMT_pre__Listen), ( 'MT_pre__ConditionBranch', self.createNewMT_pre__ConditionBranch), ( 'MT_pre__ListenBranch', self.createNewMT_pre__ListenBranch), ( 'MT_pre__Site', self.createNewMT_pre__Site), ( 'MT_pre__Model_T', self.createNewMT_pre__Model_T), ( 'MT_pre__MatchCase', self.createNewMT_pre__MatchCase), ( 'MT_pre__Condition', self.createNewMT_pre__Condition), ( 'MT_pre__New', self.createNewMT_pre__New), ( 'MT_pre__Delay', self.createNewMT_pre__Delay), ( 'MT_pre__Par', self.createNewMT_pre__Par), ( 'MT_pre__ParIndexed', self.createNewMT_pre__ParIndexed), ( 'MT_pre__Inst', self.createNewMT_pre__Inst), ( 'MT_pre__LocalDef', self.createNewMT_pre__LocalDef), ( 'MT_pre__Seq', self.createNewMT_pre__Seq), ( 'MT_pre__ConditionSet', self.createNewMT_pre__ConditionSet), ( 'MT_pre__Match', self.createNewMT_pre__Match), ( 'MT_pre__Print', self.createNewMT_pre__Print)]
          ,'MT_pre__Expression': []
          ,'MT_pre__PhysicalThread': []
          ,'MT_pre__PortRef': []
          ,'MT_pre__PortConnectorRef': []
          ,'MT_pre__Name': []
          ,'MT_pre__RoleType': []
          ,'MT_pre__Module': []
          ,'MT_pre__Thread': []
          ,'MT_pre__indirectLink_S': []
          ,'MT_pre__ConditionBranch': []
          ,'MT_pre__BASE0': []
          ,'MT_pre__NamedElement': []
          ,'MT_pre__Element': []
          ,'MT_pre__OUT2': []
          ,'MT_pre__OUT1': []
          ,'MT_pre__LocalDef': []
          ,'MT_pre__Expr': []
          ,'MT_pre__Signal': []
          ,'MT_pre__MetaModelElement_T': []
          ,'MT_pre__MetaModelElement_S': []
          ,'MT_pre__Package': []
          ,'MT_pre__apply_contains': []
          ,'MT_pre__ConditionSet': []
          ,'MT_pre__State': []
          ,'MT_pre__MatchCase': []
          ,'MT_pre__PortType': []
          ,'MT_pre__Match': []
          ,'MT_pre__paired_with': []
          ,'MT_pre__PackageContainer': []
          ,'MT_pre__IN1': []
          ,'MT_pre__IN0': []
          ,'MT_pre__LogicalThread': []
          ,'MT_pre__Operation': []
          ,'MT_pre__FuncDef': []
          ,'MT_pre__SIBLING0': []
          ,'MT_pre__InitialPoint': []
          ,'MT_pre__PortConnector': []
          ,'MT_pre__Null': []
          ,'MT_pre__Par': []
          ,'MT_pre__ParIndexed': []
          ,'MT_pre__rightExpr': []
          ,'MT_pre__Listen': []
          ,'MT_pre__MatchModel': []
          ,'MT_pre__Site': []
          ,'MT_pre__New': []
          ,'MT_pre__Concat': []
          ,'MT_pre__trace_link': [( 'MT_pre__MetaModelElement_T', self.createNewMT_pre__MetaModelElement_T), ( 'MT_pre__Def', self.createNewMT_pre__Def), ( 'MT_pre__Expr', self.createNewMT_pre__Expr), ( 'MT_pre__Pattern', self.createNewMT_pre__Pattern), ( 'MT_pre__Proc', self.createNewMT_pre__Proc), ( 'MT_pre__ProcDef', self.createNewMT_pre__ProcDef), ( 'MT_pre__FuncDef', self.createNewMT_pre__FuncDef), ( 'MT_pre__Name', self.createNewMT_pre__Name), ( 'MT_pre__PythonRef', self.createNewMT_pre__PythonRef), ( 'MT_pre__Module', self.createNewMT_pre__Module), ( 'MT_pre__Null', self.createNewMT_pre__Null), ( 'MT_pre__Trigger_T', self.createNewMT_pre__Trigger_T), ( 'MT_pre__Listen', self.createNewMT_pre__Listen), ( 'MT_pre__ConditionBranch', self.createNewMT_pre__ConditionBranch), ( 'MT_pre__ListenBranch', self.createNewMT_pre__ListenBranch), ( 'MT_pre__Site', self.createNewMT_pre__Site), ( 'MT_pre__Model_T', self.createNewMT_pre__Model_T), ( 'MT_pre__MatchCase', self.createNewMT_pre__MatchCase), ( 'MT_pre__Condition', self.createNewMT_pre__Condition), ( 'MT_pre__New', self.createNewMT_pre__New), ( 'MT_pre__Delay', self.createNewMT_pre__Delay), ( 'MT_pre__Par', self.createNewMT_pre__Par), ( 'MT_pre__ParIndexed', self.createNewMT_pre__ParIndexed), ( 'MT_pre__Inst', self.createNewMT_pre__Inst), ( 'MT_pre__LocalDef', self.createNewMT_pre__LocalDef), ( 'MT_pre__Seq', self.createNewMT_pre__Seq), ( 'MT_pre__ConditionSet', self.createNewMT_pre__ConditionSet), ( 'MT_pre__Match', self.createNewMT_pre__Match), ( 'MT_pre__Print', self.createNewMT_pre__Print)]
          ,'MT_pre__SignalType': []
          ,'MT_pre__Subtract': []
          ,'MT_pre__directLink_S': []
          ,'MT_pre__Inst': []
          ,'MT_pre__PythonRef': []
          ,'MT_pre__EntryPoint': []
          ,'MT_pre__CONJUGATE1': []
          ,'MT_pre__Protocol': []
          ,'MT_pre__directLink_T': [( 'MT_pre__MetaModelElement_T', self.createNewMT_pre__MetaModelElement_T), ( 'MT_pre__Def', self.createNewMT_pre__Def), ( 'MT_pre__Expr', self.createNewMT_pre__Expr), ( 'MT_pre__Pattern', self.createNewMT_pre__Pattern), ( 'MT_pre__Proc', self.createNewMT_pre__Proc), ( 'MT_pre__ProcDef', self.createNewMT_pre__ProcDef), ( 'MT_pre__FuncDef', self.createNewMT_pre__FuncDef), ( 'MT_pre__Name', self.createNewMT_pre__Name), ( 'MT_pre__PythonRef', self.createNewMT_pre__PythonRef), ( 'MT_pre__Module', self.createNewMT_pre__Module), ( 'MT_pre__Null', self.createNewMT_pre__Null), ( 'MT_pre__Trigger_T', self.createNewMT_pre__Trigger_T), ( 'MT_pre__Listen', self.createNewMT_pre__Listen), ( 'MT_pre__ConditionBranch', self.createNewMT_pre__ConditionBranch), ( 'MT_pre__ListenBranch', self.createNewMT_pre__ListenBranch), ( 'MT_pre__Site', self.createNewMT_pre__Site), ( 'MT_pre__Model_T', self.createNewMT_pre__Model_T), ( 'MT_pre__MatchCase', self.createNewMT_pre__MatchCase), ( 'MT_pre__Condition', self.createNewMT_pre__Condition), ( 'MT_pre__New', self.createNewMT_pre__New), ( 'MT_pre__Delay', self.createNewMT_pre__Delay), ( 'MT_pre__Par', self.createNewMT_pre__Par), ( 'MT_pre__ParIndexed', self.createNewMT_pre__ParIndexed), ( 'MT_pre__Inst', self.createNewMT_pre__Inst), ( 'MT_pre__LocalDef', self.createNewMT_pre__LocalDef), ( 'MT_pre__Seq', self.createNewMT_pre__Seq), ( 'MT_pre__ConditionSet', self.createNewMT_pre__ConditionSet), ( 'MT_pre__Match', self.createNewMT_pre__Match), ( 'MT_pre__Print', self.createNewMT_pre__Print)]
          ,'MT_pre__Def': []
          ,'MT_pre__StateMachine': []
          ,'MT_pre__Seq': []
          ,'MT_pre__match_contains': []
          ,'MT_pre__Transition': []
          ,'MT_pre__Vertex': []
          ,'MT_pre__StateMachineElement': []
          ,'MT_pre__hasArgs': []
          ,'MT_pre__Port': []
          ,'MT_pre__hasAttribute_S': []
          ,'MT_pre__hasAttribute_T': [( 'MT_pre__MetaModelElement_T', self.createNewMT_pre__MetaModelElement_T), ( 'MT_pre__Def', self.createNewMT_pre__Def), ( 'MT_pre__Expr', self.createNewMT_pre__Expr), ( 'MT_pre__Pattern', self.createNewMT_pre__Pattern), ( 'MT_pre__Proc', self.createNewMT_pre__Proc), ( 'MT_pre__ProcDef', self.createNewMT_pre__ProcDef), ( 'MT_pre__FuncDef', self.createNewMT_pre__FuncDef), ( 'MT_pre__Name', self.createNewMT_pre__Name), ( 'MT_pre__PythonRef', self.createNewMT_pre__PythonRef), ( 'MT_pre__Module', self.createNewMT_pre__Module), ( 'MT_pre__Null', self.createNewMT_pre__Null), ( 'MT_pre__Trigger_T', self.createNewMT_pre__Trigger_T), ( 'MT_pre__Listen', self.createNewMT_pre__Listen), ( 'MT_pre__ConditionBranch', self.createNewMT_pre__ConditionBranch), ( 'MT_pre__ListenBranch', self.createNewMT_pre__ListenBranch), ( 'MT_pre__Site', self.createNewMT_pre__Site), ( 'MT_pre__Model_T', self.createNewMT_pre__Model_T), ( 'MT_pre__MatchCase', self.createNewMT_pre__MatchCase), ( 'MT_pre__Condition', self.createNewMT_pre__Condition), ( 'MT_pre__New', self.createNewMT_pre__New), ( 'MT_pre__Delay', self.createNewMT_pre__Delay), ( 'MT_pre__Par', self.createNewMT_pre__Par), ( 'MT_pre__ParIndexed', self.createNewMT_pre__ParIndexed), ( 'MT_pre__Inst', self.createNewMT_pre__Inst), ( 'MT_pre__LocalDef', self.createNewMT_pre__LocalDef), ( 'MT_pre__Seq', self.createNewMT_pre__Seq), ( 'MT_pre__ConditionSet', self.createNewMT_pre__ConditionSet), ( 'MT_pre__Match', self.createNewMT_pre__Match), ( 'MT_pre__Print', self.createNewMT_pre__Print)]
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__Condition': []
          ,'MT_pre__Attribute': []
          ,'MT_pre__Print': []
          ,'MT_pre__Constant': []
          ,'MT_pre__ExitPoint': []
          ,'MT_pre__Pattern': []
          ,'MT_pre__TransitionType': []
          ,'MT_pre__Capsule': []
          ,'MT_pre__ListenBranch': []
          ,'MT_pre__ProcDef': []
          ,'MT_pre__Delay': []
          ,'MT_pre__Add': []
          ,'MT_pre__Trigger_S': []
          ,'MT_pre__Proc': []
          ,'MT_pre__Trigger_T': []
          ,'MT_pre__PLUGIN2': []
          ,'MT_pre__Action': []
          ,'MT_pre__Model_T': []
          ,'MT_pre__Model_S': []
          ,'MT_pre__CapsuleRole': []
          ,'MT_pre__leftExpr': []
          ,'MT_pre__FIXED0': []
          ,'MT_pre__Equation': [] }
    self.ConnectivityMap['MT_pre__ConditionSet']={
           'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__OPTIONAL1': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__backward_link': []
          ,'MT_pre__Expression': []
          ,'MT_pre__PhysicalThread': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__PortRef': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__PortConnectorRef': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Name': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__RoleType': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Module': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Thread': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__indirectLink_S': []
          ,'MT_pre__ConditionBranch': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__BASE0': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__NamedElement': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Element': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__OUT2': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__OUT1': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__LocalDef': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Expr': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Signal': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__MetaModelElement_T': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__MetaModelElement_S': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Package': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__apply_contains': []
          ,'MT_pre__ConditionSet': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__State': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__MatchCase': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__PortType': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Match': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__paired_with': []
          ,'MT_pre__PackageContainer': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__IN1': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__IN0': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__LogicalThread': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Operation': []
          ,'MT_pre__FuncDef': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__SIBLING0': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__InitialPoint': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__PortConnector': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Null': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Par': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__ParIndexed': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__rightExpr': []
          ,'MT_pre__Listen': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__MatchModel': []
          ,'MT_pre__Site': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__New': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Concat': []
          ,'MT_pre__trace_link': []
          ,'MT_pre__SignalType': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Subtract': []
          ,'MT_pre__directLink_S': []
          ,'MT_pre__Inst': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__PythonRef': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__EntryPoint': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__CONJUGATE1': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Protocol': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__directLink_T': []
          ,'MT_pre__Def': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__StateMachine': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Seq': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__match_contains': []
          ,'MT_pre__Transition': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Vertex': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__StateMachineElement': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__hasArgs': []
          ,'MT_pre__Port': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__hasAttribute_S': []
          ,'MT_pre__hasAttribute_T': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__Condition': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Attribute': [( 'MT_pre__hasAttribute_T', self.createNewMT_pre__hasAttribute_T)]
          ,'MT_pre__Print': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Constant': []
          ,'MT_pre__ExitPoint': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Pattern': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__TransitionType': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Capsule': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__ListenBranch': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__ProcDef': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Delay': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Add': []
          ,'MT_pre__Trigger_S': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Proc': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Trigger_T': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__PLUGIN2': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Action': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Model_T': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Model_S': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__CapsuleRole': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__leftExpr': []
          ,'MT_pre__FIXED0': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Equation': [] }
    self.ConnectivityMap['MT_pre__State']={
           'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__OPTIONAL1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__backward_link': []
          ,'MT_pre__Expression': []
          ,'MT_pre__PhysicalThread': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__PortRef': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__PortConnectorRef': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Name': []
          ,'MT_pre__RoleType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Module': []
          ,'MT_pre__Thread': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__indirectLink_S': []
          ,'MT_pre__ConditionBranch': []
          ,'MT_pre__BASE0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__NamedElement': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Element': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__OUT2': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__OUT1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__LocalDef': []
          ,'MT_pre__Expr': []
          ,'MT_pre__Signal': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__MetaModelElement_T': []
          ,'MT_pre__MetaModelElement_S': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Package': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__apply_contains': []
          ,'MT_pre__ConditionSet': []
          ,'MT_pre__State': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__MatchCase': []
          ,'MT_pre__PortType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Match': []
          ,'MT_pre__paired_with': []
          ,'MT_pre__PackageContainer': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__IN1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__IN0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__LogicalThread': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Operation': []
          ,'MT_pre__FuncDef': []
          ,'MT_pre__SIBLING0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__InitialPoint': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__PortConnector': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Null': []
          ,'MT_pre__Par': []
          ,'MT_pre__ParIndexed': []
          ,'MT_pre__rightExpr': []
          ,'MT_pre__Listen': []
          ,'MT_pre__MatchModel': []
          ,'MT_pre__Site': []
          ,'MT_pre__New': []
          ,'MT_pre__Concat': []
          ,'MT_pre__trace_link': []
          ,'MT_pre__SignalType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Subtract': []
          ,'MT_pre__directLink_S': []
          ,'MT_pre__Inst': []
          ,'MT_pre__PythonRef': []
          ,'MT_pre__EntryPoint': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__CONJUGATE1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Protocol': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__directLink_T': []
          ,'MT_pre__Def': []
          ,'MT_pre__StateMachine': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Seq': []
          ,'MT_pre__match_contains': []
          ,'MT_pre__Transition': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Vertex': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__StateMachineElement': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__hasArgs': []
          ,'MT_pre__Port': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__hasAttribute_S': []
          ,'MT_pre__hasAttribute_T': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__Condition': []
          ,'MT_pre__Attribute': [( 'MT_pre__hasAttribute_S', self.createNewMT_pre__hasAttribute_S)]
          ,'MT_pre__Print': []
          ,'MT_pre__Constant': []
          ,'MT_pre__ExitPoint': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Pattern': []
          ,'MT_pre__TransitionType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Capsule': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__ListenBranch': []
          ,'MT_pre__ProcDef': []
          ,'MT_pre__Delay': []
          ,'MT_pre__Add': []
          ,'MT_pre__Trigger_S': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Proc': []
          ,'MT_pre__Trigger_T': []
          ,'MT_pre__PLUGIN2': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Action': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Model_T': []
          ,'MT_pre__Model_S': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__CapsuleRole': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__leftExpr': []
          ,'MT_pre__FIXED0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Equation': [] }
    self.ConnectivityMap['MT_pre__MatchCase']={
           'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__OPTIONAL1': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__backward_link': []
          ,'MT_pre__Expression': []
          ,'MT_pre__PhysicalThread': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__PortRef': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__PortConnectorRef': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Name': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__RoleType': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Module': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Thread': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__indirectLink_S': []
          ,'MT_pre__ConditionBranch': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__BASE0': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__NamedElement': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Element': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__OUT2': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__OUT1': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__LocalDef': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Expr': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Signal': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__MetaModelElement_T': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__MetaModelElement_S': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Package': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__apply_contains': []
          ,'MT_pre__ConditionSet': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__State': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__MatchCase': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__PortType': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Match': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__paired_with': []
          ,'MT_pre__PackageContainer': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__IN1': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__IN0': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__LogicalThread': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Operation': []
          ,'MT_pre__FuncDef': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__SIBLING0': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__InitialPoint': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__PortConnector': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Null': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Par': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__ParIndexed': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__rightExpr': []
          ,'MT_pre__Listen': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__MatchModel': []
          ,'MT_pre__Site': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__New': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Concat': []
          ,'MT_pre__trace_link': []
          ,'MT_pre__SignalType': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Subtract': []
          ,'MT_pre__directLink_S': []
          ,'MT_pre__Inst': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__PythonRef': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__EntryPoint': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__CONJUGATE1': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Protocol': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__directLink_T': []
          ,'MT_pre__Def': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__StateMachine': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Seq': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__match_contains': []
          ,'MT_pre__Transition': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Vertex': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__StateMachineElement': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__hasArgs': []
          ,'MT_pre__Port': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__hasAttribute_S': []
          ,'MT_pre__hasAttribute_T': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__Condition': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Attribute': [( 'MT_pre__hasAttribute_T', self.createNewMT_pre__hasAttribute_T)]
          ,'MT_pre__Print': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Constant': []
          ,'MT_pre__ExitPoint': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Pattern': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__TransitionType': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Capsule': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__ListenBranch': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__ProcDef': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Delay': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Add': []
          ,'MT_pre__Trigger_S': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Proc': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Trigger_T': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__PLUGIN2': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Action': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Model_T': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Model_S': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__CapsuleRole': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__leftExpr': []
          ,'MT_pre__FIXED0': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Equation': [] }
    self.ConnectivityMap['MT_pre__PortType']={
           'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__OPTIONAL1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__backward_link': []
          ,'MT_pre__Expression': []
          ,'MT_pre__PhysicalThread': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__PortRef': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__PortConnectorRef': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Name': []
          ,'MT_pre__RoleType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Module': []
          ,'MT_pre__Thread': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__indirectLink_S': []
          ,'MT_pre__ConditionBranch': []
          ,'MT_pre__BASE0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__NamedElement': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Element': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__OUT2': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__OUT1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__LocalDef': []
          ,'MT_pre__Expr': []
          ,'MT_pre__Signal': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__MetaModelElement_T': []
          ,'MT_pre__MetaModelElement_S': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Package': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__apply_contains': []
          ,'MT_pre__ConditionSet': []
          ,'MT_pre__State': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__MatchCase': []
          ,'MT_pre__PortType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Match': []
          ,'MT_pre__paired_with': []
          ,'MT_pre__PackageContainer': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__IN1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__IN0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__LogicalThread': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Operation': []
          ,'MT_pre__FuncDef': []
          ,'MT_pre__SIBLING0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__InitialPoint': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__PortConnector': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Null': []
          ,'MT_pre__Par': []
          ,'MT_pre__ParIndexed': []
          ,'MT_pre__rightExpr': []
          ,'MT_pre__Listen': []
          ,'MT_pre__MatchModel': []
          ,'MT_pre__Site': []
          ,'MT_pre__New': []
          ,'MT_pre__Concat': []
          ,'MT_pre__trace_link': []
          ,'MT_pre__SignalType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Subtract': []
          ,'MT_pre__directLink_S': []
          ,'MT_pre__Inst': []
          ,'MT_pre__PythonRef': []
          ,'MT_pre__EntryPoint': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__CONJUGATE1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Protocol': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__directLink_T': []
          ,'MT_pre__Def': []
          ,'MT_pre__StateMachine': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Seq': []
          ,'MT_pre__match_contains': []
          ,'MT_pre__Transition': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Vertex': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__StateMachineElement': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__hasArgs': []
          ,'MT_pre__Port': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__hasAttribute_S': []
          ,'MT_pre__hasAttribute_T': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__Condition': []
          ,'MT_pre__Attribute': [( 'MT_pre__hasAttribute_S', self.createNewMT_pre__hasAttribute_S)]
          ,'MT_pre__Print': []
          ,'MT_pre__Constant': []
          ,'MT_pre__ExitPoint': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Pattern': []
          ,'MT_pre__TransitionType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Capsule': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__ListenBranch': []
          ,'MT_pre__ProcDef': []
          ,'MT_pre__Delay': []
          ,'MT_pre__Add': []
          ,'MT_pre__Trigger_S': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Proc': []
          ,'MT_pre__Trigger_T': []
          ,'MT_pre__PLUGIN2': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Action': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Model_T': []
          ,'MT_pre__Model_S': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__CapsuleRole': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__leftExpr': []
          ,'MT_pre__FIXED0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Equation': [] }
    self.ConnectivityMap['MT_pre__Match']={
           'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__OPTIONAL1': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__backward_link': []
          ,'MT_pre__Expression': []
          ,'MT_pre__PhysicalThread': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__PortRef': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__PortConnectorRef': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Name': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__RoleType': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Module': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Thread': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__indirectLink_S': []
          ,'MT_pre__ConditionBranch': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__BASE0': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__NamedElement': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Element': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__OUT2': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__OUT1': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__LocalDef': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Expr': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Signal': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__MetaModelElement_T': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__MetaModelElement_S': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Package': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__apply_contains': []
          ,'MT_pre__ConditionSet': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__State': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__MatchCase': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__PortType': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Match': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__paired_with': []
          ,'MT_pre__PackageContainer': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__IN1': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__IN0': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__LogicalThread': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Operation': []
          ,'MT_pre__FuncDef': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__SIBLING0': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__InitialPoint': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__PortConnector': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Null': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Par': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__ParIndexed': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__rightExpr': []
          ,'MT_pre__Listen': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__MatchModel': []
          ,'MT_pre__Site': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__New': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Concat': []
          ,'MT_pre__trace_link': []
          ,'MT_pre__SignalType': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Subtract': []
          ,'MT_pre__directLink_S': []
          ,'MT_pre__Inst': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__PythonRef': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__EntryPoint': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__CONJUGATE1': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Protocol': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__directLink_T': []
          ,'MT_pre__Def': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__StateMachine': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Seq': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__match_contains': []
          ,'MT_pre__Transition': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Vertex': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__StateMachineElement': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__hasArgs': []
          ,'MT_pre__Port': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__hasAttribute_S': []
          ,'MT_pre__hasAttribute_T': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__Condition': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Attribute': [( 'MT_pre__hasAttribute_T', self.createNewMT_pre__hasAttribute_T)]
          ,'MT_pre__Print': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Constant': []
          ,'MT_pre__ExitPoint': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Pattern': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__TransitionType': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Capsule': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__ListenBranch': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__ProcDef': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Delay': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Add': []
          ,'MT_pre__Trigger_S': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Proc': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Trigger_T': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__PLUGIN2': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Action': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Model_T': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Model_S': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__CapsuleRole': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__leftExpr': []
          ,'MT_pre__FIXED0': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Equation': [] }
    self.ConnectivityMap['MT_pre__paired_with']={
           'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__OPTIONAL1': []
          ,'MT_pre__backward_link': []
          ,'MT_pre__Expression': []
          ,'MT_pre__PhysicalThread': []
          ,'MT_pre__PortRef': []
          ,'MT_pre__PortConnectorRef': []
          ,'MT_pre__Name': []
          ,'MT_pre__RoleType': []
          ,'MT_pre__Module': []
          ,'MT_pre__Thread': []
          ,'MT_pre__indirectLink_S': []
          ,'MT_pre__ConditionBranch': []
          ,'MT_pre__BASE0': []
          ,'MT_pre__NamedElement': []
          ,'MT_pre__Element': []
          ,'MT_pre__OUT2': []
          ,'MT_pre__OUT1': []
          ,'MT_pre__LocalDef': []
          ,'MT_pre__Expr': []
          ,'MT_pre__Signal': []
          ,'MT_pre__MetaModelElement_T': []
          ,'MT_pre__MetaModelElement_S': []
          ,'MT_pre__Package': []
          ,'MT_pre__apply_contains': [( 'MT_pre__ApplyModel', self.createNewMT_pre__ApplyModel)]
          ,'MT_pre__ConditionSet': []
          ,'MT_pre__State': []
          ,'MT_pre__MatchCase': []
          ,'MT_pre__PortType': []
          ,'MT_pre__Match': []
          ,'MT_pre__paired_with': []
          ,'MT_pre__PackageContainer': []
          ,'MT_pre__IN1': []
          ,'MT_pre__IN0': []
          ,'MT_pre__LogicalThread': []
          ,'MT_pre__Operation': []
          ,'MT_pre__FuncDef': []
          ,'MT_pre__SIBLING0': []
          ,'MT_pre__InitialPoint': []
          ,'MT_pre__PortConnector': []
          ,'MT_pre__Null': []
          ,'MT_pre__Par': []
          ,'MT_pre__ParIndexed': []
          ,'MT_pre__rightExpr': []
          ,'MT_pre__Listen': []
          ,'MT_pre__MatchModel': []
          ,'MT_pre__Site': []
          ,'MT_pre__New': []
          ,'MT_pre__Concat': []
          ,'MT_pre__trace_link': []
          ,'MT_pre__SignalType': []
          ,'MT_pre__Subtract': []
          ,'MT_pre__directLink_S': []
          ,'MT_pre__Inst': []
          ,'MT_pre__PythonRef': []
          ,'MT_pre__EntryPoint': []
          ,'MT_pre__CONJUGATE1': []
          ,'MT_pre__Protocol': []
          ,'MT_pre__directLink_T': []
          ,'MT_pre__Def': []
          ,'MT_pre__StateMachine': []
          ,'MT_pre__Seq': []
          ,'MT_pre__match_contains': []
          ,'MT_pre__Transition': []
          ,'MT_pre__Vertex': []
          ,'MT_pre__StateMachineElement': []
          ,'MT_pre__hasArgs': []
          ,'MT_pre__Port': []
          ,'MT_pre__hasAttribute_S': []
          ,'MT_pre__hasAttribute_T': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__Condition': []
          ,'MT_pre__Attribute': []
          ,'MT_pre__Print': []
          ,'MT_pre__Constant': []
          ,'MT_pre__ExitPoint': []
          ,'MT_pre__Pattern': []
          ,'MT_pre__TransitionType': []
          ,'MT_pre__Capsule': []
          ,'MT_pre__ListenBranch': []
          ,'MT_pre__ProcDef': []
          ,'MT_pre__Delay': []
          ,'MT_pre__Add': []
          ,'MT_pre__Trigger_S': []
          ,'MT_pre__Proc': []
          ,'MT_pre__Trigger_T': []
          ,'MT_pre__PLUGIN2': []
          ,'MT_pre__Action': []
          ,'MT_pre__Model_T': []
          ,'MT_pre__Model_S': []
          ,'MT_pre__CapsuleRole': []
          ,'MT_pre__leftExpr': []
          ,'MT_pre__FIXED0': []
          ,'MT_pre__Equation': [] }
    self.ConnectivityMap['MT_pre__PackageContainer']={
           'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__OPTIONAL1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__backward_link': []
          ,'MT_pre__Expression': []
          ,'MT_pre__PhysicalThread': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__PortRef': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__PortConnectorRef': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Name': []
          ,'MT_pre__RoleType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Module': []
          ,'MT_pre__Thread': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__indirectLink_S': []
          ,'MT_pre__ConditionBranch': []
          ,'MT_pre__BASE0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__NamedElement': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Element': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__OUT2': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__OUT1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__LocalDef': []
          ,'MT_pre__Expr': []
          ,'MT_pre__Signal': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__MetaModelElement_T': []
          ,'MT_pre__MetaModelElement_S': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Package': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__apply_contains': []
          ,'MT_pre__ConditionSet': []
          ,'MT_pre__State': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__MatchCase': []
          ,'MT_pre__PortType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Match': []
          ,'MT_pre__paired_with': []
          ,'MT_pre__PackageContainer': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__IN1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__IN0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__LogicalThread': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Operation': []
          ,'MT_pre__FuncDef': []
          ,'MT_pre__SIBLING0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__InitialPoint': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__PortConnector': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Null': []
          ,'MT_pre__Par': []
          ,'MT_pre__ParIndexed': []
          ,'MT_pre__rightExpr': []
          ,'MT_pre__Listen': []
          ,'MT_pre__MatchModel': []
          ,'MT_pre__Site': []
          ,'MT_pre__New': []
          ,'MT_pre__Concat': []
          ,'MT_pre__trace_link': []
          ,'MT_pre__SignalType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Subtract': []
          ,'MT_pre__directLink_S': []
          ,'MT_pre__Inst': []
          ,'MT_pre__PythonRef': []
          ,'MT_pre__EntryPoint': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__CONJUGATE1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Protocol': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__directLink_T': []
          ,'MT_pre__Def': []
          ,'MT_pre__StateMachine': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Seq': []
          ,'MT_pre__match_contains': []
          ,'MT_pre__Transition': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Vertex': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__StateMachineElement': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__hasArgs': []
          ,'MT_pre__Port': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__hasAttribute_S': []
          ,'MT_pre__hasAttribute_T': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__Condition': []
          ,'MT_pre__Attribute': [( 'MT_pre__hasAttribute_S', self.createNewMT_pre__hasAttribute_S)]
          ,'MT_pre__Print': []
          ,'MT_pre__Constant': []
          ,'MT_pre__ExitPoint': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Pattern': []
          ,'MT_pre__TransitionType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Capsule': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__ListenBranch': []
          ,'MT_pre__ProcDef': []
          ,'MT_pre__Delay': []
          ,'MT_pre__Add': []
          ,'MT_pre__Trigger_S': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Proc': []
          ,'MT_pre__Trigger_T': []
          ,'MT_pre__PLUGIN2': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Action': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Model_T': []
          ,'MT_pre__Model_S': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__CapsuleRole': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__leftExpr': []
          ,'MT_pre__FIXED0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Equation': [] }
    self.ConnectivityMap['MT_pre__IN1']={
           'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__OPTIONAL1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__backward_link': []
          ,'MT_pre__Expression': []
          ,'MT_pre__PhysicalThread': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__PortRef': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__PortConnectorRef': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Name': []
          ,'MT_pre__RoleType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Module': []
          ,'MT_pre__Thread': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__indirectLink_S': []
          ,'MT_pre__ConditionBranch': []
          ,'MT_pre__BASE0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__NamedElement': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Element': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__OUT2': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__OUT1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__LocalDef': []
          ,'MT_pre__Expr': []
          ,'MT_pre__Signal': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__MetaModelElement_T': []
          ,'MT_pre__MetaModelElement_S': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Package': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__apply_contains': []
          ,'MT_pre__ConditionSet': []
          ,'MT_pre__State': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__MatchCase': []
          ,'MT_pre__PortType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Match': []
          ,'MT_pre__paired_with': []
          ,'MT_pre__PackageContainer': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__IN1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__IN0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__LogicalThread': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Operation': []
          ,'MT_pre__FuncDef': []
          ,'MT_pre__SIBLING0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__InitialPoint': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__PortConnector': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Null': []
          ,'MT_pre__Par': []
          ,'MT_pre__ParIndexed': []
          ,'MT_pre__rightExpr': []
          ,'MT_pre__Listen': []
          ,'MT_pre__MatchModel': []
          ,'MT_pre__Site': []
          ,'MT_pre__New': []
          ,'MT_pre__Concat': []
          ,'MT_pre__trace_link': []
          ,'MT_pre__SignalType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Subtract': []
          ,'MT_pre__directLink_S': []
          ,'MT_pre__Inst': []
          ,'MT_pre__PythonRef': []
          ,'MT_pre__EntryPoint': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__CONJUGATE1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Protocol': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__directLink_T': []
          ,'MT_pre__Def': []
          ,'MT_pre__StateMachine': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Seq': []
          ,'MT_pre__match_contains': []
          ,'MT_pre__Transition': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Vertex': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__StateMachineElement': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__hasArgs': []
          ,'MT_pre__Port': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__hasAttribute_S': []
          ,'MT_pre__hasAttribute_T': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__Condition': []
          ,'MT_pre__Attribute': [( 'MT_pre__hasAttribute_S', self.createNewMT_pre__hasAttribute_S)]
          ,'MT_pre__Print': []
          ,'MT_pre__Constant': []
          ,'MT_pre__ExitPoint': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Pattern': []
          ,'MT_pre__TransitionType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Capsule': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__ListenBranch': []
          ,'MT_pre__ProcDef': []
          ,'MT_pre__Delay': []
          ,'MT_pre__Add': []
          ,'MT_pre__Trigger_S': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Proc': []
          ,'MT_pre__Trigger_T': []
          ,'MT_pre__PLUGIN2': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Action': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Model_T': []
          ,'MT_pre__Model_S': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__CapsuleRole': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__leftExpr': []
          ,'MT_pre__FIXED0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Equation': [] }
    self.ConnectivityMap['MT_pre__IN0']={
           'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__OPTIONAL1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__backward_link': []
          ,'MT_pre__Expression': []
          ,'MT_pre__PhysicalThread': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__PortRef': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__PortConnectorRef': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Name': []
          ,'MT_pre__RoleType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Module': []
          ,'MT_pre__Thread': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__indirectLink_S': []
          ,'MT_pre__ConditionBranch': []
          ,'MT_pre__BASE0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__NamedElement': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Element': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__OUT2': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__OUT1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__LocalDef': []
          ,'MT_pre__Expr': []
          ,'MT_pre__Signal': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__MetaModelElement_T': []
          ,'MT_pre__MetaModelElement_S': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Package': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__apply_contains': []
          ,'MT_pre__ConditionSet': []
          ,'MT_pre__State': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__MatchCase': []
          ,'MT_pre__PortType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Match': []
          ,'MT_pre__paired_with': []
          ,'MT_pre__PackageContainer': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__IN1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__IN0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__LogicalThread': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Operation': []
          ,'MT_pre__FuncDef': []
          ,'MT_pre__SIBLING0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__InitialPoint': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__PortConnector': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Null': []
          ,'MT_pre__Par': []
          ,'MT_pre__ParIndexed': []
          ,'MT_pre__rightExpr': []
          ,'MT_pre__Listen': []
          ,'MT_pre__MatchModel': []
          ,'MT_pre__Site': []
          ,'MT_pre__New': []
          ,'MT_pre__Concat': []
          ,'MT_pre__trace_link': []
          ,'MT_pre__SignalType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Subtract': []
          ,'MT_pre__directLink_S': []
          ,'MT_pre__Inst': []
          ,'MT_pre__PythonRef': []
          ,'MT_pre__EntryPoint': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__CONJUGATE1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Protocol': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__directLink_T': []
          ,'MT_pre__Def': []
          ,'MT_pre__StateMachine': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Seq': []
          ,'MT_pre__match_contains': []
          ,'MT_pre__Transition': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Vertex': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__StateMachineElement': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__hasArgs': []
          ,'MT_pre__Port': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__hasAttribute_S': []
          ,'MT_pre__hasAttribute_T': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__Condition': []
          ,'MT_pre__Attribute': [( 'MT_pre__hasAttribute_S', self.createNewMT_pre__hasAttribute_S)]
          ,'MT_pre__Print': []
          ,'MT_pre__Constant': []
          ,'MT_pre__ExitPoint': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Pattern': []
          ,'MT_pre__TransitionType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Capsule': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__ListenBranch': []
          ,'MT_pre__ProcDef': []
          ,'MT_pre__Delay': []
          ,'MT_pre__Add': []
          ,'MT_pre__Trigger_S': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Proc': []
          ,'MT_pre__Trigger_T': []
          ,'MT_pre__PLUGIN2': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Action': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Model_T': []
          ,'MT_pre__Model_S': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__CapsuleRole': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__leftExpr': []
          ,'MT_pre__FIXED0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Equation': [] }
    self.ConnectivityMap['MT_pre__LogicalThread']={
           'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__OPTIONAL1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__backward_link': []
          ,'MT_pre__Expression': []
          ,'MT_pre__PhysicalThread': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__PortRef': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__PortConnectorRef': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Name': []
          ,'MT_pre__RoleType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Module': []
          ,'MT_pre__Thread': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__indirectLink_S': []
          ,'MT_pre__ConditionBranch': []
          ,'MT_pre__BASE0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__NamedElement': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Element': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__OUT2': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__OUT1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__LocalDef': []
          ,'MT_pre__Expr': []
          ,'MT_pre__Signal': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__MetaModelElement_T': []
          ,'MT_pre__MetaModelElement_S': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Package': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__apply_contains': []
          ,'MT_pre__ConditionSet': []
          ,'MT_pre__State': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__MatchCase': []
          ,'MT_pre__PortType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Match': []
          ,'MT_pre__paired_with': []
          ,'MT_pre__PackageContainer': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__IN1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__IN0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__LogicalThread': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Operation': []
          ,'MT_pre__FuncDef': []
          ,'MT_pre__SIBLING0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__InitialPoint': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__PortConnector': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Null': []
          ,'MT_pre__Par': []
          ,'MT_pre__ParIndexed': []
          ,'MT_pre__rightExpr': []
          ,'MT_pre__Listen': []
          ,'MT_pre__MatchModel': []
          ,'MT_pre__Site': []
          ,'MT_pre__New': []
          ,'MT_pre__Concat': []
          ,'MT_pre__trace_link': []
          ,'MT_pre__SignalType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Subtract': []
          ,'MT_pre__directLink_S': []
          ,'MT_pre__Inst': []
          ,'MT_pre__PythonRef': []
          ,'MT_pre__EntryPoint': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__CONJUGATE1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Protocol': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__directLink_T': []
          ,'MT_pre__Def': []
          ,'MT_pre__StateMachine': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Seq': []
          ,'MT_pre__match_contains': []
          ,'MT_pre__Transition': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Vertex': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__StateMachineElement': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__hasArgs': []
          ,'MT_pre__Port': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__hasAttribute_S': []
          ,'MT_pre__hasAttribute_T': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__Condition': []
          ,'MT_pre__Attribute': [( 'MT_pre__hasAttribute_S', self.createNewMT_pre__hasAttribute_S)]
          ,'MT_pre__Print': []
          ,'MT_pre__Constant': []
          ,'MT_pre__ExitPoint': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Pattern': []
          ,'MT_pre__TransitionType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Capsule': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__ListenBranch': []
          ,'MT_pre__ProcDef': []
          ,'MT_pre__Delay': []
          ,'MT_pre__Add': []
          ,'MT_pre__Trigger_S': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Proc': []
          ,'MT_pre__Trigger_T': []
          ,'MT_pre__PLUGIN2': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Action': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Model_T': []
          ,'MT_pre__Model_S': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__CapsuleRole': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__leftExpr': []
          ,'MT_pre__FIXED0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Equation': [] }
    self.ConnectivityMap['MT_pre__Operation']={
           'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__OPTIONAL1': []
          ,'MT_pre__backward_link': []
          ,'MT_pre__Expression': [( 'MT_pre__hasArgs', self.createNewMT_pre__hasArgs)]
          ,'MT_pre__PhysicalThread': []
          ,'MT_pre__PortRef': []
          ,'MT_pre__PortConnectorRef': []
          ,'MT_pre__Name': []
          ,'MT_pre__RoleType': []
          ,'MT_pre__Module': []
          ,'MT_pre__Thread': []
          ,'MT_pre__indirectLink_S': []
          ,'MT_pre__ConditionBranch': []
          ,'MT_pre__BASE0': []
          ,'MT_pre__NamedElement': []
          ,'MT_pre__Element': []
          ,'MT_pre__OUT2': []
          ,'MT_pre__OUT1': []
          ,'MT_pre__LocalDef': []
          ,'MT_pre__Expr': []
          ,'MT_pre__Signal': []
          ,'MT_pre__MetaModelElement_T': []
          ,'MT_pre__MetaModelElement_S': []
          ,'MT_pre__Package': []
          ,'MT_pre__apply_contains': []
          ,'MT_pre__ConditionSet': []
          ,'MT_pre__State': []
          ,'MT_pre__MatchCase': []
          ,'MT_pre__PortType': []
          ,'MT_pre__Match': []
          ,'MT_pre__paired_with': []
          ,'MT_pre__PackageContainer': []
          ,'MT_pre__IN1': []
          ,'MT_pre__IN0': []
          ,'MT_pre__LogicalThread': []
          ,'MT_pre__Operation': [( 'MT_pre__hasArgs', self.createNewMT_pre__hasArgs)]
          ,'MT_pre__FuncDef': []
          ,'MT_pre__SIBLING0': []
          ,'MT_pre__InitialPoint': []
          ,'MT_pre__PortConnector': []
          ,'MT_pre__Null': []
          ,'MT_pre__Par': []
          ,'MT_pre__ParIndexed': []
          ,'MT_pre__rightExpr': []
          ,'MT_pre__Listen': []
          ,'MT_pre__MatchModel': []
          ,'MT_pre__Site': []
          ,'MT_pre__New': []
          ,'MT_pre__Concat': [( 'MT_pre__hasArgs', self.createNewMT_pre__hasArgs)]
          ,'MT_pre__trace_link': []
          ,'MT_pre__SignalType': []
          ,'MT_pre__Subtract': [( 'MT_pre__hasArgs', self.createNewMT_pre__hasArgs)]
          ,'MT_pre__directLink_S': []
          ,'MT_pre__Inst': []
          ,'MT_pre__PythonRef': []
          ,'MT_pre__EntryPoint': []
          ,'MT_pre__CONJUGATE1': []
          ,'MT_pre__Protocol': []
          ,'MT_pre__directLink_T': []
          ,'MT_pre__Def': []
          ,'MT_pre__StateMachine': []
          ,'MT_pre__Seq': []
          ,'MT_pre__match_contains': []
          ,'MT_pre__Transition': []
          ,'MT_pre__Vertex': []
          ,'MT_pre__StateMachineElement': []
          ,'MT_pre__hasArgs': []
          ,'MT_pre__Port': []
          ,'MT_pre__hasAttribute_S': []
          ,'MT_pre__hasAttribute_T': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__Condition': []
          ,'MT_pre__Attribute': [( 'MT_pre__hasArgs', self.createNewMT_pre__hasArgs)]
          ,'MT_pre__Print': []
          ,'MT_pre__Constant': [( 'MT_pre__hasArgs', self.createNewMT_pre__hasArgs)]
          ,'MT_pre__ExitPoint': []
          ,'MT_pre__Pattern': []
          ,'MT_pre__TransitionType': []
          ,'MT_pre__Capsule': []
          ,'MT_pre__ListenBranch': []
          ,'MT_pre__ProcDef': []
          ,'MT_pre__Delay': []
          ,'MT_pre__Add': [( 'MT_pre__hasArgs', self.createNewMT_pre__hasArgs)]
          ,'MT_pre__Trigger_S': []
          ,'MT_pre__Proc': []
          ,'MT_pre__Trigger_T': []
          ,'MT_pre__PLUGIN2': []
          ,'MT_pre__Action': []
          ,'MT_pre__Model_T': []
          ,'MT_pre__Model_S': []
          ,'MT_pre__CapsuleRole': []
          ,'MT_pre__leftExpr': []
          ,'MT_pre__FIXED0': []
          ,'MT_pre__Equation': [] }
    self.ConnectivityMap['MT_pre__FuncDef']={
           'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__OPTIONAL1': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__backward_link': []
          ,'MT_pre__Expression': []
          ,'MT_pre__PhysicalThread': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__PortRef': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__PortConnectorRef': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Name': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__RoleType': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Module': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Thread': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__indirectLink_S': []
          ,'MT_pre__ConditionBranch': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__BASE0': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__NamedElement': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Element': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__OUT2': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__OUT1': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__LocalDef': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Expr': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Signal': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__MetaModelElement_T': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__MetaModelElement_S': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Package': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__apply_contains': []
          ,'MT_pre__ConditionSet': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__State': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__MatchCase': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__PortType': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Match': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__paired_with': []
          ,'MT_pre__PackageContainer': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__IN1': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__IN0': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__LogicalThread': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Operation': []
          ,'MT_pre__FuncDef': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__SIBLING0': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__InitialPoint': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__PortConnector': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Null': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Par': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__ParIndexed': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__rightExpr': []
          ,'MT_pre__Listen': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__MatchModel': []
          ,'MT_pre__Site': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__New': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Concat': []
          ,'MT_pre__trace_link': []
          ,'MT_pre__SignalType': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Subtract': []
          ,'MT_pre__directLink_S': []
          ,'MT_pre__Inst': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__PythonRef': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__EntryPoint': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__CONJUGATE1': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Protocol': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__directLink_T': []
          ,'MT_pre__Def': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__StateMachine': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Seq': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__match_contains': []
          ,'MT_pre__Transition': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Vertex': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__StateMachineElement': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__hasArgs': []
          ,'MT_pre__Port': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__hasAttribute_S': []
          ,'MT_pre__hasAttribute_T': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__Condition': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Attribute': [( 'MT_pre__hasAttribute_T', self.createNewMT_pre__hasAttribute_T)]
          ,'MT_pre__Print': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Constant': []
          ,'MT_pre__ExitPoint': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Pattern': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__TransitionType': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Capsule': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__ListenBranch': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__ProcDef': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Delay': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Add': []
          ,'MT_pre__Trigger_S': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Proc': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Trigger_T': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__PLUGIN2': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Action': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Model_T': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Model_S': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__CapsuleRole': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__leftExpr': []
          ,'MT_pre__FIXED0': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Equation': [] }
    self.ConnectivityMap['MT_pre__SIBLING0']={
           'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__OPTIONAL1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__backward_link': []
          ,'MT_pre__Expression': []
          ,'MT_pre__PhysicalThread': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__PortRef': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__PortConnectorRef': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Name': []
          ,'MT_pre__RoleType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Module': []
          ,'MT_pre__Thread': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__indirectLink_S': []
          ,'MT_pre__ConditionBranch': []
          ,'MT_pre__BASE0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__NamedElement': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Element': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__OUT2': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__OUT1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__LocalDef': []
          ,'MT_pre__Expr': []
          ,'MT_pre__Signal': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__MetaModelElement_T': []
          ,'MT_pre__MetaModelElement_S': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Package': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__apply_contains': []
          ,'MT_pre__ConditionSet': []
          ,'MT_pre__State': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__MatchCase': []
          ,'MT_pre__PortType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Match': []
          ,'MT_pre__paired_with': []
          ,'MT_pre__PackageContainer': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__IN1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__IN0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__LogicalThread': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Operation': []
          ,'MT_pre__FuncDef': []
          ,'MT_pre__SIBLING0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__InitialPoint': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__PortConnector': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Null': []
          ,'MT_pre__Par': []
          ,'MT_pre__ParIndexed': []
          ,'MT_pre__rightExpr': []
          ,'MT_pre__Listen': []
          ,'MT_pre__MatchModel': []
          ,'MT_pre__Site': []
          ,'MT_pre__New': []
          ,'MT_pre__Concat': []
          ,'MT_pre__trace_link': []
          ,'MT_pre__SignalType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Subtract': []
          ,'MT_pre__directLink_S': []
          ,'MT_pre__Inst': []
          ,'MT_pre__PythonRef': []
          ,'MT_pre__EntryPoint': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__CONJUGATE1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Protocol': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__directLink_T': []
          ,'MT_pre__Def': []
          ,'MT_pre__StateMachine': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Seq': []
          ,'MT_pre__match_contains': []
          ,'MT_pre__Transition': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Vertex': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__StateMachineElement': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__hasArgs': []
          ,'MT_pre__Port': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__hasAttribute_S': []
          ,'MT_pre__hasAttribute_T': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__Condition': []
          ,'MT_pre__Attribute': [( 'MT_pre__hasAttribute_S', self.createNewMT_pre__hasAttribute_S)]
          ,'MT_pre__Print': []
          ,'MT_pre__Constant': []
          ,'MT_pre__ExitPoint': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Pattern': []
          ,'MT_pre__TransitionType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Capsule': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__ListenBranch': []
          ,'MT_pre__ProcDef': []
          ,'MT_pre__Delay': []
          ,'MT_pre__Add': []
          ,'MT_pre__Trigger_S': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Proc': []
          ,'MT_pre__Trigger_T': []
          ,'MT_pre__PLUGIN2': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Action': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Model_T': []
          ,'MT_pre__Model_S': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__CapsuleRole': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__leftExpr': []
          ,'MT_pre__FIXED0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Equation': [] }
    self.ConnectivityMap['MT_pre__InitialPoint']={
           'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__OPTIONAL1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__backward_link': []
          ,'MT_pre__Expression': []
          ,'MT_pre__PhysicalThread': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__PortRef': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__PortConnectorRef': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Name': []
          ,'MT_pre__RoleType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Module': []
          ,'MT_pre__Thread': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__indirectLink_S': []
          ,'MT_pre__ConditionBranch': []
          ,'MT_pre__BASE0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__NamedElement': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Element': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__OUT2': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__OUT1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__LocalDef': []
          ,'MT_pre__Expr': []
          ,'MT_pre__Signal': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__MetaModelElement_T': []
          ,'MT_pre__MetaModelElement_S': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Package': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__apply_contains': []
          ,'MT_pre__ConditionSet': []
          ,'MT_pre__State': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__MatchCase': []
          ,'MT_pre__PortType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Match': []
          ,'MT_pre__paired_with': []
          ,'MT_pre__PackageContainer': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__IN1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__IN0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__LogicalThread': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Operation': []
          ,'MT_pre__FuncDef': []
          ,'MT_pre__SIBLING0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__InitialPoint': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__PortConnector': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Null': []
          ,'MT_pre__Par': []
          ,'MT_pre__ParIndexed': []
          ,'MT_pre__rightExpr': []
          ,'MT_pre__Listen': []
          ,'MT_pre__MatchModel': []
          ,'MT_pre__Site': []
          ,'MT_pre__New': []
          ,'MT_pre__Concat': []
          ,'MT_pre__trace_link': []
          ,'MT_pre__SignalType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Subtract': []
          ,'MT_pre__directLink_S': []
          ,'MT_pre__Inst': []
          ,'MT_pre__PythonRef': []
          ,'MT_pre__EntryPoint': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__CONJUGATE1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Protocol': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__directLink_T': []
          ,'MT_pre__Def': []
          ,'MT_pre__StateMachine': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Seq': []
          ,'MT_pre__match_contains': []
          ,'MT_pre__Transition': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Vertex': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__StateMachineElement': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__hasArgs': []
          ,'MT_pre__Port': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__hasAttribute_S': []
          ,'MT_pre__hasAttribute_T': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__Condition': []
          ,'MT_pre__Attribute': [( 'MT_pre__hasAttribute_S', self.createNewMT_pre__hasAttribute_S)]
          ,'MT_pre__Print': []
          ,'MT_pre__Constant': []
          ,'MT_pre__ExitPoint': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Pattern': []
          ,'MT_pre__TransitionType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Capsule': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__ListenBranch': []
          ,'MT_pre__ProcDef': []
          ,'MT_pre__Delay': []
          ,'MT_pre__Add': []
          ,'MT_pre__Trigger_S': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Proc': []
          ,'MT_pre__Trigger_T': []
          ,'MT_pre__PLUGIN2': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Action': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Model_T': []
          ,'MT_pre__Model_S': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__CapsuleRole': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__leftExpr': []
          ,'MT_pre__FIXED0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Equation': [] }
    self.ConnectivityMap['MT_pre__PortConnector']={
           'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__OPTIONAL1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__backward_link': []
          ,'MT_pre__Expression': []
          ,'MT_pre__PhysicalThread': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__PortRef': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__PortConnectorRef': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Name': []
          ,'MT_pre__RoleType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Module': []
          ,'MT_pre__Thread': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__indirectLink_S': []
          ,'MT_pre__ConditionBranch': []
          ,'MT_pre__BASE0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__NamedElement': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Element': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__OUT2': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__OUT1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__LocalDef': []
          ,'MT_pre__Expr': []
          ,'MT_pre__Signal': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__MetaModelElement_T': []
          ,'MT_pre__MetaModelElement_S': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Package': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__apply_contains': []
          ,'MT_pre__ConditionSet': []
          ,'MT_pre__State': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__MatchCase': []
          ,'MT_pre__PortType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Match': []
          ,'MT_pre__paired_with': []
          ,'MT_pre__PackageContainer': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__IN1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__IN0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__LogicalThread': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Operation': []
          ,'MT_pre__FuncDef': []
          ,'MT_pre__SIBLING0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__InitialPoint': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__PortConnector': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Null': []
          ,'MT_pre__Par': []
          ,'MT_pre__ParIndexed': []
          ,'MT_pre__rightExpr': []
          ,'MT_pre__Listen': []
          ,'MT_pre__MatchModel': []
          ,'MT_pre__Site': []
          ,'MT_pre__New': []
          ,'MT_pre__Concat': []
          ,'MT_pre__trace_link': []
          ,'MT_pre__SignalType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Subtract': []
          ,'MT_pre__directLink_S': []
          ,'MT_pre__Inst': []
          ,'MT_pre__PythonRef': []
          ,'MT_pre__EntryPoint': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__CONJUGATE1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Protocol': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__directLink_T': []
          ,'MT_pre__Def': []
          ,'MT_pre__StateMachine': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Seq': []
          ,'MT_pre__match_contains': []
          ,'MT_pre__Transition': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Vertex': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__StateMachineElement': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__hasArgs': []
          ,'MT_pre__Port': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__hasAttribute_S': []
          ,'MT_pre__hasAttribute_T': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__Condition': []
          ,'MT_pre__Attribute': [( 'MT_pre__hasAttribute_S', self.createNewMT_pre__hasAttribute_S)]
          ,'MT_pre__Print': []
          ,'MT_pre__Constant': []
          ,'MT_pre__ExitPoint': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Pattern': []
          ,'MT_pre__TransitionType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Capsule': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__ListenBranch': []
          ,'MT_pre__ProcDef': []
          ,'MT_pre__Delay': []
          ,'MT_pre__Add': []
          ,'MT_pre__Trigger_S': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Proc': []
          ,'MT_pre__Trigger_T': []
          ,'MT_pre__PLUGIN2': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Action': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Model_T': []
          ,'MT_pre__Model_S': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__CapsuleRole': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__leftExpr': []
          ,'MT_pre__FIXED0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Equation': [] }
    self.ConnectivityMap['MT_pre__Null']={
           'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__OPTIONAL1': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__backward_link': []
          ,'MT_pre__Expression': []
          ,'MT_pre__PhysicalThread': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__PortRef': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__PortConnectorRef': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Name': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__RoleType': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Module': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Thread': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__indirectLink_S': []
          ,'MT_pre__ConditionBranch': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__BASE0': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__NamedElement': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Element': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__OUT2': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__OUT1': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__LocalDef': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Expr': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Signal': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__MetaModelElement_T': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__MetaModelElement_S': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Package': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__apply_contains': []
          ,'MT_pre__ConditionSet': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__State': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__MatchCase': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__PortType': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Match': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__paired_with': []
          ,'MT_pre__PackageContainer': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__IN1': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__IN0': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__LogicalThread': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Operation': []
          ,'MT_pre__FuncDef': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__SIBLING0': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__InitialPoint': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__PortConnector': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Null': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Par': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__ParIndexed': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__rightExpr': []
          ,'MT_pre__Listen': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__MatchModel': []
          ,'MT_pre__Site': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__New': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Concat': []
          ,'MT_pre__trace_link': []
          ,'MT_pre__SignalType': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Subtract': []
          ,'MT_pre__directLink_S': []
          ,'MT_pre__Inst': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__PythonRef': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__EntryPoint': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__CONJUGATE1': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Protocol': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__directLink_T': []
          ,'MT_pre__Def': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__StateMachine': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Seq': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__match_contains': []
          ,'MT_pre__Transition': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Vertex': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__StateMachineElement': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__hasArgs': []
          ,'MT_pre__Port': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__hasAttribute_S': []
          ,'MT_pre__hasAttribute_T': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__Condition': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Attribute': [( 'MT_pre__hasAttribute_T', self.createNewMT_pre__hasAttribute_T)]
          ,'MT_pre__Print': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Constant': []
          ,'MT_pre__ExitPoint': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Pattern': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__TransitionType': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Capsule': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__ListenBranch': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__ProcDef': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Delay': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Add': []
          ,'MT_pre__Trigger_S': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Proc': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Trigger_T': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__PLUGIN2': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Action': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Model_T': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Model_S': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__CapsuleRole': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__leftExpr': []
          ,'MT_pre__FIXED0': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Equation': [] }
    self.ConnectivityMap['MT_pre__Par']={
           'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__OPTIONAL1': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__backward_link': []
          ,'MT_pre__Expression': []
          ,'MT_pre__PhysicalThread': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__PortRef': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__PortConnectorRef': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Name': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__RoleType': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Module': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Thread': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__indirectLink_S': []
          ,'MT_pre__ConditionBranch': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__BASE0': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__NamedElement': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Element': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__OUT2': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__OUT1': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__LocalDef': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Expr': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Signal': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__MetaModelElement_T': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__MetaModelElement_S': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Package': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__apply_contains': []
          ,'MT_pre__ConditionSet': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__State': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__MatchCase': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__PortType': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Match': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__paired_with': []
          ,'MT_pre__PackageContainer': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__IN1': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__IN0': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__LogicalThread': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Operation': []
          ,'MT_pre__FuncDef': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__SIBLING0': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__InitialPoint': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__PortConnector': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Null': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Par': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__ParIndexed': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__rightExpr': []
          ,'MT_pre__Listen': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__MatchModel': []
          ,'MT_pre__Site': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__New': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Concat': []
          ,'MT_pre__trace_link': []
          ,'MT_pre__SignalType': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Subtract': []
          ,'MT_pre__directLink_S': []
          ,'MT_pre__Inst': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__PythonRef': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__EntryPoint': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__CONJUGATE1': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Protocol': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__directLink_T': []
          ,'MT_pre__Def': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__StateMachine': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Seq': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__match_contains': []
          ,'MT_pre__Transition': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Vertex': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__StateMachineElement': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__hasArgs': []
          ,'MT_pre__Port': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__hasAttribute_S': []
          ,'MT_pre__hasAttribute_T': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__Condition': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Attribute': [( 'MT_pre__hasAttribute_T', self.createNewMT_pre__hasAttribute_T)]
          ,'MT_pre__Print': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Constant': []
          ,'MT_pre__ExitPoint': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Pattern': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__TransitionType': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Capsule': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__ListenBranch': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__ProcDef': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Delay': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Add': []
          ,'MT_pre__Trigger_S': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Proc': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Trigger_T': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__PLUGIN2': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Action': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Model_T': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Model_S': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__CapsuleRole': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__leftExpr': []
          ,'MT_pre__FIXED0': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Equation': [] }
    self.ConnectivityMap['MT_pre__ParIndexed']={
           'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__OPTIONAL1': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__backward_link': []
          ,'MT_pre__Expression': []
          ,'MT_pre__PhysicalThread': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__PortRef': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__PortConnectorRef': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Name': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__RoleType': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Module': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Thread': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__indirectLink_S': []
          ,'MT_pre__ConditionBranch': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__BASE0': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__NamedElement': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Element': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__OUT2': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__OUT1': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__LocalDef': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Expr': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Signal': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__MetaModelElement_T': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__MetaModelElement_S': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Package': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__apply_contains': []
          ,'MT_pre__ConditionSet': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__State': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__MatchCase': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__PortType': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Match': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__paired_with': []
          ,'MT_pre__PackageContainer': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__IN1': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__IN0': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__LogicalThread': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Operation': []
          ,'MT_pre__FuncDef': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__SIBLING0': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__InitialPoint': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__PortConnector': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Null': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Par': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__ParIndexed': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__rightExpr': []
          ,'MT_pre__Listen': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__MatchModel': []
          ,'MT_pre__Site': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__New': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Concat': []
          ,'MT_pre__trace_link': []
          ,'MT_pre__SignalType': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Subtract': []
          ,'MT_pre__directLink_S': []
          ,'MT_pre__Inst': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__PythonRef': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__EntryPoint': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__CONJUGATE1': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Protocol': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__directLink_T': []
          ,'MT_pre__Def': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__StateMachine': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Seq': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__match_contains': []
          ,'MT_pre__Transition': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Vertex': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__StateMachineElement': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__hasArgs': []
          ,'MT_pre__Port': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__hasAttribute_S': []
          ,'MT_pre__hasAttribute_T': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__Condition': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Attribute': [( 'MT_pre__hasAttribute_T', self.createNewMT_pre__hasAttribute_T)]
          ,'MT_pre__Print': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Constant': []
          ,'MT_pre__ExitPoint': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Pattern': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__TransitionType': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Capsule': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__ListenBranch': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__ProcDef': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Delay': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Add': []
          ,'MT_pre__Trigger_S': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Proc': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Trigger_T': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__PLUGIN2': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Action': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Model_T': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Model_S': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__CapsuleRole': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__leftExpr': []
          ,'MT_pre__FIXED0': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Equation': [] }
    self.ConnectivityMap['MT_pre__rightExpr']={
           'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__OPTIONAL1': []
          ,'MT_pre__backward_link': []
          ,'MT_pre__Expression': []
          ,'MT_pre__PhysicalThread': []
          ,'MT_pre__PortRef': []
          ,'MT_pre__PortConnectorRef': []
          ,'MT_pre__Name': []
          ,'MT_pre__RoleType': []
          ,'MT_pre__Module': []
          ,'MT_pre__Thread': []
          ,'MT_pre__indirectLink_S': []
          ,'MT_pre__ConditionBranch': []
          ,'MT_pre__BASE0': []
          ,'MT_pre__NamedElement': []
          ,'MT_pre__Element': []
          ,'MT_pre__OUT2': []
          ,'MT_pre__OUT1': []
          ,'MT_pre__LocalDef': []
          ,'MT_pre__Expr': []
          ,'MT_pre__Signal': []
          ,'MT_pre__MetaModelElement_T': []
          ,'MT_pre__MetaModelElement_S': []
          ,'MT_pre__Package': []
          ,'MT_pre__apply_contains': []
          ,'MT_pre__ConditionSet': []
          ,'MT_pre__State': []
          ,'MT_pre__MatchCase': []
          ,'MT_pre__PortType': []
          ,'MT_pre__Match': []
          ,'MT_pre__paired_with': []
          ,'MT_pre__PackageContainer': []
          ,'MT_pre__IN1': []
          ,'MT_pre__IN0': []
          ,'MT_pre__LogicalThread': []
          ,'MT_pre__Operation': []
          ,'MT_pre__FuncDef': []
          ,'MT_pre__SIBLING0': []
          ,'MT_pre__InitialPoint': []
          ,'MT_pre__PortConnector': []
          ,'MT_pre__Null': []
          ,'MT_pre__Par': []
          ,'MT_pre__ParIndexed': []
          ,'MT_pre__rightExpr': []
          ,'MT_pre__Listen': []
          ,'MT_pre__MatchModel': []
          ,'MT_pre__Site': []
          ,'MT_pre__New': []
          ,'MT_pre__Concat': []
          ,'MT_pre__trace_link': []
          ,'MT_pre__SignalType': []
          ,'MT_pre__Subtract': []
          ,'MT_pre__directLink_S': []
          ,'MT_pre__Inst': []
          ,'MT_pre__PythonRef': []
          ,'MT_pre__EntryPoint': []
          ,'MT_pre__CONJUGATE1': []
          ,'MT_pre__Protocol': []
          ,'MT_pre__directLink_T': []
          ,'MT_pre__Def': []
          ,'MT_pre__StateMachine': []
          ,'MT_pre__Seq': []
          ,'MT_pre__match_contains': []
          ,'MT_pre__Transition': []
          ,'MT_pre__Vertex': []
          ,'MT_pre__StateMachineElement': []
          ,'MT_pre__hasArgs': [( 'MT_pre__Operation', self.createNewMT_pre__Operation), ( 'MT_pre__Add', self.createNewMT_pre__Add), ( 'MT_pre__Subtract', self.createNewMT_pre__Subtract), ( 'MT_pre__Concat', self.createNewMT_pre__Concat)]
          ,'MT_pre__Port': []
          ,'MT_pre__hasAttribute_S': []
          ,'MT_pre__hasAttribute_T': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__Condition': []
          ,'MT_pre__Attribute': []
          ,'MT_pre__Print': []
          ,'MT_pre__Constant': []
          ,'MT_pre__ExitPoint': []
          ,'MT_pre__Pattern': []
          ,'MT_pre__TransitionType': []
          ,'MT_pre__Capsule': []
          ,'MT_pre__ListenBranch': []
          ,'MT_pre__ProcDef': []
          ,'MT_pre__Delay': []
          ,'MT_pre__Add': []
          ,'MT_pre__Trigger_S': []
          ,'MT_pre__Proc': []
          ,'MT_pre__Trigger_T': []
          ,'MT_pre__PLUGIN2': []
          ,'MT_pre__Action': []
          ,'MT_pre__Model_T': []
          ,'MT_pre__Model_S': []
          ,'MT_pre__CapsuleRole': []
          ,'MT_pre__leftExpr': []
          ,'MT_pre__FIXED0': []
          ,'MT_pre__Equation': [] }
    self.ConnectivityMap['MT_pre__Listen']={
           'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__OPTIONAL1': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__backward_link': []
          ,'MT_pre__Expression': []
          ,'MT_pre__PhysicalThread': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__PortRef': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__PortConnectorRef': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Name': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__RoleType': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Module': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Thread': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__indirectLink_S': []
          ,'MT_pre__ConditionBranch': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__BASE0': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__NamedElement': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Element': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__OUT2': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__OUT1': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__LocalDef': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Expr': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Signal': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__MetaModelElement_T': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__MetaModelElement_S': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Package': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__apply_contains': []
          ,'MT_pre__ConditionSet': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__State': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__MatchCase': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__PortType': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Match': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__paired_with': []
          ,'MT_pre__PackageContainer': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__IN1': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__IN0': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__LogicalThread': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Operation': []
          ,'MT_pre__FuncDef': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__SIBLING0': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__InitialPoint': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__PortConnector': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Null': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Par': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__ParIndexed': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__rightExpr': []
          ,'MT_pre__Listen': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__MatchModel': []
          ,'MT_pre__Site': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__New': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Concat': []
          ,'MT_pre__trace_link': []
          ,'MT_pre__SignalType': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Subtract': []
          ,'MT_pre__directLink_S': []
          ,'MT_pre__Inst': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__PythonRef': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__EntryPoint': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__CONJUGATE1': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Protocol': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__directLink_T': []
          ,'MT_pre__Def': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__StateMachine': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Seq': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__match_contains': []
          ,'MT_pre__Transition': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Vertex': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__StateMachineElement': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__hasArgs': []
          ,'MT_pre__Port': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__hasAttribute_S': []
          ,'MT_pre__hasAttribute_T': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__Condition': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Attribute': [( 'MT_pre__hasAttribute_T', self.createNewMT_pre__hasAttribute_T)]
          ,'MT_pre__Print': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Constant': []
          ,'MT_pre__ExitPoint': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Pattern': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__TransitionType': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Capsule': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__ListenBranch': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__ProcDef': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Delay': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Add': []
          ,'MT_pre__Trigger_S': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Proc': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Trigger_T': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__PLUGIN2': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Action': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Model_T': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Model_S': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__CapsuleRole': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__leftExpr': []
          ,'MT_pre__FIXED0': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Equation': [] }
    self.ConnectivityMap['MT_pre__MatchModel']={
           'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__OPTIONAL1': [( 'MT_pre__match_contains', self.createNewMT_pre__match_contains)]
          ,'MT_pre__backward_link': []
          ,'MT_pre__Expression': []
          ,'MT_pre__PhysicalThread': [( 'MT_pre__match_contains', self.createNewMT_pre__match_contains)]
          ,'MT_pre__PortRef': [( 'MT_pre__match_contains', self.createNewMT_pre__match_contains)]
          ,'MT_pre__PortConnectorRef': [( 'MT_pre__match_contains', self.createNewMT_pre__match_contains)]
          ,'MT_pre__Name': []
          ,'MT_pre__RoleType': [( 'MT_pre__match_contains', self.createNewMT_pre__match_contains)]
          ,'MT_pre__Module': []
          ,'MT_pre__Thread': [( 'MT_pre__match_contains', self.createNewMT_pre__match_contains)]
          ,'MT_pre__indirectLink_S': []
          ,'MT_pre__ConditionBranch': []
          ,'MT_pre__BASE0': [( 'MT_pre__match_contains', self.createNewMT_pre__match_contains)]
          ,'MT_pre__NamedElement': [( 'MT_pre__match_contains', self.createNewMT_pre__match_contains)]
          ,'MT_pre__Element': [( 'MT_pre__match_contains', self.createNewMT_pre__match_contains)]
          ,'MT_pre__OUT2': [( 'MT_pre__match_contains', self.createNewMT_pre__match_contains)]
          ,'MT_pre__OUT1': [( 'MT_pre__match_contains', self.createNewMT_pre__match_contains)]
          ,'MT_pre__LocalDef': []
          ,'MT_pre__Expr': []
          ,'MT_pre__Signal': [( 'MT_pre__match_contains', self.createNewMT_pre__match_contains)]
          ,'MT_pre__MetaModelElement_T': []
          ,'MT_pre__MetaModelElement_S': [( 'MT_pre__match_contains', self.createNewMT_pre__match_contains)]
          ,'MT_pre__Package': [( 'MT_pre__match_contains', self.createNewMT_pre__match_contains)]
          ,'MT_pre__apply_contains': []
          ,'MT_pre__ConditionSet': []
          ,'MT_pre__State': [( 'MT_pre__match_contains', self.createNewMT_pre__match_contains)]
          ,'MT_pre__MatchCase': []
          ,'MT_pre__PortType': [( 'MT_pre__match_contains', self.createNewMT_pre__match_contains)]
          ,'MT_pre__Match': []
          ,'MT_pre__paired_with': []
          ,'MT_pre__PackageContainer': [( 'MT_pre__match_contains', self.createNewMT_pre__match_contains)]
          ,'MT_pre__IN1': [( 'MT_pre__match_contains', self.createNewMT_pre__match_contains)]
          ,'MT_pre__IN0': [( 'MT_pre__match_contains', self.createNewMT_pre__match_contains)]
          ,'MT_pre__LogicalThread': [( 'MT_pre__match_contains', self.createNewMT_pre__match_contains)]
          ,'MT_pre__Operation': []
          ,'MT_pre__FuncDef': []
          ,'MT_pre__SIBLING0': [( 'MT_pre__match_contains', self.createNewMT_pre__match_contains)]
          ,'MT_pre__InitialPoint': [( 'MT_pre__match_contains', self.createNewMT_pre__match_contains)]
          ,'MT_pre__PortConnector': [( 'MT_pre__match_contains', self.createNewMT_pre__match_contains)]
          ,'MT_pre__Null': []
          ,'MT_pre__Par': []
          ,'MT_pre__ParIndexed': []
          ,'MT_pre__rightExpr': []
          ,'MT_pre__Listen': []
          ,'MT_pre__MatchModel': []
          ,'MT_pre__Site': []
          ,'MT_pre__New': []
          ,'MT_pre__Concat': []
          ,'MT_pre__trace_link': []
          ,'MT_pre__SignalType': [( 'MT_pre__match_contains', self.createNewMT_pre__match_contains)]
          ,'MT_pre__Subtract': []
          ,'MT_pre__directLink_S': []
          ,'MT_pre__Inst': []
          ,'MT_pre__PythonRef': []
          ,'MT_pre__EntryPoint': [( 'MT_pre__match_contains', self.createNewMT_pre__match_contains)]
          ,'MT_pre__CONJUGATE1': [( 'MT_pre__match_contains', self.createNewMT_pre__match_contains)]
          ,'MT_pre__Protocol': [( 'MT_pre__match_contains', self.createNewMT_pre__match_contains)]
          ,'MT_pre__directLink_T': []
          ,'MT_pre__Def': []
          ,'MT_pre__StateMachine': [( 'MT_pre__match_contains', self.createNewMT_pre__match_contains)]
          ,'MT_pre__Seq': []
          ,'MT_pre__match_contains': []
          ,'MT_pre__Transition': [( 'MT_pre__match_contains', self.createNewMT_pre__match_contains)]
          ,'MT_pre__Vertex': [( 'MT_pre__match_contains', self.createNewMT_pre__match_contains)]
          ,'MT_pre__StateMachineElement': [( 'MT_pre__match_contains', self.createNewMT_pre__match_contains)]
          ,'MT_pre__hasArgs': []
          ,'MT_pre__Port': [( 'MT_pre__match_contains', self.createNewMT_pre__match_contains)]
          ,'MT_pre__hasAttribute_S': []
          ,'MT_pre__hasAttribute_T': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': []
          ,'MT_pre__ApplyModel': [( 'MT_pre__paired_with', self.createNewMT_pre__paired_with)]
          ,'MT_pre__Condition': []
          ,'MT_pre__Attribute': []
          ,'MT_pre__Print': []
          ,'MT_pre__Constant': []
          ,'MT_pre__ExitPoint': [( 'MT_pre__match_contains', self.createNewMT_pre__match_contains)]
          ,'MT_pre__Pattern': []
          ,'MT_pre__TransitionType': [( 'MT_pre__match_contains', self.createNewMT_pre__match_contains)]
          ,'MT_pre__Capsule': [( 'MT_pre__match_contains', self.createNewMT_pre__match_contains)]
          ,'MT_pre__ListenBranch': []
          ,'MT_pre__ProcDef': []
          ,'MT_pre__Delay': []
          ,'MT_pre__Add': []
          ,'MT_pre__Trigger_S': [( 'MT_pre__match_contains', self.createNewMT_pre__match_contains)]
          ,'MT_pre__Proc': []
          ,'MT_pre__Trigger_T': []
          ,'MT_pre__PLUGIN2': [( 'MT_pre__match_contains', self.createNewMT_pre__match_contains)]
          ,'MT_pre__Action': [( 'MT_pre__match_contains', self.createNewMT_pre__match_contains)]
          ,'MT_pre__Model_T': []
          ,'MT_pre__Model_S': [( 'MT_pre__match_contains', self.createNewMT_pre__match_contains)]
          ,'MT_pre__CapsuleRole': [( 'MT_pre__match_contains', self.createNewMT_pre__match_contains)]
          ,'MT_pre__leftExpr': []
          ,'MT_pre__FIXED0': [( 'MT_pre__match_contains', self.createNewMT_pre__match_contains)]
          ,'MT_pre__Equation': [] }
    self.ConnectivityMap['MT_pre__Site']={
           'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__OPTIONAL1': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__backward_link': []
          ,'MT_pre__Expression': []
          ,'MT_pre__PhysicalThread': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__PortRef': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__PortConnectorRef': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Name': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__RoleType': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Module': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Thread': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__indirectLink_S': []
          ,'MT_pre__ConditionBranch': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__BASE0': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__NamedElement': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Element': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__OUT2': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__OUT1': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__LocalDef': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Expr': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Signal': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__MetaModelElement_T': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__MetaModelElement_S': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Package': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__apply_contains': []
          ,'MT_pre__ConditionSet': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__State': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__MatchCase': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__PortType': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Match': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__paired_with': []
          ,'MT_pre__PackageContainer': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__IN1': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__IN0': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__LogicalThread': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Operation': []
          ,'MT_pre__FuncDef': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__SIBLING0': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__InitialPoint': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__PortConnector': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Null': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Par': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__ParIndexed': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__rightExpr': []
          ,'MT_pre__Listen': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__MatchModel': []
          ,'MT_pre__Site': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__New': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Concat': []
          ,'MT_pre__trace_link': []
          ,'MT_pre__SignalType': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Subtract': []
          ,'MT_pre__directLink_S': []
          ,'MT_pre__Inst': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__PythonRef': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__EntryPoint': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__CONJUGATE1': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Protocol': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__directLink_T': []
          ,'MT_pre__Def': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__StateMachine': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Seq': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__match_contains': []
          ,'MT_pre__Transition': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Vertex': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__StateMachineElement': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__hasArgs': []
          ,'MT_pre__Port': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__hasAttribute_S': []
          ,'MT_pre__hasAttribute_T': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__Condition': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Attribute': [( 'MT_pre__hasAttribute_T', self.createNewMT_pre__hasAttribute_T)]
          ,'MT_pre__Print': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Constant': []
          ,'MT_pre__ExitPoint': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Pattern': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__TransitionType': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Capsule': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__ListenBranch': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__ProcDef': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Delay': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Add': []
          ,'MT_pre__Trigger_S': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Proc': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Trigger_T': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__PLUGIN2': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Action': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Model_T': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Model_S': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__CapsuleRole': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__leftExpr': []
          ,'MT_pre__FIXED0': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Equation': [] }
    self.ConnectivityMap['MT_pre__New']={
           'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__OPTIONAL1': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__backward_link': []
          ,'MT_pre__Expression': []
          ,'MT_pre__PhysicalThread': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__PortRef': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__PortConnectorRef': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Name': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__RoleType': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Module': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Thread': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__indirectLink_S': []
          ,'MT_pre__ConditionBranch': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__BASE0': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__NamedElement': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Element': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__OUT2': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__OUT1': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__LocalDef': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Expr': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Signal': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__MetaModelElement_T': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__MetaModelElement_S': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Package': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__apply_contains': []
          ,'MT_pre__ConditionSet': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__State': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__MatchCase': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__PortType': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Match': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__paired_with': []
          ,'MT_pre__PackageContainer': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__IN1': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__IN0': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__LogicalThread': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Operation': []
          ,'MT_pre__FuncDef': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__SIBLING0': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__InitialPoint': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__PortConnector': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Null': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Par': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__ParIndexed': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__rightExpr': []
          ,'MT_pre__Listen': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__MatchModel': []
          ,'MT_pre__Site': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__New': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Concat': []
          ,'MT_pre__trace_link': []
          ,'MT_pre__SignalType': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Subtract': []
          ,'MT_pre__directLink_S': []
          ,'MT_pre__Inst': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__PythonRef': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__EntryPoint': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__CONJUGATE1': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Protocol': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__directLink_T': []
          ,'MT_pre__Def': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__StateMachine': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Seq': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__match_contains': []
          ,'MT_pre__Transition': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Vertex': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__StateMachineElement': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__hasArgs': []
          ,'MT_pre__Port': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__hasAttribute_S': []
          ,'MT_pre__hasAttribute_T': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__Condition': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Attribute': [( 'MT_pre__hasAttribute_T', self.createNewMT_pre__hasAttribute_T)]
          ,'MT_pre__Print': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Constant': []
          ,'MT_pre__ExitPoint': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Pattern': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__TransitionType': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Capsule': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__ListenBranch': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__ProcDef': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Delay': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Add': []
          ,'MT_pre__Trigger_S': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Proc': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Trigger_T': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__PLUGIN2': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Action': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Model_T': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Model_S': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__CapsuleRole': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__leftExpr': []
          ,'MT_pre__FIXED0': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Equation': [] }
    self.ConnectivityMap['MT_pre__Concat']={
           'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__OPTIONAL1': []
          ,'MT_pre__backward_link': []
          ,'MT_pre__Expression': [( 'MT_pre__hasArgs', self.createNewMT_pre__hasArgs)]
          ,'MT_pre__PhysicalThread': []
          ,'MT_pre__PortRef': []
          ,'MT_pre__PortConnectorRef': []
          ,'MT_pre__Name': []
          ,'MT_pre__RoleType': []
          ,'MT_pre__Module': []
          ,'MT_pre__Thread': []
          ,'MT_pre__indirectLink_S': []
          ,'MT_pre__ConditionBranch': []
          ,'MT_pre__BASE0': []
          ,'MT_pre__NamedElement': []
          ,'MT_pre__Element': []
          ,'MT_pre__OUT2': []
          ,'MT_pre__OUT1': []
          ,'MT_pre__LocalDef': []
          ,'MT_pre__Expr': []
          ,'MT_pre__Signal': []
          ,'MT_pre__MetaModelElement_T': []
          ,'MT_pre__MetaModelElement_S': []
          ,'MT_pre__Package': []
          ,'MT_pre__apply_contains': []
          ,'MT_pre__ConditionSet': []
          ,'MT_pre__State': []
          ,'MT_pre__MatchCase': []
          ,'MT_pre__PortType': []
          ,'MT_pre__Match': []
          ,'MT_pre__paired_with': []
          ,'MT_pre__PackageContainer': []
          ,'MT_pre__IN1': []
          ,'MT_pre__IN0': []
          ,'MT_pre__LogicalThread': []
          ,'MT_pre__Operation': [( 'MT_pre__hasArgs', self.createNewMT_pre__hasArgs)]
          ,'MT_pre__FuncDef': []
          ,'MT_pre__SIBLING0': []
          ,'MT_pre__InitialPoint': []
          ,'MT_pre__PortConnector': []
          ,'MT_pre__Null': []
          ,'MT_pre__Par': []
          ,'MT_pre__ParIndexed': []
          ,'MT_pre__rightExpr': []
          ,'MT_pre__Listen': []
          ,'MT_pre__MatchModel': []
          ,'MT_pre__Site': []
          ,'MT_pre__New': []
          ,'MT_pre__Concat': [( 'MT_pre__hasArgs', self.createNewMT_pre__hasArgs)]
          ,'MT_pre__trace_link': []
          ,'MT_pre__SignalType': []
          ,'MT_pre__Subtract': [( 'MT_pre__hasArgs', self.createNewMT_pre__hasArgs)]
          ,'MT_pre__directLink_S': []
          ,'MT_pre__Inst': []
          ,'MT_pre__PythonRef': []
          ,'MT_pre__EntryPoint': []
          ,'MT_pre__CONJUGATE1': []
          ,'MT_pre__Protocol': []
          ,'MT_pre__directLink_T': []
          ,'MT_pre__Def': []
          ,'MT_pre__StateMachine': []
          ,'MT_pre__Seq': []
          ,'MT_pre__match_contains': []
          ,'MT_pre__Transition': []
          ,'MT_pre__Vertex': []
          ,'MT_pre__StateMachineElement': []
          ,'MT_pre__hasArgs': []
          ,'MT_pre__Port': []
          ,'MT_pre__hasAttribute_S': []
          ,'MT_pre__hasAttribute_T': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__Condition': []
          ,'MT_pre__Attribute': [( 'MT_pre__hasArgs', self.createNewMT_pre__hasArgs)]
          ,'MT_pre__Print': []
          ,'MT_pre__Constant': [( 'MT_pre__hasArgs', self.createNewMT_pre__hasArgs)]
          ,'MT_pre__ExitPoint': []
          ,'MT_pre__Pattern': []
          ,'MT_pre__TransitionType': []
          ,'MT_pre__Capsule': []
          ,'MT_pre__ListenBranch': []
          ,'MT_pre__ProcDef': []
          ,'MT_pre__Delay': []
          ,'MT_pre__Add': [( 'MT_pre__hasArgs', self.createNewMT_pre__hasArgs)]
          ,'MT_pre__Trigger_S': []
          ,'MT_pre__Proc': []
          ,'MT_pre__Trigger_T': []
          ,'MT_pre__PLUGIN2': []
          ,'MT_pre__Action': []
          ,'MT_pre__Model_T': []
          ,'MT_pre__Model_S': []
          ,'MT_pre__CapsuleRole': []
          ,'MT_pre__leftExpr': []
          ,'MT_pre__FIXED0': []
          ,'MT_pre__Equation': [] }
    self.ConnectivityMap['MT_pre__trace_link']={
           'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__OPTIONAL1': []
          ,'MT_pre__backward_link': []
          ,'MT_pre__Expression': []
          ,'MT_pre__PhysicalThread': []
          ,'MT_pre__PortRef': []
          ,'MT_pre__PortConnectorRef': []
          ,'MT_pre__Name': []
          ,'MT_pre__RoleType': []
          ,'MT_pre__Module': []
          ,'MT_pre__Thread': []
          ,'MT_pre__indirectLink_S': [( 'MT_pre__MetaModelElement_S', self.createNewMT_pre__MetaModelElement_S), ( 'MT_pre__Element', self.createNewMT_pre__Element), ( 'MT_pre__NamedElement', self.createNewMT_pre__NamedElement), ( 'MT_pre__Trigger_S', self.createNewMT_pre__Trigger_S), ( 'MT_pre__Action', self.createNewMT_pre__Action), ( 'MT_pre__PortRef', self.createNewMT_pre__PortRef), ( 'MT_pre__PortConnectorRef', self.createNewMT_pre__PortConnectorRef), ( 'MT_pre__StateMachineElement', self.createNewMT_pre__StateMachineElement), ( 'MT_pre__Protocol', self.createNewMT_pre__Protocol), ( 'MT_pre__Signal', self.createNewMT_pre__Signal), ( 'MT_pre__Port', self.createNewMT_pre__Port), ( 'MT_pre__Vertex', self.createNewMT_pre__Vertex), ( 'MT_pre__InitialPoint', self.createNewMT_pre__InitialPoint), ( 'MT_pre__EntryPoint', self.createNewMT_pre__EntryPoint), ( 'MT_pre__ExitPoint', self.createNewMT_pre__ExitPoint), ( 'MT_pre__Transition', self.createNewMT_pre__Transition), ( 'MT_pre__StateMachine', self.createNewMT_pre__StateMachine), ( 'MT_pre__State', self.createNewMT_pre__State), ( 'MT_pre__Capsule', self.createNewMT_pre__Capsule), ( 'MT_pre__PackageContainer', self.createNewMT_pre__PackageContainer), ( 'MT_pre__Model_S', self.createNewMT_pre__Model_S), ( 'MT_pre__Package', self.createNewMT_pre__Package), ( 'MT_pre__CapsuleRole', self.createNewMT_pre__CapsuleRole), ( 'MT_pre__PortConnector', self.createNewMT_pre__PortConnector), ( 'MT_pre__Thread', self.createNewMT_pre__Thread), ( 'MT_pre__PhysicalThread', self.createNewMT_pre__PhysicalThread), ( 'MT_pre__LogicalThread', self.createNewMT_pre__LogicalThread), ( 'MT_pre__PortType', self.createNewMT_pre__PortType), ( 'MT_pre__BASE0', self.createNewMT_pre__BASE0), ( 'MT_pre__CONJUGATE1', self.createNewMT_pre__CONJUGATE1), ( 'MT_pre__SignalType', self.createNewMT_pre__SignalType), ( 'MT_pre__OUT1', self.createNewMT_pre__OUT1), ( 'MT_pre__IN0', self.createNewMT_pre__IN0), ( 'MT_pre__RoleType', self.createNewMT_pre__RoleType), ( 'MT_pre__FIXED0', self.createNewMT_pre__FIXED0), ( 'MT_pre__OPTIONAL1', self.createNewMT_pre__OPTIONAL1), ( 'MT_pre__PLUGIN2', self.createNewMT_pre__PLUGIN2), ( 'MT_pre__TransitionType', self.createNewMT_pre__TransitionType), ( 'MT_pre__SIBLING0', self.createNewMT_pre__SIBLING0), ( 'MT_pre__IN1', self.createNewMT_pre__IN1), ( 'MT_pre__OUT2', self.createNewMT_pre__OUT2)]
          ,'MT_pre__ConditionBranch': []
          ,'MT_pre__BASE0': []
          ,'MT_pre__NamedElement': []
          ,'MT_pre__Element': []
          ,'MT_pre__OUT2': []
          ,'MT_pre__OUT1': []
          ,'MT_pre__LocalDef': []
          ,'MT_pre__Expr': []
          ,'MT_pre__Signal': []
          ,'MT_pre__MetaModelElement_T': []
          ,'MT_pre__MetaModelElement_S': []
          ,'MT_pre__Package': []
          ,'MT_pre__apply_contains': []
          ,'MT_pre__ConditionSet': []
          ,'MT_pre__State': []
          ,'MT_pre__MatchCase': []
          ,'MT_pre__PortType': []
          ,'MT_pre__Match': []
          ,'MT_pre__paired_with': []
          ,'MT_pre__PackageContainer': []
          ,'MT_pre__IN1': []
          ,'MT_pre__IN0': []
          ,'MT_pre__LogicalThread': []
          ,'MT_pre__Operation': []
          ,'MT_pre__FuncDef': []
          ,'MT_pre__SIBLING0': []
          ,'MT_pre__InitialPoint': []
          ,'MT_pre__PortConnector': []
          ,'MT_pre__Null': []
          ,'MT_pre__Par': []
          ,'MT_pre__ParIndexed': []
          ,'MT_pre__rightExpr': []
          ,'MT_pre__Listen': []
          ,'MT_pre__MatchModel': []
          ,'MT_pre__Site': []
          ,'MT_pre__New': []
          ,'MT_pre__Concat': []
          ,'MT_pre__trace_link': []
          ,'MT_pre__SignalType': []
          ,'MT_pre__Subtract': []
          ,'MT_pre__directLink_S': [( 'MT_pre__MetaModelElement_S', self.createNewMT_pre__MetaModelElement_S), ( 'MT_pre__Element', self.createNewMT_pre__Element), ( 'MT_pre__NamedElement', self.createNewMT_pre__NamedElement), ( 'MT_pre__Trigger_S', self.createNewMT_pre__Trigger_S), ( 'MT_pre__Action', self.createNewMT_pre__Action), ( 'MT_pre__PortRef', self.createNewMT_pre__PortRef), ( 'MT_pre__PortConnectorRef', self.createNewMT_pre__PortConnectorRef), ( 'MT_pre__StateMachineElement', self.createNewMT_pre__StateMachineElement), ( 'MT_pre__Protocol', self.createNewMT_pre__Protocol), ( 'MT_pre__Signal', self.createNewMT_pre__Signal), ( 'MT_pre__Port', self.createNewMT_pre__Port), ( 'MT_pre__Vertex', self.createNewMT_pre__Vertex), ( 'MT_pre__InitialPoint', self.createNewMT_pre__InitialPoint), ( 'MT_pre__EntryPoint', self.createNewMT_pre__EntryPoint), ( 'MT_pre__ExitPoint', self.createNewMT_pre__ExitPoint), ( 'MT_pre__Transition', self.createNewMT_pre__Transition), ( 'MT_pre__StateMachine', self.createNewMT_pre__StateMachine), ( 'MT_pre__State', self.createNewMT_pre__State), ( 'MT_pre__Capsule', self.createNewMT_pre__Capsule), ( 'MT_pre__PackageContainer', self.createNewMT_pre__PackageContainer), ( 'MT_pre__Model_S', self.createNewMT_pre__Model_S), ( 'MT_pre__Package', self.createNewMT_pre__Package), ( 'MT_pre__CapsuleRole', self.createNewMT_pre__CapsuleRole), ( 'MT_pre__PortConnector', self.createNewMT_pre__PortConnector), ( 'MT_pre__Thread', self.createNewMT_pre__Thread), ( 'MT_pre__PhysicalThread', self.createNewMT_pre__PhysicalThread), ( 'MT_pre__LogicalThread', self.createNewMT_pre__LogicalThread), ( 'MT_pre__PortType', self.createNewMT_pre__PortType), ( 'MT_pre__BASE0', self.createNewMT_pre__BASE0), ( 'MT_pre__CONJUGATE1', self.createNewMT_pre__CONJUGATE1), ( 'MT_pre__SignalType', self.createNewMT_pre__SignalType), ( 'MT_pre__OUT1', self.createNewMT_pre__OUT1), ( 'MT_pre__IN0', self.createNewMT_pre__IN0), ( 'MT_pre__RoleType', self.createNewMT_pre__RoleType), ( 'MT_pre__FIXED0', self.createNewMT_pre__FIXED0), ( 'MT_pre__OPTIONAL1', self.createNewMT_pre__OPTIONAL1), ( 'MT_pre__PLUGIN2', self.createNewMT_pre__PLUGIN2), ( 'MT_pre__TransitionType', self.createNewMT_pre__TransitionType), ( 'MT_pre__SIBLING0', self.createNewMT_pre__SIBLING0), ( 'MT_pre__IN1', self.createNewMT_pre__IN1), ( 'MT_pre__OUT2', self.createNewMT_pre__OUT2)]
          ,'MT_pre__Inst': []
          ,'MT_pre__PythonRef': []
          ,'MT_pre__EntryPoint': []
          ,'MT_pre__CONJUGATE1': []
          ,'MT_pre__Protocol': []
          ,'MT_pre__directLink_T': []
          ,'MT_pre__Def': []
          ,'MT_pre__StateMachine': []
          ,'MT_pre__Seq': []
          ,'MT_pre__match_contains': []
          ,'MT_pre__Transition': []
          ,'MT_pre__Vertex': []
          ,'MT_pre__StateMachineElement': []
          ,'MT_pre__hasArgs': []
          ,'MT_pre__Port': []
          ,'MT_pre__hasAttribute_S': [( 'MT_pre__MetaModelElement_S', self.createNewMT_pre__MetaModelElement_S), ( 'MT_pre__Element', self.createNewMT_pre__Element), ( 'MT_pre__NamedElement', self.createNewMT_pre__NamedElement), ( 'MT_pre__Trigger_S', self.createNewMT_pre__Trigger_S), ( 'MT_pre__Action', self.createNewMT_pre__Action), ( 'MT_pre__PortRef', self.createNewMT_pre__PortRef), ( 'MT_pre__PortConnectorRef', self.createNewMT_pre__PortConnectorRef), ( 'MT_pre__StateMachineElement', self.createNewMT_pre__StateMachineElement), ( 'MT_pre__Protocol', self.createNewMT_pre__Protocol), ( 'MT_pre__Signal', self.createNewMT_pre__Signal), ( 'MT_pre__Port', self.createNewMT_pre__Port), ( 'MT_pre__Vertex', self.createNewMT_pre__Vertex), ( 'MT_pre__InitialPoint', self.createNewMT_pre__InitialPoint), ( 'MT_pre__EntryPoint', self.createNewMT_pre__EntryPoint), ( 'MT_pre__ExitPoint', self.createNewMT_pre__ExitPoint), ( 'MT_pre__Transition', self.createNewMT_pre__Transition), ( 'MT_pre__StateMachine', self.createNewMT_pre__StateMachine), ( 'MT_pre__State', self.createNewMT_pre__State), ( 'MT_pre__Capsule', self.createNewMT_pre__Capsule), ( 'MT_pre__PackageContainer', self.createNewMT_pre__PackageContainer), ( 'MT_pre__Model_S', self.createNewMT_pre__Model_S), ( 'MT_pre__Package', self.createNewMT_pre__Package), ( 'MT_pre__CapsuleRole', self.createNewMT_pre__CapsuleRole), ( 'MT_pre__PortConnector', self.createNewMT_pre__PortConnector), ( 'MT_pre__Thread', self.createNewMT_pre__Thread), ( 'MT_pre__PhysicalThread', self.createNewMT_pre__PhysicalThread), ( 'MT_pre__LogicalThread', self.createNewMT_pre__LogicalThread), ( 'MT_pre__PortType', self.createNewMT_pre__PortType), ( 'MT_pre__BASE0', self.createNewMT_pre__BASE0), ( 'MT_pre__CONJUGATE1', self.createNewMT_pre__CONJUGATE1), ( 'MT_pre__SignalType', self.createNewMT_pre__SignalType), ( 'MT_pre__OUT1', self.createNewMT_pre__OUT1), ( 'MT_pre__IN0', self.createNewMT_pre__IN0), ( 'MT_pre__RoleType', self.createNewMT_pre__RoleType), ( 'MT_pre__FIXED0', self.createNewMT_pre__FIXED0), ( 'MT_pre__OPTIONAL1', self.createNewMT_pre__OPTIONAL1), ( 'MT_pre__PLUGIN2', self.createNewMT_pre__PLUGIN2), ( 'MT_pre__TransitionType', self.createNewMT_pre__TransitionType), ( 'MT_pre__SIBLING0', self.createNewMT_pre__SIBLING0), ( 'MT_pre__IN1', self.createNewMT_pre__IN1), ( 'MT_pre__OUT2', self.createNewMT_pre__OUT2)]
          ,'MT_pre__hasAttribute_T': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__Condition': []
          ,'MT_pre__Attribute': []
          ,'MT_pre__Print': []
          ,'MT_pre__Constant': []
          ,'MT_pre__ExitPoint': []
          ,'MT_pre__Pattern': []
          ,'MT_pre__TransitionType': []
          ,'MT_pre__Capsule': []
          ,'MT_pre__ListenBranch': []
          ,'MT_pre__ProcDef': []
          ,'MT_pre__Delay': []
          ,'MT_pre__Add': []
          ,'MT_pre__Trigger_S': []
          ,'MT_pre__Proc': []
          ,'MT_pre__Trigger_T': []
          ,'MT_pre__PLUGIN2': []
          ,'MT_pre__Action': []
          ,'MT_pre__Model_T': []
          ,'MT_pre__Model_S': []
          ,'MT_pre__CapsuleRole': []
          ,'MT_pre__leftExpr': []
          ,'MT_pre__FIXED0': []
          ,'MT_pre__Equation': [] }
    self.ConnectivityMap['MT_pre__SignalType']={
           'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__OPTIONAL1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__backward_link': []
          ,'MT_pre__Expression': []
          ,'MT_pre__PhysicalThread': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__PortRef': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__PortConnectorRef': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Name': []
          ,'MT_pre__RoleType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Module': []
          ,'MT_pre__Thread': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__indirectLink_S': []
          ,'MT_pre__ConditionBranch': []
          ,'MT_pre__BASE0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__NamedElement': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Element': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__OUT2': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__OUT1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__LocalDef': []
          ,'MT_pre__Expr': []
          ,'MT_pre__Signal': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__MetaModelElement_T': []
          ,'MT_pre__MetaModelElement_S': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Package': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__apply_contains': []
          ,'MT_pre__ConditionSet': []
          ,'MT_pre__State': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__MatchCase': []
          ,'MT_pre__PortType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Match': []
          ,'MT_pre__paired_with': []
          ,'MT_pre__PackageContainer': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__IN1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__IN0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__LogicalThread': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Operation': []
          ,'MT_pre__FuncDef': []
          ,'MT_pre__SIBLING0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__InitialPoint': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__PortConnector': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Null': []
          ,'MT_pre__Par': []
          ,'MT_pre__ParIndexed': []
          ,'MT_pre__rightExpr': []
          ,'MT_pre__Listen': []
          ,'MT_pre__MatchModel': []
          ,'MT_pre__Site': []
          ,'MT_pre__New': []
          ,'MT_pre__Concat': []
          ,'MT_pre__trace_link': []
          ,'MT_pre__SignalType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Subtract': []
          ,'MT_pre__directLink_S': []
          ,'MT_pre__Inst': []
          ,'MT_pre__PythonRef': []
          ,'MT_pre__EntryPoint': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__CONJUGATE1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Protocol': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__directLink_T': []
          ,'MT_pre__Def': []
          ,'MT_pre__StateMachine': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Seq': []
          ,'MT_pre__match_contains': []
          ,'MT_pre__Transition': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Vertex': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__StateMachineElement': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__hasArgs': []
          ,'MT_pre__Port': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__hasAttribute_S': []
          ,'MT_pre__hasAttribute_T': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__Condition': []
          ,'MT_pre__Attribute': [( 'MT_pre__hasAttribute_S', self.createNewMT_pre__hasAttribute_S)]
          ,'MT_pre__Print': []
          ,'MT_pre__Constant': []
          ,'MT_pre__ExitPoint': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Pattern': []
          ,'MT_pre__TransitionType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Capsule': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__ListenBranch': []
          ,'MT_pre__ProcDef': []
          ,'MT_pre__Delay': []
          ,'MT_pre__Add': []
          ,'MT_pre__Trigger_S': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Proc': []
          ,'MT_pre__Trigger_T': []
          ,'MT_pre__PLUGIN2': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Action': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Model_T': []
          ,'MT_pre__Model_S': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__CapsuleRole': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__leftExpr': []
          ,'MT_pre__FIXED0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Equation': [] }
    self.ConnectivityMap['MT_pre__Subtract']={
           'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__OPTIONAL1': []
          ,'MT_pre__backward_link': []
          ,'MT_pre__Expression': [( 'MT_pre__hasArgs', self.createNewMT_pre__hasArgs)]
          ,'MT_pre__PhysicalThread': []
          ,'MT_pre__PortRef': []
          ,'MT_pre__PortConnectorRef': []
          ,'MT_pre__Name': []
          ,'MT_pre__RoleType': []
          ,'MT_pre__Module': []
          ,'MT_pre__Thread': []
          ,'MT_pre__indirectLink_S': []
          ,'MT_pre__ConditionBranch': []
          ,'MT_pre__BASE0': []
          ,'MT_pre__NamedElement': []
          ,'MT_pre__Element': []
          ,'MT_pre__OUT2': []
          ,'MT_pre__OUT1': []
          ,'MT_pre__LocalDef': []
          ,'MT_pre__Expr': []
          ,'MT_pre__Signal': []
          ,'MT_pre__MetaModelElement_T': []
          ,'MT_pre__MetaModelElement_S': []
          ,'MT_pre__Package': []
          ,'MT_pre__apply_contains': []
          ,'MT_pre__ConditionSet': []
          ,'MT_pre__State': []
          ,'MT_pre__MatchCase': []
          ,'MT_pre__PortType': []
          ,'MT_pre__Match': []
          ,'MT_pre__paired_with': []
          ,'MT_pre__PackageContainer': []
          ,'MT_pre__IN1': []
          ,'MT_pre__IN0': []
          ,'MT_pre__LogicalThread': []
          ,'MT_pre__Operation': [( 'MT_pre__hasArgs', self.createNewMT_pre__hasArgs)]
          ,'MT_pre__FuncDef': []
          ,'MT_pre__SIBLING0': []
          ,'MT_pre__InitialPoint': []
          ,'MT_pre__PortConnector': []
          ,'MT_pre__Null': []
          ,'MT_pre__Par': []
          ,'MT_pre__ParIndexed': []
          ,'MT_pre__rightExpr': []
          ,'MT_pre__Listen': []
          ,'MT_pre__MatchModel': []
          ,'MT_pre__Site': []
          ,'MT_pre__New': []
          ,'MT_pre__Concat': [( 'MT_pre__hasArgs', self.createNewMT_pre__hasArgs)]
          ,'MT_pre__trace_link': []
          ,'MT_pre__SignalType': []
          ,'MT_pre__Subtract': [( 'MT_pre__hasArgs', self.createNewMT_pre__hasArgs)]
          ,'MT_pre__directLink_S': []
          ,'MT_pre__Inst': []
          ,'MT_pre__PythonRef': []
          ,'MT_pre__EntryPoint': []
          ,'MT_pre__CONJUGATE1': []
          ,'MT_pre__Protocol': []
          ,'MT_pre__directLink_T': []
          ,'MT_pre__Def': []
          ,'MT_pre__StateMachine': []
          ,'MT_pre__Seq': []
          ,'MT_pre__match_contains': []
          ,'MT_pre__Transition': []
          ,'MT_pre__Vertex': []
          ,'MT_pre__StateMachineElement': []
          ,'MT_pre__hasArgs': []
          ,'MT_pre__Port': []
          ,'MT_pre__hasAttribute_S': []
          ,'MT_pre__hasAttribute_T': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__Condition': []
          ,'MT_pre__Attribute': [( 'MT_pre__hasArgs', self.createNewMT_pre__hasArgs)]
          ,'MT_pre__Print': []
          ,'MT_pre__Constant': [( 'MT_pre__hasArgs', self.createNewMT_pre__hasArgs)]
          ,'MT_pre__ExitPoint': []
          ,'MT_pre__Pattern': []
          ,'MT_pre__TransitionType': []
          ,'MT_pre__Capsule': []
          ,'MT_pre__ListenBranch': []
          ,'MT_pre__ProcDef': []
          ,'MT_pre__Delay': []
          ,'MT_pre__Add': [( 'MT_pre__hasArgs', self.createNewMT_pre__hasArgs)]
          ,'MT_pre__Trigger_S': []
          ,'MT_pre__Proc': []
          ,'MT_pre__Trigger_T': []
          ,'MT_pre__PLUGIN2': []
          ,'MT_pre__Action': []
          ,'MT_pre__Model_T': []
          ,'MT_pre__Model_S': []
          ,'MT_pre__CapsuleRole': []
          ,'MT_pre__leftExpr': []
          ,'MT_pre__FIXED0': []
          ,'MT_pre__Equation': [] }
    self.ConnectivityMap['MT_pre__directLink_S']={
           'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__OPTIONAL1': []
          ,'MT_pre__backward_link': []
          ,'MT_pre__Expression': []
          ,'MT_pre__PhysicalThread': []
          ,'MT_pre__PortRef': []
          ,'MT_pre__PortConnectorRef': []
          ,'MT_pre__Name': []
          ,'MT_pre__RoleType': []
          ,'MT_pre__Module': []
          ,'MT_pre__Thread': []
          ,'MT_pre__indirectLink_S': [( 'MT_pre__MetaModelElement_S', self.createNewMT_pre__MetaModelElement_S), ( 'MT_pre__Element', self.createNewMT_pre__Element), ( 'MT_pre__NamedElement', self.createNewMT_pre__NamedElement), ( 'MT_pre__Trigger_S', self.createNewMT_pre__Trigger_S), ( 'MT_pre__Action', self.createNewMT_pre__Action), ( 'MT_pre__PortRef', self.createNewMT_pre__PortRef), ( 'MT_pre__PortConnectorRef', self.createNewMT_pre__PortConnectorRef), ( 'MT_pre__StateMachineElement', self.createNewMT_pre__StateMachineElement), ( 'MT_pre__Protocol', self.createNewMT_pre__Protocol), ( 'MT_pre__Signal', self.createNewMT_pre__Signal), ( 'MT_pre__Port', self.createNewMT_pre__Port), ( 'MT_pre__Vertex', self.createNewMT_pre__Vertex), ( 'MT_pre__InitialPoint', self.createNewMT_pre__InitialPoint), ( 'MT_pre__EntryPoint', self.createNewMT_pre__EntryPoint), ( 'MT_pre__ExitPoint', self.createNewMT_pre__ExitPoint), ( 'MT_pre__Transition', self.createNewMT_pre__Transition), ( 'MT_pre__StateMachine', self.createNewMT_pre__StateMachine), ( 'MT_pre__State', self.createNewMT_pre__State), ( 'MT_pre__Capsule', self.createNewMT_pre__Capsule), ( 'MT_pre__PackageContainer', self.createNewMT_pre__PackageContainer), ( 'MT_pre__Model_S', self.createNewMT_pre__Model_S), ( 'MT_pre__Package', self.createNewMT_pre__Package), ( 'MT_pre__CapsuleRole', self.createNewMT_pre__CapsuleRole), ( 'MT_pre__PortConnector', self.createNewMT_pre__PortConnector), ( 'MT_pre__Thread', self.createNewMT_pre__Thread), ( 'MT_pre__PhysicalThread', self.createNewMT_pre__PhysicalThread), ( 'MT_pre__LogicalThread', self.createNewMT_pre__LogicalThread), ( 'MT_pre__PortType', self.createNewMT_pre__PortType), ( 'MT_pre__BASE0', self.createNewMT_pre__BASE0), ( 'MT_pre__CONJUGATE1', self.createNewMT_pre__CONJUGATE1), ( 'MT_pre__SignalType', self.createNewMT_pre__SignalType), ( 'MT_pre__OUT1', self.createNewMT_pre__OUT1), ( 'MT_pre__IN0', self.createNewMT_pre__IN0), ( 'MT_pre__RoleType', self.createNewMT_pre__RoleType), ( 'MT_pre__FIXED0', self.createNewMT_pre__FIXED0), ( 'MT_pre__OPTIONAL1', self.createNewMT_pre__OPTIONAL1), ( 'MT_pre__PLUGIN2', self.createNewMT_pre__PLUGIN2), ( 'MT_pre__TransitionType', self.createNewMT_pre__TransitionType), ( 'MT_pre__SIBLING0', self.createNewMT_pre__SIBLING0), ( 'MT_pre__IN1', self.createNewMT_pre__IN1), ( 'MT_pre__OUT2', self.createNewMT_pre__OUT2)]
          ,'MT_pre__ConditionBranch': []
          ,'MT_pre__BASE0': []
          ,'MT_pre__NamedElement': []
          ,'MT_pre__Element': []
          ,'MT_pre__OUT2': []
          ,'MT_pre__OUT1': []
          ,'MT_pre__LocalDef': []
          ,'MT_pre__Expr': []
          ,'MT_pre__Signal': []
          ,'MT_pre__MetaModelElement_T': []
          ,'MT_pre__MetaModelElement_S': []
          ,'MT_pre__Package': []
          ,'MT_pre__apply_contains': []
          ,'MT_pre__ConditionSet': []
          ,'MT_pre__State': []
          ,'MT_pre__MatchCase': []
          ,'MT_pre__PortType': []
          ,'MT_pre__Match': []
          ,'MT_pre__paired_with': []
          ,'MT_pre__PackageContainer': []
          ,'MT_pre__IN1': []
          ,'MT_pre__IN0': []
          ,'MT_pre__LogicalThread': []
          ,'MT_pre__Operation': []
          ,'MT_pre__FuncDef': []
          ,'MT_pre__SIBLING0': []
          ,'MT_pre__InitialPoint': []
          ,'MT_pre__PortConnector': []
          ,'MT_pre__Null': []
          ,'MT_pre__Par': []
          ,'MT_pre__ParIndexed': []
          ,'MT_pre__rightExpr': []
          ,'MT_pre__Listen': []
          ,'MT_pre__MatchModel': []
          ,'MT_pre__Site': []
          ,'MT_pre__New': []
          ,'MT_pre__Concat': []
          ,'MT_pre__trace_link': []
          ,'MT_pre__SignalType': []
          ,'MT_pre__Subtract': []
          ,'MT_pre__directLink_S': [( 'MT_pre__MetaModelElement_S', self.createNewMT_pre__MetaModelElement_S), ( 'MT_pre__Element', self.createNewMT_pre__Element), ( 'MT_pre__NamedElement', self.createNewMT_pre__NamedElement), ( 'MT_pre__Trigger_S', self.createNewMT_pre__Trigger_S), ( 'MT_pre__Action', self.createNewMT_pre__Action), ( 'MT_pre__PortRef', self.createNewMT_pre__PortRef), ( 'MT_pre__PortConnectorRef', self.createNewMT_pre__PortConnectorRef), ( 'MT_pre__StateMachineElement', self.createNewMT_pre__StateMachineElement), ( 'MT_pre__Protocol', self.createNewMT_pre__Protocol), ( 'MT_pre__Signal', self.createNewMT_pre__Signal), ( 'MT_pre__Port', self.createNewMT_pre__Port), ( 'MT_pre__Vertex', self.createNewMT_pre__Vertex), ( 'MT_pre__InitialPoint', self.createNewMT_pre__InitialPoint), ( 'MT_pre__EntryPoint', self.createNewMT_pre__EntryPoint), ( 'MT_pre__ExitPoint', self.createNewMT_pre__ExitPoint), ( 'MT_pre__Transition', self.createNewMT_pre__Transition), ( 'MT_pre__StateMachine', self.createNewMT_pre__StateMachine), ( 'MT_pre__State', self.createNewMT_pre__State), ( 'MT_pre__Capsule', self.createNewMT_pre__Capsule), ( 'MT_pre__PackageContainer', self.createNewMT_pre__PackageContainer), ( 'MT_pre__Model_S', self.createNewMT_pre__Model_S), ( 'MT_pre__Package', self.createNewMT_pre__Package), ( 'MT_pre__CapsuleRole', self.createNewMT_pre__CapsuleRole), ( 'MT_pre__PortConnector', self.createNewMT_pre__PortConnector), ( 'MT_pre__Thread', self.createNewMT_pre__Thread), ( 'MT_pre__PhysicalThread', self.createNewMT_pre__PhysicalThread), ( 'MT_pre__LogicalThread', self.createNewMT_pre__LogicalThread), ( 'MT_pre__PortType', self.createNewMT_pre__PortType), ( 'MT_pre__BASE0', self.createNewMT_pre__BASE0), ( 'MT_pre__CONJUGATE1', self.createNewMT_pre__CONJUGATE1), ( 'MT_pre__SignalType', self.createNewMT_pre__SignalType), ( 'MT_pre__OUT1', self.createNewMT_pre__OUT1), ( 'MT_pre__IN0', self.createNewMT_pre__IN0), ( 'MT_pre__RoleType', self.createNewMT_pre__RoleType), ( 'MT_pre__FIXED0', self.createNewMT_pre__FIXED0), ( 'MT_pre__OPTIONAL1', self.createNewMT_pre__OPTIONAL1), ( 'MT_pre__PLUGIN2', self.createNewMT_pre__PLUGIN2), ( 'MT_pre__TransitionType', self.createNewMT_pre__TransitionType), ( 'MT_pre__SIBLING0', self.createNewMT_pre__SIBLING0), ( 'MT_pre__IN1', self.createNewMT_pre__IN1), ( 'MT_pre__OUT2', self.createNewMT_pre__OUT2)]
          ,'MT_pre__Inst': []
          ,'MT_pre__PythonRef': []
          ,'MT_pre__EntryPoint': []
          ,'MT_pre__CONJUGATE1': []
          ,'MT_pre__Protocol': []
          ,'MT_pre__directLink_T': []
          ,'MT_pre__Def': []
          ,'MT_pre__StateMachine': []
          ,'MT_pre__Seq': []
          ,'MT_pre__match_contains': []
          ,'MT_pre__Transition': []
          ,'MT_pre__Vertex': []
          ,'MT_pre__StateMachineElement': []
          ,'MT_pre__hasArgs': []
          ,'MT_pre__Port': []
          ,'MT_pre__hasAttribute_S': [( 'MT_pre__MetaModelElement_S', self.createNewMT_pre__MetaModelElement_S), ( 'MT_pre__Element', self.createNewMT_pre__Element), ( 'MT_pre__NamedElement', self.createNewMT_pre__NamedElement), ( 'MT_pre__Trigger_S', self.createNewMT_pre__Trigger_S), ( 'MT_pre__Action', self.createNewMT_pre__Action), ( 'MT_pre__PortRef', self.createNewMT_pre__PortRef), ( 'MT_pre__PortConnectorRef', self.createNewMT_pre__PortConnectorRef), ( 'MT_pre__StateMachineElement', self.createNewMT_pre__StateMachineElement), ( 'MT_pre__Protocol', self.createNewMT_pre__Protocol), ( 'MT_pre__Signal', self.createNewMT_pre__Signal), ( 'MT_pre__Port', self.createNewMT_pre__Port), ( 'MT_pre__Vertex', self.createNewMT_pre__Vertex), ( 'MT_pre__InitialPoint', self.createNewMT_pre__InitialPoint), ( 'MT_pre__EntryPoint', self.createNewMT_pre__EntryPoint), ( 'MT_pre__ExitPoint', self.createNewMT_pre__ExitPoint), ( 'MT_pre__Transition', self.createNewMT_pre__Transition), ( 'MT_pre__StateMachine', self.createNewMT_pre__StateMachine), ( 'MT_pre__State', self.createNewMT_pre__State), ( 'MT_pre__Capsule', self.createNewMT_pre__Capsule), ( 'MT_pre__PackageContainer', self.createNewMT_pre__PackageContainer), ( 'MT_pre__Model_S', self.createNewMT_pre__Model_S), ( 'MT_pre__Package', self.createNewMT_pre__Package), ( 'MT_pre__CapsuleRole', self.createNewMT_pre__CapsuleRole), ( 'MT_pre__PortConnector', self.createNewMT_pre__PortConnector), ( 'MT_pre__Thread', self.createNewMT_pre__Thread), ( 'MT_pre__PhysicalThread', self.createNewMT_pre__PhysicalThread), ( 'MT_pre__LogicalThread', self.createNewMT_pre__LogicalThread), ( 'MT_pre__PortType', self.createNewMT_pre__PortType), ( 'MT_pre__BASE0', self.createNewMT_pre__BASE0), ( 'MT_pre__CONJUGATE1', self.createNewMT_pre__CONJUGATE1), ( 'MT_pre__SignalType', self.createNewMT_pre__SignalType), ( 'MT_pre__OUT1', self.createNewMT_pre__OUT1), ( 'MT_pre__IN0', self.createNewMT_pre__IN0), ( 'MT_pre__RoleType', self.createNewMT_pre__RoleType), ( 'MT_pre__FIXED0', self.createNewMT_pre__FIXED0), ( 'MT_pre__OPTIONAL1', self.createNewMT_pre__OPTIONAL1), ( 'MT_pre__PLUGIN2', self.createNewMT_pre__PLUGIN2), ( 'MT_pre__TransitionType', self.createNewMT_pre__TransitionType), ( 'MT_pre__SIBLING0', self.createNewMT_pre__SIBLING0), ( 'MT_pre__IN1', self.createNewMT_pre__IN1), ( 'MT_pre__OUT2', self.createNewMT_pre__OUT2)]
          ,'MT_pre__hasAttribute_T': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__Condition': []
          ,'MT_pre__Attribute': []
          ,'MT_pre__Print': []
          ,'MT_pre__Constant': []
          ,'MT_pre__ExitPoint': []
          ,'MT_pre__Pattern': []
          ,'MT_pre__TransitionType': []
          ,'MT_pre__Capsule': []
          ,'MT_pre__ListenBranch': []
          ,'MT_pre__ProcDef': []
          ,'MT_pre__Delay': []
          ,'MT_pre__Add': []
          ,'MT_pre__Trigger_S': []
          ,'MT_pre__Proc': []
          ,'MT_pre__Trigger_T': []
          ,'MT_pre__PLUGIN2': []
          ,'MT_pre__Action': []
          ,'MT_pre__Model_T': []
          ,'MT_pre__Model_S': []
          ,'MT_pre__CapsuleRole': []
          ,'MT_pre__leftExpr': []
          ,'MT_pre__FIXED0': []
          ,'MT_pre__Equation': [] }
    self.ConnectivityMap['MT_pre__Inst']={
           'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__OPTIONAL1': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__backward_link': []
          ,'MT_pre__Expression': []
          ,'MT_pre__PhysicalThread': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__PortRef': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__PortConnectorRef': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Name': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__RoleType': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Module': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Thread': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__indirectLink_S': []
          ,'MT_pre__ConditionBranch': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__BASE0': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__NamedElement': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Element': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__OUT2': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__OUT1': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__LocalDef': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Expr': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Signal': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__MetaModelElement_T': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__MetaModelElement_S': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Package': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__apply_contains': []
          ,'MT_pre__ConditionSet': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__State': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__MatchCase': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__PortType': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Match': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__paired_with': []
          ,'MT_pre__PackageContainer': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__IN1': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__IN0': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__LogicalThread': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Operation': []
          ,'MT_pre__FuncDef': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__SIBLING0': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__InitialPoint': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__PortConnector': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Null': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Par': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__ParIndexed': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__rightExpr': []
          ,'MT_pre__Listen': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__MatchModel': []
          ,'MT_pre__Site': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__New': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Concat': []
          ,'MT_pre__trace_link': []
          ,'MT_pre__SignalType': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Subtract': []
          ,'MT_pre__directLink_S': []
          ,'MT_pre__Inst': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__PythonRef': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__EntryPoint': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__CONJUGATE1': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Protocol': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__directLink_T': []
          ,'MT_pre__Def': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__StateMachine': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Seq': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__match_contains': []
          ,'MT_pre__Transition': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Vertex': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__StateMachineElement': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__hasArgs': []
          ,'MT_pre__Port': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__hasAttribute_S': []
          ,'MT_pre__hasAttribute_T': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__Condition': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Attribute': [( 'MT_pre__hasAttribute_T', self.createNewMT_pre__hasAttribute_T)]
          ,'MT_pre__Print': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Constant': []
          ,'MT_pre__ExitPoint': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Pattern': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__TransitionType': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Capsule': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__ListenBranch': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__ProcDef': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Delay': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Add': []
          ,'MT_pre__Trigger_S': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Proc': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Trigger_T': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__PLUGIN2': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Action': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Model_T': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Model_S': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__CapsuleRole': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__leftExpr': []
          ,'MT_pre__FIXED0': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Equation': [] }
    self.ConnectivityMap['MT_pre__directLink_T']={
           'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__OPTIONAL1': []
          ,'MT_pre__backward_link': [( 'MT_pre__MetaModelElement_T', self.createNewMT_pre__MetaModelElement_T), ( 'MT_pre__Def', self.createNewMT_pre__Def), ( 'MT_pre__Expr', self.createNewMT_pre__Expr), ( 'MT_pre__Pattern', self.createNewMT_pre__Pattern), ( 'MT_pre__Proc', self.createNewMT_pre__Proc), ( 'MT_pre__ProcDef', self.createNewMT_pre__ProcDef), ( 'MT_pre__FuncDef', self.createNewMT_pre__FuncDef), ( 'MT_pre__Name', self.createNewMT_pre__Name), ( 'MT_pre__PythonRef', self.createNewMT_pre__PythonRef), ( 'MT_pre__Module', self.createNewMT_pre__Module), ( 'MT_pre__Null', self.createNewMT_pre__Null), ( 'MT_pre__Trigger_T', self.createNewMT_pre__Trigger_T), ( 'MT_pre__Listen', self.createNewMT_pre__Listen), ( 'MT_pre__ConditionBranch', self.createNewMT_pre__ConditionBranch), ( 'MT_pre__ListenBranch', self.createNewMT_pre__ListenBranch), ( 'MT_pre__Site', self.createNewMT_pre__Site), ( 'MT_pre__Model_T', self.createNewMT_pre__Model_T), ( 'MT_pre__MatchCase', self.createNewMT_pre__MatchCase), ( 'MT_pre__Condition', self.createNewMT_pre__Condition), ( 'MT_pre__New', self.createNewMT_pre__New), ( 'MT_pre__Delay', self.createNewMT_pre__Delay), ( 'MT_pre__Par', self.createNewMT_pre__Par), ( 'MT_pre__ParIndexed', self.createNewMT_pre__ParIndexed), ( 'MT_pre__Inst', self.createNewMT_pre__Inst), ( 'MT_pre__LocalDef', self.createNewMT_pre__LocalDef), ( 'MT_pre__Seq', self.createNewMT_pre__Seq), ( 'MT_pre__ConditionSet', self.createNewMT_pre__ConditionSet), ( 'MT_pre__Match', self.createNewMT_pre__Match), ( 'MT_pre__Print', self.createNewMT_pre__Print)]
          ,'MT_pre__Expression': []
          ,'MT_pre__PhysicalThread': []
          ,'MT_pre__PortRef': []
          ,'MT_pre__PortConnectorRef': []
          ,'MT_pre__Name': []
          ,'MT_pre__RoleType': []
          ,'MT_pre__Module': []
          ,'MT_pre__Thread': []
          ,'MT_pre__indirectLink_S': []
          ,'MT_pre__ConditionBranch': []
          ,'MT_pre__BASE0': []
          ,'MT_pre__NamedElement': []
          ,'MT_pre__Element': []
          ,'MT_pre__OUT2': []
          ,'MT_pre__OUT1': []
          ,'MT_pre__LocalDef': []
          ,'MT_pre__Expr': []
          ,'MT_pre__Signal': []
          ,'MT_pre__MetaModelElement_T': []
          ,'MT_pre__MetaModelElement_S': []
          ,'MT_pre__Package': []
          ,'MT_pre__apply_contains': []
          ,'MT_pre__ConditionSet': []
          ,'MT_pre__State': []
          ,'MT_pre__MatchCase': []
          ,'MT_pre__PortType': []
          ,'MT_pre__Match': []
          ,'MT_pre__paired_with': []
          ,'MT_pre__PackageContainer': []
          ,'MT_pre__IN1': []
          ,'MT_pre__IN0': []
          ,'MT_pre__LogicalThread': []
          ,'MT_pre__Operation': []
          ,'MT_pre__FuncDef': []
          ,'MT_pre__SIBLING0': []
          ,'MT_pre__InitialPoint': []
          ,'MT_pre__PortConnector': []
          ,'MT_pre__Null': []
          ,'MT_pre__Par': []
          ,'MT_pre__ParIndexed': []
          ,'MT_pre__rightExpr': []
          ,'MT_pre__Listen': []
          ,'MT_pre__MatchModel': []
          ,'MT_pre__Site': []
          ,'MT_pre__New': []
          ,'MT_pre__Concat': []
          ,'MT_pre__trace_link': [( 'MT_pre__MetaModelElement_T', self.createNewMT_pre__MetaModelElement_T), ( 'MT_pre__Def', self.createNewMT_pre__Def), ( 'MT_pre__Expr', self.createNewMT_pre__Expr), ( 'MT_pre__Pattern', self.createNewMT_pre__Pattern), ( 'MT_pre__Proc', self.createNewMT_pre__Proc), ( 'MT_pre__ProcDef', self.createNewMT_pre__ProcDef), ( 'MT_pre__FuncDef', self.createNewMT_pre__FuncDef), ( 'MT_pre__Name', self.createNewMT_pre__Name), ( 'MT_pre__PythonRef', self.createNewMT_pre__PythonRef), ( 'MT_pre__Module', self.createNewMT_pre__Module), ( 'MT_pre__Null', self.createNewMT_pre__Null), ( 'MT_pre__Trigger_T', self.createNewMT_pre__Trigger_T), ( 'MT_pre__Listen', self.createNewMT_pre__Listen), ( 'MT_pre__ConditionBranch', self.createNewMT_pre__ConditionBranch), ( 'MT_pre__ListenBranch', self.createNewMT_pre__ListenBranch), ( 'MT_pre__Site', self.createNewMT_pre__Site), ( 'MT_pre__Model_T', self.createNewMT_pre__Model_T), ( 'MT_pre__MatchCase', self.createNewMT_pre__MatchCase), ( 'MT_pre__Condition', self.createNewMT_pre__Condition), ( 'MT_pre__New', self.createNewMT_pre__New), ( 'MT_pre__Delay', self.createNewMT_pre__Delay), ( 'MT_pre__Par', self.createNewMT_pre__Par), ( 'MT_pre__ParIndexed', self.createNewMT_pre__ParIndexed), ( 'MT_pre__Inst', self.createNewMT_pre__Inst), ( 'MT_pre__LocalDef', self.createNewMT_pre__LocalDef), ( 'MT_pre__Seq', self.createNewMT_pre__Seq), ( 'MT_pre__ConditionSet', self.createNewMT_pre__ConditionSet), ( 'MT_pre__Match', self.createNewMT_pre__Match), ( 'MT_pre__Print', self.createNewMT_pre__Print)]
          ,'MT_pre__SignalType': []
          ,'MT_pre__Subtract': []
          ,'MT_pre__directLink_S': []
          ,'MT_pre__Inst': []
          ,'MT_pre__PythonRef': []
          ,'MT_pre__EntryPoint': []
          ,'MT_pre__CONJUGATE1': []
          ,'MT_pre__Protocol': []
          ,'MT_pre__directLink_T': [( 'MT_pre__MetaModelElement_T', self.createNewMT_pre__MetaModelElement_T), ( 'MT_pre__Def', self.createNewMT_pre__Def), ( 'MT_pre__Expr', self.createNewMT_pre__Expr), ( 'MT_pre__Pattern', self.createNewMT_pre__Pattern), ( 'MT_pre__Proc', self.createNewMT_pre__Proc), ( 'MT_pre__ProcDef', self.createNewMT_pre__ProcDef), ( 'MT_pre__FuncDef', self.createNewMT_pre__FuncDef), ( 'MT_pre__Name', self.createNewMT_pre__Name), ( 'MT_pre__PythonRef', self.createNewMT_pre__PythonRef), ( 'MT_pre__Module', self.createNewMT_pre__Module), ( 'MT_pre__Null', self.createNewMT_pre__Null), ( 'MT_pre__Trigger_T', self.createNewMT_pre__Trigger_T), ( 'MT_pre__Listen', self.createNewMT_pre__Listen), ( 'MT_pre__ConditionBranch', self.createNewMT_pre__ConditionBranch), ( 'MT_pre__ListenBranch', self.createNewMT_pre__ListenBranch), ( 'MT_pre__Site', self.createNewMT_pre__Site), ( 'MT_pre__Model_T', self.createNewMT_pre__Model_T), ( 'MT_pre__MatchCase', self.createNewMT_pre__MatchCase), ( 'MT_pre__Condition', self.createNewMT_pre__Condition), ( 'MT_pre__New', self.createNewMT_pre__New), ( 'MT_pre__Delay', self.createNewMT_pre__Delay), ( 'MT_pre__Par', self.createNewMT_pre__Par), ( 'MT_pre__ParIndexed', self.createNewMT_pre__ParIndexed), ( 'MT_pre__Inst', self.createNewMT_pre__Inst), ( 'MT_pre__LocalDef', self.createNewMT_pre__LocalDef), ( 'MT_pre__Seq', self.createNewMT_pre__Seq), ( 'MT_pre__ConditionSet', self.createNewMT_pre__ConditionSet), ( 'MT_pre__Match', self.createNewMT_pre__Match), ( 'MT_pre__Print', self.createNewMT_pre__Print)]
          ,'MT_pre__Def': []
          ,'MT_pre__StateMachine': []
          ,'MT_pre__Seq': []
          ,'MT_pre__match_contains': []
          ,'MT_pre__Transition': []
          ,'MT_pre__Vertex': []
          ,'MT_pre__StateMachineElement': []
          ,'MT_pre__hasArgs': []
          ,'MT_pre__Port': []
          ,'MT_pre__hasAttribute_S': []
          ,'MT_pre__hasAttribute_T': [( 'MT_pre__MetaModelElement_T', self.createNewMT_pre__MetaModelElement_T), ( 'MT_pre__Def', self.createNewMT_pre__Def), ( 'MT_pre__Expr', self.createNewMT_pre__Expr), ( 'MT_pre__Pattern', self.createNewMT_pre__Pattern), ( 'MT_pre__Proc', self.createNewMT_pre__Proc), ( 'MT_pre__ProcDef', self.createNewMT_pre__ProcDef), ( 'MT_pre__FuncDef', self.createNewMT_pre__FuncDef), ( 'MT_pre__Name', self.createNewMT_pre__Name), ( 'MT_pre__PythonRef', self.createNewMT_pre__PythonRef), ( 'MT_pre__Module', self.createNewMT_pre__Module), ( 'MT_pre__Null', self.createNewMT_pre__Null), ( 'MT_pre__Trigger_T', self.createNewMT_pre__Trigger_T), ( 'MT_pre__Listen', self.createNewMT_pre__Listen), ( 'MT_pre__ConditionBranch', self.createNewMT_pre__ConditionBranch), ( 'MT_pre__ListenBranch', self.createNewMT_pre__ListenBranch), ( 'MT_pre__Site', self.createNewMT_pre__Site), ( 'MT_pre__Model_T', self.createNewMT_pre__Model_T), ( 'MT_pre__MatchCase', self.createNewMT_pre__MatchCase), ( 'MT_pre__Condition', self.createNewMT_pre__Condition), ( 'MT_pre__New', self.createNewMT_pre__New), ( 'MT_pre__Delay', self.createNewMT_pre__Delay), ( 'MT_pre__Par', self.createNewMT_pre__Par), ( 'MT_pre__ParIndexed', self.createNewMT_pre__ParIndexed), ( 'MT_pre__Inst', self.createNewMT_pre__Inst), ( 'MT_pre__LocalDef', self.createNewMT_pre__LocalDef), ( 'MT_pre__Seq', self.createNewMT_pre__Seq), ( 'MT_pre__ConditionSet', self.createNewMT_pre__ConditionSet), ( 'MT_pre__Match', self.createNewMT_pre__Match), ( 'MT_pre__Print', self.createNewMT_pre__Print)]
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__Condition': []
          ,'MT_pre__Attribute': []
          ,'MT_pre__Print': []
          ,'MT_pre__Constant': []
          ,'MT_pre__ExitPoint': []
          ,'MT_pre__Pattern': []
          ,'MT_pre__TransitionType': []
          ,'MT_pre__Capsule': []
          ,'MT_pre__ListenBranch': []
          ,'MT_pre__ProcDef': []
          ,'MT_pre__Delay': []
          ,'MT_pre__Add': []
          ,'MT_pre__Trigger_S': []
          ,'MT_pre__Proc': []
          ,'MT_pre__Trigger_T': []
          ,'MT_pre__PLUGIN2': []
          ,'MT_pre__Action': []
          ,'MT_pre__Model_T': []
          ,'MT_pre__Model_S': []
          ,'MT_pre__CapsuleRole': []
          ,'MT_pre__leftExpr': []
          ,'MT_pre__FIXED0': []
          ,'MT_pre__Equation': [] }
    self.ConnectivityMap['MT_pre__EntryPoint']={
           'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__OPTIONAL1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__backward_link': []
          ,'MT_pre__Expression': []
          ,'MT_pre__PhysicalThread': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__PortRef': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__PortConnectorRef': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Name': []
          ,'MT_pre__RoleType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Module': []
          ,'MT_pre__Thread': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__indirectLink_S': []
          ,'MT_pre__ConditionBranch': []
          ,'MT_pre__BASE0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__NamedElement': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Element': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__OUT2': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__OUT1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__LocalDef': []
          ,'MT_pre__Expr': []
          ,'MT_pre__Signal': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__MetaModelElement_T': []
          ,'MT_pre__MetaModelElement_S': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Package': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__apply_contains': []
          ,'MT_pre__ConditionSet': []
          ,'MT_pre__State': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__MatchCase': []
          ,'MT_pre__PortType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Match': []
          ,'MT_pre__paired_with': []
          ,'MT_pre__PackageContainer': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__IN1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__IN0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__LogicalThread': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Operation': []
          ,'MT_pre__FuncDef': []
          ,'MT_pre__SIBLING0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__InitialPoint': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__PortConnector': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Null': []
          ,'MT_pre__Par': []
          ,'MT_pre__ParIndexed': []
          ,'MT_pre__rightExpr': []
          ,'MT_pre__Listen': []
          ,'MT_pre__MatchModel': []
          ,'MT_pre__Site': []
          ,'MT_pre__New': []
          ,'MT_pre__Concat': []
          ,'MT_pre__trace_link': []
          ,'MT_pre__SignalType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Subtract': []
          ,'MT_pre__directLink_S': []
          ,'MT_pre__Inst': []
          ,'MT_pre__PythonRef': []
          ,'MT_pre__EntryPoint': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__CONJUGATE1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Protocol': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__directLink_T': []
          ,'MT_pre__Def': []
          ,'MT_pre__StateMachine': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Seq': []
          ,'MT_pre__match_contains': []
          ,'MT_pre__Transition': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Vertex': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__StateMachineElement': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__hasArgs': []
          ,'MT_pre__Port': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__hasAttribute_S': []
          ,'MT_pre__hasAttribute_T': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__Condition': []
          ,'MT_pre__Attribute': [( 'MT_pre__hasAttribute_S', self.createNewMT_pre__hasAttribute_S)]
          ,'MT_pre__Print': []
          ,'MT_pre__Constant': []
          ,'MT_pre__ExitPoint': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Pattern': []
          ,'MT_pre__TransitionType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Capsule': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__ListenBranch': []
          ,'MT_pre__ProcDef': []
          ,'MT_pre__Delay': []
          ,'MT_pre__Add': []
          ,'MT_pre__Trigger_S': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Proc': []
          ,'MT_pre__Trigger_T': []
          ,'MT_pre__PLUGIN2': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Action': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Model_T': []
          ,'MT_pre__Model_S': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__CapsuleRole': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__leftExpr': []
          ,'MT_pre__FIXED0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Equation': [] }
    self.ConnectivityMap['MT_pre__CONJUGATE1']={
           'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__OPTIONAL1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__backward_link': []
          ,'MT_pre__Expression': []
          ,'MT_pre__PhysicalThread': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__PortRef': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__PortConnectorRef': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Name': []
          ,'MT_pre__RoleType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Module': []
          ,'MT_pre__Thread': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__indirectLink_S': []
          ,'MT_pre__ConditionBranch': []
          ,'MT_pre__BASE0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__NamedElement': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Element': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__OUT2': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__OUT1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__LocalDef': []
          ,'MT_pre__Expr': []
          ,'MT_pre__Signal': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__MetaModelElement_T': []
          ,'MT_pre__MetaModelElement_S': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Package': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__apply_contains': []
          ,'MT_pre__ConditionSet': []
          ,'MT_pre__State': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__MatchCase': []
          ,'MT_pre__PortType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Match': []
          ,'MT_pre__paired_with': []
          ,'MT_pre__PackageContainer': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__IN1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__IN0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__LogicalThread': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Operation': []
          ,'MT_pre__FuncDef': []
          ,'MT_pre__SIBLING0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__InitialPoint': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__PortConnector': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Null': []
          ,'MT_pre__Par': []
          ,'MT_pre__ParIndexed': []
          ,'MT_pre__rightExpr': []
          ,'MT_pre__Listen': []
          ,'MT_pre__MatchModel': []
          ,'MT_pre__Site': []
          ,'MT_pre__New': []
          ,'MT_pre__Concat': []
          ,'MT_pre__trace_link': []
          ,'MT_pre__SignalType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Subtract': []
          ,'MT_pre__directLink_S': []
          ,'MT_pre__Inst': []
          ,'MT_pre__PythonRef': []
          ,'MT_pre__EntryPoint': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__CONJUGATE1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Protocol': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__directLink_T': []
          ,'MT_pre__Def': []
          ,'MT_pre__StateMachine': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Seq': []
          ,'MT_pre__match_contains': []
          ,'MT_pre__Transition': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Vertex': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__StateMachineElement': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__hasArgs': []
          ,'MT_pre__Port': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__hasAttribute_S': []
          ,'MT_pre__hasAttribute_T': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__Condition': []
          ,'MT_pre__Attribute': [( 'MT_pre__hasAttribute_S', self.createNewMT_pre__hasAttribute_S)]
          ,'MT_pre__Print': []
          ,'MT_pre__Constant': []
          ,'MT_pre__ExitPoint': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Pattern': []
          ,'MT_pre__TransitionType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Capsule': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__ListenBranch': []
          ,'MT_pre__ProcDef': []
          ,'MT_pre__Delay': []
          ,'MT_pre__Add': []
          ,'MT_pre__Trigger_S': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Proc': []
          ,'MT_pre__Trigger_T': []
          ,'MT_pre__PLUGIN2': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Action': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Model_T': []
          ,'MT_pre__Model_S': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__CapsuleRole': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__leftExpr': []
          ,'MT_pre__FIXED0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Equation': [] }
    self.ConnectivityMap['MT_pre__Protocol']={
           'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__OPTIONAL1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__backward_link': []
          ,'MT_pre__Expression': []
          ,'MT_pre__PhysicalThread': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__PortRef': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__PortConnectorRef': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Name': []
          ,'MT_pre__RoleType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Module': []
          ,'MT_pre__Thread': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__indirectLink_S': []
          ,'MT_pre__ConditionBranch': []
          ,'MT_pre__BASE0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__NamedElement': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Element': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__OUT2': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__OUT1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__LocalDef': []
          ,'MT_pre__Expr': []
          ,'MT_pre__Signal': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__MetaModelElement_T': []
          ,'MT_pre__MetaModelElement_S': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Package': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__apply_contains': []
          ,'MT_pre__ConditionSet': []
          ,'MT_pre__State': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__MatchCase': []
          ,'MT_pre__PortType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Match': []
          ,'MT_pre__paired_with': []
          ,'MT_pre__PackageContainer': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__IN1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__IN0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__LogicalThread': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Operation': []
          ,'MT_pre__FuncDef': []
          ,'MT_pre__SIBLING0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__InitialPoint': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__PortConnector': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Null': []
          ,'MT_pre__Par': []
          ,'MT_pre__ParIndexed': []
          ,'MT_pre__rightExpr': []
          ,'MT_pre__Listen': []
          ,'MT_pre__MatchModel': []
          ,'MT_pre__Site': []
          ,'MT_pre__New': []
          ,'MT_pre__Concat': []
          ,'MT_pre__trace_link': []
          ,'MT_pre__SignalType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Subtract': []
          ,'MT_pre__directLink_S': []
          ,'MT_pre__Inst': []
          ,'MT_pre__PythonRef': []
          ,'MT_pre__EntryPoint': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__CONJUGATE1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Protocol': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__directLink_T': []
          ,'MT_pre__Def': []
          ,'MT_pre__StateMachine': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Seq': []
          ,'MT_pre__match_contains': []
          ,'MT_pre__Transition': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Vertex': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__StateMachineElement': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__hasArgs': []
          ,'MT_pre__Port': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__hasAttribute_S': []
          ,'MT_pre__hasAttribute_T': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__Condition': []
          ,'MT_pre__Attribute': [( 'MT_pre__hasAttribute_S', self.createNewMT_pre__hasAttribute_S)]
          ,'MT_pre__Print': []
          ,'MT_pre__Constant': []
          ,'MT_pre__ExitPoint': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Pattern': []
          ,'MT_pre__TransitionType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Capsule': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__ListenBranch': []
          ,'MT_pre__ProcDef': []
          ,'MT_pre__Delay': []
          ,'MT_pre__Add': []
          ,'MT_pre__Trigger_S': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Proc': []
          ,'MT_pre__Trigger_T': []
          ,'MT_pre__PLUGIN2': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Action': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Model_T': []
          ,'MT_pre__Model_S': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__CapsuleRole': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__leftExpr': []
          ,'MT_pre__FIXED0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Equation': [] }
    self.ConnectivityMap['MT_pre__PythonRef']={
           'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__OPTIONAL1': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__backward_link': []
          ,'MT_pre__Expression': []
          ,'MT_pre__PhysicalThread': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__PortRef': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__PortConnectorRef': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Name': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__RoleType': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Module': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Thread': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__indirectLink_S': []
          ,'MT_pre__ConditionBranch': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__BASE0': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__NamedElement': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Element': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__OUT2': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__OUT1': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__LocalDef': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Expr': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Signal': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__MetaModelElement_T': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__MetaModelElement_S': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Package': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__apply_contains': []
          ,'MT_pre__ConditionSet': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__State': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__MatchCase': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__PortType': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Match': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__paired_with': []
          ,'MT_pre__PackageContainer': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__IN1': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__IN0': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__LogicalThread': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Operation': []
          ,'MT_pre__FuncDef': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__SIBLING0': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__InitialPoint': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__PortConnector': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Null': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Par': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__ParIndexed': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__rightExpr': []
          ,'MT_pre__Listen': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__MatchModel': []
          ,'MT_pre__Site': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__New': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Concat': []
          ,'MT_pre__trace_link': []
          ,'MT_pre__SignalType': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Subtract': []
          ,'MT_pre__directLink_S': []
          ,'MT_pre__Inst': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__PythonRef': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__EntryPoint': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__CONJUGATE1': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Protocol': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__directLink_T': []
          ,'MT_pre__Def': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__StateMachine': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Seq': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__match_contains': []
          ,'MT_pre__Transition': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Vertex': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__StateMachineElement': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__hasArgs': []
          ,'MT_pre__Port': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__hasAttribute_S': []
          ,'MT_pre__hasAttribute_T': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__Condition': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Attribute': [( 'MT_pre__hasAttribute_T', self.createNewMT_pre__hasAttribute_T)]
          ,'MT_pre__Print': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Constant': []
          ,'MT_pre__ExitPoint': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Pattern': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__TransitionType': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Capsule': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__ListenBranch': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__ProcDef': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Delay': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Add': []
          ,'MT_pre__Trigger_S': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Proc': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Trigger_T': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__PLUGIN2': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Action': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Model_T': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Model_S': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__CapsuleRole': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__leftExpr': []
          ,'MT_pre__FIXED0': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Equation': [] }
    self.ConnectivityMap['MT_pre__hasAttribute_S']={
           'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__OPTIONAL1': []
          ,'MT_pre__backward_link': []
          ,'MT_pre__Expression': []
          ,'MT_pre__PhysicalThread': []
          ,'MT_pre__PortRef': []
          ,'MT_pre__PortConnectorRef': []
          ,'MT_pre__Name': []
          ,'MT_pre__RoleType': []
          ,'MT_pre__Module': []
          ,'MT_pre__Thread': []
          ,'MT_pre__indirectLink_S': []
          ,'MT_pre__ConditionBranch': []
          ,'MT_pre__BASE0': []
          ,'MT_pre__NamedElement': []
          ,'MT_pre__Element': []
          ,'MT_pre__OUT2': []
          ,'MT_pre__OUT1': []
          ,'MT_pre__LocalDef': []
          ,'MT_pre__Expr': []
          ,'MT_pre__Signal': []
          ,'MT_pre__MetaModelElement_T': []
          ,'MT_pre__MetaModelElement_S': []
          ,'MT_pre__Package': []
          ,'MT_pre__apply_contains': []
          ,'MT_pre__ConditionSet': []
          ,'MT_pre__State': []
          ,'MT_pre__MatchCase': []
          ,'MT_pre__PortType': []
          ,'MT_pre__Match': []
          ,'MT_pre__paired_with': []
          ,'MT_pre__PackageContainer': []
          ,'MT_pre__IN1': []
          ,'MT_pre__IN0': []
          ,'MT_pre__LogicalThread': []
          ,'MT_pre__Operation': []
          ,'MT_pre__FuncDef': []
          ,'MT_pre__SIBLING0': []
          ,'MT_pre__InitialPoint': []
          ,'MT_pre__PortConnector': []
          ,'MT_pre__Null': []
          ,'MT_pre__Par': []
          ,'MT_pre__ParIndexed': []
          ,'MT_pre__rightExpr': []
          ,'MT_pre__Listen': []
          ,'MT_pre__MatchModel': []
          ,'MT_pre__Site': []
          ,'MT_pre__New': []
          ,'MT_pre__Concat': []
          ,'MT_pre__trace_link': []
          ,'MT_pre__SignalType': []
          ,'MT_pre__Subtract': []
          ,'MT_pre__directLink_S': []
          ,'MT_pre__Inst': []
          ,'MT_pre__PythonRef': []
          ,'MT_pre__EntryPoint': []
          ,'MT_pre__CONJUGATE1': []
          ,'MT_pre__Protocol': []
          ,'MT_pre__directLink_T': []
          ,'MT_pre__Def': []
          ,'MT_pre__StateMachine': []
          ,'MT_pre__Seq': []
          ,'MT_pre__match_contains': []
          ,'MT_pre__Transition': []
          ,'MT_pre__Vertex': []
          ,'MT_pre__StateMachineElement': []
          ,'MT_pre__hasArgs': []
          ,'MT_pre__Port': []
          ,'MT_pre__hasAttribute_S': []
          ,'MT_pre__hasAttribute_T': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__Condition': []
          ,'MT_pre__Attribute': []
          ,'MT_pre__Print': []
          ,'MT_pre__Constant': []
          ,'MT_pre__ExitPoint': []
          ,'MT_pre__Pattern': []
          ,'MT_pre__TransitionType': []
          ,'MT_pre__Capsule': []
          ,'MT_pre__ListenBranch': []
          ,'MT_pre__ProcDef': []
          ,'MT_pre__Delay': []
          ,'MT_pre__Add': []
          ,'MT_pre__Trigger_S': []
          ,'MT_pre__Proc': []
          ,'MT_pre__Trigger_T': []
          ,'MT_pre__PLUGIN2': []
          ,'MT_pre__Action': []
          ,'MT_pre__Model_T': []
          ,'MT_pre__Model_S': []
          ,'MT_pre__CapsuleRole': []
          ,'MT_pre__leftExpr': []
          ,'MT_pre__FIXED0': []
          ,'MT_pre__Equation': [] }
    self.ConnectivityMap['MT_pre__StateMachine']={
           'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__OPTIONAL1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__backward_link': []
          ,'MT_pre__Expression': []
          ,'MT_pre__PhysicalThread': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__PortRef': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__PortConnectorRef': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Name': []
          ,'MT_pre__RoleType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Module': []
          ,'MT_pre__Thread': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__indirectLink_S': []
          ,'MT_pre__ConditionBranch': []
          ,'MT_pre__BASE0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__NamedElement': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Element': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__OUT2': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__OUT1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__LocalDef': []
          ,'MT_pre__Expr': []
          ,'MT_pre__Signal': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__MetaModelElement_T': []
          ,'MT_pre__MetaModelElement_S': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Package': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__apply_contains': []
          ,'MT_pre__ConditionSet': []
          ,'MT_pre__State': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__MatchCase': []
          ,'MT_pre__PortType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Match': []
          ,'MT_pre__paired_with': []
          ,'MT_pre__PackageContainer': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__IN1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__IN0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__LogicalThread': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Operation': []
          ,'MT_pre__FuncDef': []
          ,'MT_pre__SIBLING0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__InitialPoint': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__PortConnector': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Null': []
          ,'MT_pre__Par': []
          ,'MT_pre__ParIndexed': []
          ,'MT_pre__rightExpr': []
          ,'MT_pre__Listen': []
          ,'MT_pre__MatchModel': []
          ,'MT_pre__Site': []
          ,'MT_pre__New': []
          ,'MT_pre__Concat': []
          ,'MT_pre__trace_link': []
          ,'MT_pre__SignalType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Subtract': []
          ,'MT_pre__directLink_S': []
          ,'MT_pre__Inst': []
          ,'MT_pre__PythonRef': []
          ,'MT_pre__EntryPoint': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__CONJUGATE1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Protocol': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__directLink_T': []
          ,'MT_pre__Def': []
          ,'MT_pre__StateMachine': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Seq': []
          ,'MT_pre__match_contains': []
          ,'MT_pre__Transition': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Vertex': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__StateMachineElement': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__hasArgs': []
          ,'MT_pre__Port': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__hasAttribute_S': []
          ,'MT_pre__hasAttribute_T': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__Condition': []
          ,'MT_pre__Attribute': [( 'MT_pre__hasAttribute_S', self.createNewMT_pre__hasAttribute_S)]
          ,'MT_pre__Print': []
          ,'MT_pre__Constant': []
          ,'MT_pre__ExitPoint': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Pattern': []
          ,'MT_pre__TransitionType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Capsule': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__ListenBranch': []
          ,'MT_pre__ProcDef': []
          ,'MT_pre__Delay': []
          ,'MT_pre__Add': []
          ,'MT_pre__Trigger_S': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Proc': []
          ,'MT_pre__Trigger_T': []
          ,'MT_pre__PLUGIN2': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Action': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Model_T': []
          ,'MT_pre__Model_S': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__CapsuleRole': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__leftExpr': []
          ,'MT_pre__FIXED0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Equation': [] }
    self.ConnectivityMap['MT_pre__Seq']={
           'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__OPTIONAL1': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__backward_link': []
          ,'MT_pre__Expression': []
          ,'MT_pre__PhysicalThread': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__PortRef': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__PortConnectorRef': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Name': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__RoleType': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Module': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Thread': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__indirectLink_S': []
          ,'MT_pre__ConditionBranch': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__BASE0': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__NamedElement': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Element': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__OUT2': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__OUT1': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__LocalDef': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Expr': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Signal': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__MetaModelElement_T': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__MetaModelElement_S': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Package': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__apply_contains': []
          ,'MT_pre__ConditionSet': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__State': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__MatchCase': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__PortType': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Match': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__paired_with': []
          ,'MT_pre__PackageContainer': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__IN1': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__IN0': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__LogicalThread': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Operation': []
          ,'MT_pre__FuncDef': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__SIBLING0': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__InitialPoint': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__PortConnector': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Null': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Par': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__ParIndexed': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__rightExpr': []
          ,'MT_pre__Listen': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__MatchModel': []
          ,'MT_pre__Site': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__New': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Concat': []
          ,'MT_pre__trace_link': []
          ,'MT_pre__SignalType': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Subtract': []
          ,'MT_pre__directLink_S': []
          ,'MT_pre__Inst': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__PythonRef': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__EntryPoint': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__CONJUGATE1': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Protocol': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__directLink_T': []
          ,'MT_pre__Def': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__StateMachine': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Seq': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__match_contains': []
          ,'MT_pre__Transition': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Vertex': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__StateMachineElement': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__hasArgs': []
          ,'MT_pre__Port': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__hasAttribute_S': []
          ,'MT_pre__hasAttribute_T': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__Condition': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Attribute': [( 'MT_pre__hasAttribute_T', self.createNewMT_pre__hasAttribute_T)]
          ,'MT_pre__Print': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Constant': []
          ,'MT_pre__ExitPoint': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Pattern': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__TransitionType': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Capsule': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__ListenBranch': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__ProcDef': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Delay': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Add': []
          ,'MT_pre__Trigger_S': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Proc': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Trigger_T': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__PLUGIN2': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Action': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Model_T': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Model_S': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__CapsuleRole': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__leftExpr': []
          ,'MT_pre__FIXED0': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Equation': [] }
    self.ConnectivityMap['MT_pre__match_contains']={
           'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__OPTIONAL1': []
          ,'MT_pre__backward_link': []
          ,'MT_pre__Expression': []
          ,'MT_pre__PhysicalThread': []
          ,'MT_pre__PortRef': []
          ,'MT_pre__PortConnectorRef': []
          ,'MT_pre__Name': []
          ,'MT_pre__RoleType': []
          ,'MT_pre__Module': []
          ,'MT_pre__Thread': []
          ,'MT_pre__indirectLink_S': [( 'MT_pre__MetaModelElement_S', self.createNewMT_pre__MetaModelElement_S), ( 'MT_pre__Element', self.createNewMT_pre__Element), ( 'MT_pre__NamedElement', self.createNewMT_pre__NamedElement), ( 'MT_pre__Trigger_S', self.createNewMT_pre__Trigger_S), ( 'MT_pre__Action', self.createNewMT_pre__Action), ( 'MT_pre__PortRef', self.createNewMT_pre__PortRef), ( 'MT_pre__PortConnectorRef', self.createNewMT_pre__PortConnectorRef), ( 'MT_pre__StateMachineElement', self.createNewMT_pre__StateMachineElement), ( 'MT_pre__Protocol', self.createNewMT_pre__Protocol), ( 'MT_pre__Signal', self.createNewMT_pre__Signal), ( 'MT_pre__Port', self.createNewMT_pre__Port), ( 'MT_pre__Vertex', self.createNewMT_pre__Vertex), ( 'MT_pre__InitialPoint', self.createNewMT_pre__InitialPoint), ( 'MT_pre__EntryPoint', self.createNewMT_pre__EntryPoint), ( 'MT_pre__ExitPoint', self.createNewMT_pre__ExitPoint), ( 'MT_pre__Transition', self.createNewMT_pre__Transition), ( 'MT_pre__StateMachine', self.createNewMT_pre__StateMachine), ( 'MT_pre__State', self.createNewMT_pre__State), ( 'MT_pre__Capsule', self.createNewMT_pre__Capsule), ( 'MT_pre__PackageContainer', self.createNewMT_pre__PackageContainer), ( 'MT_pre__Model_S', self.createNewMT_pre__Model_S), ( 'MT_pre__Package', self.createNewMT_pre__Package), ( 'MT_pre__CapsuleRole', self.createNewMT_pre__CapsuleRole), ( 'MT_pre__PortConnector', self.createNewMT_pre__PortConnector), ( 'MT_pre__Thread', self.createNewMT_pre__Thread), ( 'MT_pre__PhysicalThread', self.createNewMT_pre__PhysicalThread), ( 'MT_pre__LogicalThread', self.createNewMT_pre__LogicalThread), ( 'MT_pre__PortType', self.createNewMT_pre__PortType), ( 'MT_pre__BASE0', self.createNewMT_pre__BASE0), ( 'MT_pre__CONJUGATE1', self.createNewMT_pre__CONJUGATE1), ( 'MT_pre__SignalType', self.createNewMT_pre__SignalType), ( 'MT_pre__OUT1', self.createNewMT_pre__OUT1), ( 'MT_pre__IN0', self.createNewMT_pre__IN0), ( 'MT_pre__RoleType', self.createNewMT_pre__RoleType), ( 'MT_pre__FIXED0', self.createNewMT_pre__FIXED0), ( 'MT_pre__OPTIONAL1', self.createNewMT_pre__OPTIONAL1), ( 'MT_pre__PLUGIN2', self.createNewMT_pre__PLUGIN2), ( 'MT_pre__TransitionType', self.createNewMT_pre__TransitionType), ( 'MT_pre__SIBLING0', self.createNewMT_pre__SIBLING0), ( 'MT_pre__IN1', self.createNewMT_pre__IN1), ( 'MT_pre__OUT2', self.createNewMT_pre__OUT2)]
          ,'MT_pre__ConditionBranch': []
          ,'MT_pre__BASE0': []
          ,'MT_pre__NamedElement': []
          ,'MT_pre__Element': []
          ,'MT_pre__OUT2': []
          ,'MT_pre__OUT1': []
          ,'MT_pre__LocalDef': []
          ,'MT_pre__Expr': []
          ,'MT_pre__Signal': []
          ,'MT_pre__MetaModelElement_T': []
          ,'MT_pre__MetaModelElement_S': []
          ,'MT_pre__Package': []
          ,'MT_pre__apply_contains': []
          ,'MT_pre__ConditionSet': []
          ,'MT_pre__State': []
          ,'MT_pre__MatchCase': []
          ,'MT_pre__PortType': []
          ,'MT_pre__Match': []
          ,'MT_pre__paired_with': []
          ,'MT_pre__PackageContainer': []
          ,'MT_pre__IN1': []
          ,'MT_pre__IN0': []
          ,'MT_pre__LogicalThread': []
          ,'MT_pre__Operation': []
          ,'MT_pre__FuncDef': []
          ,'MT_pre__SIBLING0': []
          ,'MT_pre__InitialPoint': []
          ,'MT_pre__PortConnector': []
          ,'MT_pre__Null': []
          ,'MT_pre__Par': []
          ,'MT_pre__ParIndexed': []
          ,'MT_pre__rightExpr': []
          ,'MT_pre__Listen': []
          ,'MT_pre__MatchModel': []
          ,'MT_pre__Site': []
          ,'MT_pre__New': []
          ,'MT_pre__Concat': []
          ,'MT_pre__trace_link': []
          ,'MT_pre__SignalType': []
          ,'MT_pre__Subtract': []
          ,'MT_pre__directLink_S': [( 'MT_pre__MetaModelElement_S', self.createNewMT_pre__MetaModelElement_S), ( 'MT_pre__Element', self.createNewMT_pre__Element), ( 'MT_pre__NamedElement', self.createNewMT_pre__NamedElement), ( 'MT_pre__Trigger_S', self.createNewMT_pre__Trigger_S), ( 'MT_pre__Action', self.createNewMT_pre__Action), ( 'MT_pre__PortRef', self.createNewMT_pre__PortRef), ( 'MT_pre__PortConnectorRef', self.createNewMT_pre__PortConnectorRef), ( 'MT_pre__StateMachineElement', self.createNewMT_pre__StateMachineElement), ( 'MT_pre__Protocol', self.createNewMT_pre__Protocol), ( 'MT_pre__Signal', self.createNewMT_pre__Signal), ( 'MT_pre__Port', self.createNewMT_pre__Port), ( 'MT_pre__Vertex', self.createNewMT_pre__Vertex), ( 'MT_pre__InitialPoint', self.createNewMT_pre__InitialPoint), ( 'MT_pre__EntryPoint', self.createNewMT_pre__EntryPoint), ( 'MT_pre__ExitPoint', self.createNewMT_pre__ExitPoint), ( 'MT_pre__Transition', self.createNewMT_pre__Transition), ( 'MT_pre__StateMachine', self.createNewMT_pre__StateMachine), ( 'MT_pre__State', self.createNewMT_pre__State), ( 'MT_pre__Capsule', self.createNewMT_pre__Capsule), ( 'MT_pre__PackageContainer', self.createNewMT_pre__PackageContainer), ( 'MT_pre__Model_S', self.createNewMT_pre__Model_S), ( 'MT_pre__Package', self.createNewMT_pre__Package), ( 'MT_pre__CapsuleRole', self.createNewMT_pre__CapsuleRole), ( 'MT_pre__PortConnector', self.createNewMT_pre__PortConnector), ( 'MT_pre__Thread', self.createNewMT_pre__Thread), ( 'MT_pre__PhysicalThread', self.createNewMT_pre__PhysicalThread), ( 'MT_pre__LogicalThread', self.createNewMT_pre__LogicalThread), ( 'MT_pre__PortType', self.createNewMT_pre__PortType), ( 'MT_pre__BASE0', self.createNewMT_pre__BASE0), ( 'MT_pre__CONJUGATE1', self.createNewMT_pre__CONJUGATE1), ( 'MT_pre__SignalType', self.createNewMT_pre__SignalType), ( 'MT_pre__OUT1', self.createNewMT_pre__OUT1), ( 'MT_pre__IN0', self.createNewMT_pre__IN0), ( 'MT_pre__RoleType', self.createNewMT_pre__RoleType), ( 'MT_pre__FIXED0', self.createNewMT_pre__FIXED0), ( 'MT_pre__OPTIONAL1', self.createNewMT_pre__OPTIONAL1), ( 'MT_pre__PLUGIN2', self.createNewMT_pre__PLUGIN2), ( 'MT_pre__TransitionType', self.createNewMT_pre__TransitionType), ( 'MT_pre__SIBLING0', self.createNewMT_pre__SIBLING0), ( 'MT_pre__IN1', self.createNewMT_pre__IN1), ( 'MT_pre__OUT2', self.createNewMT_pre__OUT2)]
          ,'MT_pre__Inst': []
          ,'MT_pre__PythonRef': []
          ,'MT_pre__EntryPoint': []
          ,'MT_pre__CONJUGATE1': []
          ,'MT_pre__Protocol': []
          ,'MT_pre__directLink_T': []
          ,'MT_pre__Def': []
          ,'MT_pre__StateMachine': []
          ,'MT_pre__Seq': []
          ,'MT_pre__match_contains': []
          ,'MT_pre__Transition': []
          ,'MT_pre__Vertex': []
          ,'MT_pre__StateMachineElement': []
          ,'MT_pre__hasArgs': []
          ,'MT_pre__Port': []
          ,'MT_pre__hasAttribute_S': [( 'MT_pre__MetaModelElement_S', self.createNewMT_pre__MetaModelElement_S), ( 'MT_pre__Element', self.createNewMT_pre__Element), ( 'MT_pre__NamedElement', self.createNewMT_pre__NamedElement), ( 'MT_pre__Trigger_S', self.createNewMT_pre__Trigger_S), ( 'MT_pre__Action', self.createNewMT_pre__Action), ( 'MT_pre__PortRef', self.createNewMT_pre__PortRef), ( 'MT_pre__PortConnectorRef', self.createNewMT_pre__PortConnectorRef), ( 'MT_pre__StateMachineElement', self.createNewMT_pre__StateMachineElement), ( 'MT_pre__Protocol', self.createNewMT_pre__Protocol), ( 'MT_pre__Signal', self.createNewMT_pre__Signal), ( 'MT_pre__Port', self.createNewMT_pre__Port), ( 'MT_pre__Vertex', self.createNewMT_pre__Vertex), ( 'MT_pre__InitialPoint', self.createNewMT_pre__InitialPoint), ( 'MT_pre__EntryPoint', self.createNewMT_pre__EntryPoint), ( 'MT_pre__ExitPoint', self.createNewMT_pre__ExitPoint), ( 'MT_pre__Transition', self.createNewMT_pre__Transition), ( 'MT_pre__StateMachine', self.createNewMT_pre__StateMachine), ( 'MT_pre__State', self.createNewMT_pre__State), ( 'MT_pre__Capsule', self.createNewMT_pre__Capsule), ( 'MT_pre__PackageContainer', self.createNewMT_pre__PackageContainer), ( 'MT_pre__Model_S', self.createNewMT_pre__Model_S), ( 'MT_pre__Package', self.createNewMT_pre__Package), ( 'MT_pre__CapsuleRole', self.createNewMT_pre__CapsuleRole), ( 'MT_pre__PortConnector', self.createNewMT_pre__PortConnector), ( 'MT_pre__Thread', self.createNewMT_pre__Thread), ( 'MT_pre__PhysicalThread', self.createNewMT_pre__PhysicalThread), ( 'MT_pre__LogicalThread', self.createNewMT_pre__LogicalThread), ( 'MT_pre__PortType', self.createNewMT_pre__PortType), ( 'MT_pre__BASE0', self.createNewMT_pre__BASE0), ( 'MT_pre__CONJUGATE1', self.createNewMT_pre__CONJUGATE1), ( 'MT_pre__SignalType', self.createNewMT_pre__SignalType), ( 'MT_pre__OUT1', self.createNewMT_pre__OUT1), ( 'MT_pre__IN0', self.createNewMT_pre__IN0), ( 'MT_pre__RoleType', self.createNewMT_pre__RoleType), ( 'MT_pre__FIXED0', self.createNewMT_pre__FIXED0), ( 'MT_pre__OPTIONAL1', self.createNewMT_pre__OPTIONAL1), ( 'MT_pre__PLUGIN2', self.createNewMT_pre__PLUGIN2), ( 'MT_pre__TransitionType', self.createNewMT_pre__TransitionType), ( 'MT_pre__SIBLING0', self.createNewMT_pre__SIBLING0), ( 'MT_pre__IN1', self.createNewMT_pre__IN1), ( 'MT_pre__OUT2', self.createNewMT_pre__OUT2)]
          ,'MT_pre__hasAttribute_T': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__Condition': []
          ,'MT_pre__Attribute': []
          ,'MT_pre__Print': []
          ,'MT_pre__Constant': []
          ,'MT_pre__ExitPoint': []
          ,'MT_pre__Pattern': []
          ,'MT_pre__TransitionType': []
          ,'MT_pre__Capsule': []
          ,'MT_pre__ListenBranch': []
          ,'MT_pre__ProcDef': []
          ,'MT_pre__Delay': []
          ,'MT_pre__Add': []
          ,'MT_pre__Trigger_S': []
          ,'MT_pre__Proc': []
          ,'MT_pre__Trigger_T': []
          ,'MT_pre__PLUGIN2': []
          ,'MT_pre__Action': []
          ,'MT_pre__Model_T': []
          ,'MT_pre__Model_S': []
          ,'MT_pre__CapsuleRole': []
          ,'MT_pre__leftExpr': []
          ,'MT_pre__FIXED0': []
          ,'MT_pre__Equation': [] }
    self.ConnectivityMap['MT_pre__Transition']={
           'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__OPTIONAL1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__backward_link': []
          ,'MT_pre__Expression': []
          ,'MT_pre__PhysicalThread': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__PortRef': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__PortConnectorRef': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Name': []
          ,'MT_pre__RoleType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Module': []
          ,'MT_pre__Thread': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__indirectLink_S': []
          ,'MT_pre__ConditionBranch': []
          ,'MT_pre__BASE0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__NamedElement': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Element': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__OUT2': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__OUT1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__LocalDef': []
          ,'MT_pre__Expr': []
          ,'MT_pre__Signal': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__MetaModelElement_T': []
          ,'MT_pre__MetaModelElement_S': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Package': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__apply_contains': []
          ,'MT_pre__ConditionSet': []
          ,'MT_pre__State': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__MatchCase': []
          ,'MT_pre__PortType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Match': []
          ,'MT_pre__paired_with': []
          ,'MT_pre__PackageContainer': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__IN1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__IN0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__LogicalThread': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Operation': []
          ,'MT_pre__FuncDef': []
          ,'MT_pre__SIBLING0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__InitialPoint': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__PortConnector': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Null': []
          ,'MT_pre__Par': []
          ,'MT_pre__ParIndexed': []
          ,'MT_pre__rightExpr': []
          ,'MT_pre__Listen': []
          ,'MT_pre__MatchModel': []
          ,'MT_pre__Site': []
          ,'MT_pre__New': []
          ,'MT_pre__Concat': []
          ,'MT_pre__trace_link': []
          ,'MT_pre__SignalType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Subtract': []
          ,'MT_pre__directLink_S': []
          ,'MT_pre__Inst': []
          ,'MT_pre__PythonRef': []
          ,'MT_pre__EntryPoint': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__CONJUGATE1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Protocol': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__directLink_T': []
          ,'MT_pre__Def': []
          ,'MT_pre__StateMachine': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Seq': []
          ,'MT_pre__match_contains': []
          ,'MT_pre__Transition': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Vertex': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__StateMachineElement': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__hasArgs': []
          ,'MT_pre__Port': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__hasAttribute_S': []
          ,'MT_pre__hasAttribute_T': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__Condition': []
          ,'MT_pre__Attribute': [( 'MT_pre__hasAttribute_S', self.createNewMT_pre__hasAttribute_S)]
          ,'MT_pre__Print': []
          ,'MT_pre__Constant': []
          ,'MT_pre__ExitPoint': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Pattern': []
          ,'MT_pre__TransitionType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Capsule': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__ListenBranch': []
          ,'MT_pre__ProcDef': []
          ,'MT_pre__Delay': []
          ,'MT_pre__Add': []
          ,'MT_pre__Trigger_S': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Proc': []
          ,'MT_pre__Trigger_T': []
          ,'MT_pre__PLUGIN2': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Action': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Model_T': []
          ,'MT_pre__Model_S': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__CapsuleRole': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__leftExpr': []
          ,'MT_pre__FIXED0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Equation': [] }
    self.ConnectivityMap['MT_pre__Vertex']={
           'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__OPTIONAL1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__backward_link': []
          ,'MT_pre__Expression': []
          ,'MT_pre__PhysicalThread': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__PortRef': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__PortConnectorRef': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Name': []
          ,'MT_pre__RoleType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Module': []
          ,'MT_pre__Thread': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__indirectLink_S': []
          ,'MT_pre__ConditionBranch': []
          ,'MT_pre__BASE0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__NamedElement': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Element': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__OUT2': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__OUT1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__LocalDef': []
          ,'MT_pre__Expr': []
          ,'MT_pre__Signal': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__MetaModelElement_T': []
          ,'MT_pre__MetaModelElement_S': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Package': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__apply_contains': []
          ,'MT_pre__ConditionSet': []
          ,'MT_pre__State': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__MatchCase': []
          ,'MT_pre__PortType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Match': []
          ,'MT_pre__paired_with': []
          ,'MT_pre__PackageContainer': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__IN1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__IN0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__LogicalThread': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Operation': []
          ,'MT_pre__FuncDef': []
          ,'MT_pre__SIBLING0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__InitialPoint': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__PortConnector': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Null': []
          ,'MT_pre__Par': []
          ,'MT_pre__ParIndexed': []
          ,'MT_pre__rightExpr': []
          ,'MT_pre__Listen': []
          ,'MT_pre__MatchModel': []
          ,'MT_pre__Site': []
          ,'MT_pre__New': []
          ,'MT_pre__Concat': []
          ,'MT_pre__trace_link': []
          ,'MT_pre__SignalType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Subtract': []
          ,'MT_pre__directLink_S': []
          ,'MT_pre__Inst': []
          ,'MT_pre__PythonRef': []
          ,'MT_pre__EntryPoint': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__CONJUGATE1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Protocol': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__directLink_T': []
          ,'MT_pre__Def': []
          ,'MT_pre__StateMachine': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Seq': []
          ,'MT_pre__match_contains': []
          ,'MT_pre__Transition': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Vertex': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__StateMachineElement': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__hasArgs': []
          ,'MT_pre__Port': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__hasAttribute_S': []
          ,'MT_pre__hasAttribute_T': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__Condition': []
          ,'MT_pre__Attribute': [( 'MT_pre__hasAttribute_S', self.createNewMT_pre__hasAttribute_S)]
          ,'MT_pre__Print': []
          ,'MT_pre__Constant': []
          ,'MT_pre__ExitPoint': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Pattern': []
          ,'MT_pre__TransitionType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Capsule': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__ListenBranch': []
          ,'MT_pre__ProcDef': []
          ,'MT_pre__Delay': []
          ,'MT_pre__Add': []
          ,'MT_pre__Trigger_S': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Proc': []
          ,'MT_pre__Trigger_T': []
          ,'MT_pre__PLUGIN2': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Action': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Model_T': []
          ,'MT_pre__Model_S': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__CapsuleRole': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__leftExpr': []
          ,'MT_pre__FIXED0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Equation': [] }
    self.ConnectivityMap['MT_pre__StateMachineElement']={
           'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__OPTIONAL1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__backward_link': []
          ,'MT_pre__Expression': []
          ,'MT_pre__PhysicalThread': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__PortRef': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__PortConnectorRef': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Name': []
          ,'MT_pre__RoleType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Module': []
          ,'MT_pre__Thread': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__indirectLink_S': []
          ,'MT_pre__ConditionBranch': []
          ,'MT_pre__BASE0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__NamedElement': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Element': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__OUT2': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__OUT1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__LocalDef': []
          ,'MT_pre__Expr': []
          ,'MT_pre__Signal': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__MetaModelElement_T': []
          ,'MT_pre__MetaModelElement_S': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Package': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__apply_contains': []
          ,'MT_pre__ConditionSet': []
          ,'MT_pre__State': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__MatchCase': []
          ,'MT_pre__PortType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Match': []
          ,'MT_pre__paired_with': []
          ,'MT_pre__PackageContainer': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__IN1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__IN0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__LogicalThread': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Operation': []
          ,'MT_pre__FuncDef': []
          ,'MT_pre__SIBLING0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__InitialPoint': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__PortConnector': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Null': []
          ,'MT_pre__Par': []
          ,'MT_pre__ParIndexed': []
          ,'MT_pre__rightExpr': []
          ,'MT_pre__Listen': []
          ,'MT_pre__MatchModel': []
          ,'MT_pre__Site': []
          ,'MT_pre__New': []
          ,'MT_pre__Concat': []
          ,'MT_pre__trace_link': []
          ,'MT_pre__SignalType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Subtract': []
          ,'MT_pre__directLink_S': []
          ,'MT_pre__Inst': []
          ,'MT_pre__PythonRef': []
          ,'MT_pre__EntryPoint': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__CONJUGATE1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Protocol': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__directLink_T': []
          ,'MT_pre__Def': []
          ,'MT_pre__StateMachine': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Seq': []
          ,'MT_pre__match_contains': []
          ,'MT_pre__Transition': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Vertex': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__StateMachineElement': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__hasArgs': []
          ,'MT_pre__Port': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__hasAttribute_S': []
          ,'MT_pre__hasAttribute_T': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__Condition': []
          ,'MT_pre__Attribute': [( 'MT_pre__hasAttribute_S', self.createNewMT_pre__hasAttribute_S)]
          ,'MT_pre__Print': []
          ,'MT_pre__Constant': []
          ,'MT_pre__ExitPoint': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Pattern': []
          ,'MT_pre__TransitionType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Capsule': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__ListenBranch': []
          ,'MT_pre__ProcDef': []
          ,'MT_pre__Delay': []
          ,'MT_pre__Add': []
          ,'MT_pre__Trigger_S': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Proc': []
          ,'MT_pre__Trigger_T': []
          ,'MT_pre__PLUGIN2': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Action': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Model_T': []
          ,'MT_pre__Model_S': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__CapsuleRole': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__leftExpr': []
          ,'MT_pre__FIXED0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Equation': [] }
    self.ConnectivityMap['MT_pre__hasArgs']={
           'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__OPTIONAL1': []
          ,'MT_pre__backward_link': []
          ,'MT_pre__Expression': []
          ,'MT_pre__PhysicalThread': []
          ,'MT_pre__PortRef': []
          ,'MT_pre__PortConnectorRef': []
          ,'MT_pre__Name': []
          ,'MT_pre__RoleType': []
          ,'MT_pre__Module': []
          ,'MT_pre__Thread': []
          ,'MT_pre__indirectLink_S': []
          ,'MT_pre__ConditionBranch': []
          ,'MT_pre__BASE0': []
          ,'MT_pre__NamedElement': []
          ,'MT_pre__Element': []
          ,'MT_pre__OUT2': []
          ,'MT_pre__OUT1': []
          ,'MT_pre__LocalDef': []
          ,'MT_pre__Expr': []
          ,'MT_pre__Signal': []
          ,'MT_pre__MetaModelElement_T': []
          ,'MT_pre__MetaModelElement_S': []
          ,'MT_pre__Package': []
          ,'MT_pre__apply_contains': []
          ,'MT_pre__ConditionSet': []
          ,'MT_pre__State': []
          ,'MT_pre__MatchCase': []
          ,'MT_pre__PortType': []
          ,'MT_pre__Match': []
          ,'MT_pre__paired_with': []
          ,'MT_pre__PackageContainer': []
          ,'MT_pre__IN1': []
          ,'MT_pre__IN0': []
          ,'MT_pre__LogicalThread': []
          ,'MT_pre__Operation': []
          ,'MT_pre__FuncDef': []
          ,'MT_pre__SIBLING0': []
          ,'MT_pre__InitialPoint': []
          ,'MT_pre__PortConnector': []
          ,'MT_pre__Null': []
          ,'MT_pre__Par': []
          ,'MT_pre__ParIndexed': []
          ,'MT_pre__rightExpr': []
          ,'MT_pre__Listen': []
          ,'MT_pre__MatchModel': []
          ,'MT_pre__Site': []
          ,'MT_pre__New': []
          ,'MT_pre__Concat': []
          ,'MT_pre__trace_link': []
          ,'MT_pre__SignalType': []
          ,'MT_pre__Subtract': []
          ,'MT_pre__directLink_S': []
          ,'MT_pre__Inst': []
          ,'MT_pre__PythonRef': []
          ,'MT_pre__EntryPoint': []
          ,'MT_pre__CONJUGATE1': []
          ,'MT_pre__Protocol': []
          ,'MT_pre__directLink_T': []
          ,'MT_pre__Def': []
          ,'MT_pre__StateMachine': []
          ,'MT_pre__Seq': []
          ,'MT_pre__match_contains': []
          ,'MT_pre__Transition': []
          ,'MT_pre__Vertex': []
          ,'MT_pre__StateMachineElement': []
          ,'MT_pre__hasArgs': [( 'MT_pre__Operation', self.createNewMT_pre__Operation), ( 'MT_pre__Add', self.createNewMT_pre__Add), ( 'MT_pre__Subtract', self.createNewMT_pre__Subtract), ( 'MT_pre__Concat', self.createNewMT_pre__Concat)]
          ,'MT_pre__Port': []
          ,'MT_pre__hasAttribute_S': []
          ,'MT_pre__hasAttribute_T': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__Condition': []
          ,'MT_pre__Attribute': []
          ,'MT_pre__Print': []
          ,'MT_pre__Constant': []
          ,'MT_pre__ExitPoint': []
          ,'MT_pre__Pattern': []
          ,'MT_pre__TransitionType': []
          ,'MT_pre__Capsule': []
          ,'MT_pre__ListenBranch': []
          ,'MT_pre__ProcDef': []
          ,'MT_pre__Delay': []
          ,'MT_pre__Add': []
          ,'MT_pre__Trigger_S': []
          ,'MT_pre__Proc': []
          ,'MT_pre__Trigger_T': []
          ,'MT_pre__PLUGIN2': []
          ,'MT_pre__Action': []
          ,'MT_pre__Model_T': []
          ,'MT_pre__Model_S': []
          ,'MT_pre__CapsuleRole': []
          ,'MT_pre__leftExpr': []
          ,'MT_pre__FIXED0': []
          ,'MT_pre__Equation': [] }
    self.ConnectivityMap['MT_pre__Port']={
           'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__OPTIONAL1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__backward_link': []
          ,'MT_pre__Expression': []
          ,'MT_pre__PhysicalThread': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__PortRef': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__PortConnectorRef': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Name': []
          ,'MT_pre__RoleType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Module': []
          ,'MT_pre__Thread': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__indirectLink_S': []
          ,'MT_pre__ConditionBranch': []
          ,'MT_pre__BASE0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__NamedElement': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Element': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__OUT2': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__OUT1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__LocalDef': []
          ,'MT_pre__Expr': []
          ,'MT_pre__Signal': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__MetaModelElement_T': []
          ,'MT_pre__MetaModelElement_S': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Package': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__apply_contains': []
          ,'MT_pre__ConditionSet': []
          ,'MT_pre__State': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__MatchCase': []
          ,'MT_pre__PortType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Match': []
          ,'MT_pre__paired_with': []
          ,'MT_pre__PackageContainer': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__IN1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__IN0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__LogicalThread': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Operation': []
          ,'MT_pre__FuncDef': []
          ,'MT_pre__SIBLING0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__InitialPoint': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__PortConnector': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Null': []
          ,'MT_pre__Par': []
          ,'MT_pre__ParIndexed': []
          ,'MT_pre__rightExpr': []
          ,'MT_pre__Listen': []
          ,'MT_pre__MatchModel': []
          ,'MT_pre__Site': []
          ,'MT_pre__New': []
          ,'MT_pre__Concat': []
          ,'MT_pre__trace_link': []
          ,'MT_pre__SignalType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Subtract': []
          ,'MT_pre__directLink_S': []
          ,'MT_pre__Inst': []
          ,'MT_pre__PythonRef': []
          ,'MT_pre__EntryPoint': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__CONJUGATE1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Protocol': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__directLink_T': []
          ,'MT_pre__Def': []
          ,'MT_pre__StateMachine': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Seq': []
          ,'MT_pre__match_contains': []
          ,'MT_pre__Transition': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Vertex': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__StateMachineElement': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__hasArgs': []
          ,'MT_pre__Port': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__hasAttribute_S': []
          ,'MT_pre__hasAttribute_T': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__Condition': []
          ,'MT_pre__Attribute': [( 'MT_pre__hasAttribute_S', self.createNewMT_pre__hasAttribute_S)]
          ,'MT_pre__Print': []
          ,'MT_pre__Constant': []
          ,'MT_pre__ExitPoint': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Pattern': []
          ,'MT_pre__TransitionType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Capsule': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__ListenBranch': []
          ,'MT_pre__ProcDef': []
          ,'MT_pre__Delay': []
          ,'MT_pre__Add': []
          ,'MT_pre__Trigger_S': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Proc': []
          ,'MT_pre__Trigger_T': []
          ,'MT_pre__PLUGIN2': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Action': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Model_T': []
          ,'MT_pre__Model_S': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__CapsuleRole': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__leftExpr': []
          ,'MT_pre__FIXED0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Equation': [] }
    self.ConnectivityMap['MT_pre__Def']={
           'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__OPTIONAL1': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__backward_link': []
          ,'MT_pre__Expression': []
          ,'MT_pre__PhysicalThread': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__PortRef': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__PortConnectorRef': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Name': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__RoleType': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Module': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Thread': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__indirectLink_S': []
          ,'MT_pre__ConditionBranch': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__BASE0': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__NamedElement': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Element': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__OUT2': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__OUT1': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__LocalDef': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Expr': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Signal': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__MetaModelElement_T': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__MetaModelElement_S': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Package': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__apply_contains': []
          ,'MT_pre__ConditionSet': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__State': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__MatchCase': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__PortType': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Match': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__paired_with': []
          ,'MT_pre__PackageContainer': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__IN1': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__IN0': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__LogicalThread': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Operation': []
          ,'MT_pre__FuncDef': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__SIBLING0': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__InitialPoint': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__PortConnector': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Null': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Par': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__ParIndexed': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__rightExpr': []
          ,'MT_pre__Listen': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__MatchModel': []
          ,'MT_pre__Site': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__New': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Concat': []
          ,'MT_pre__trace_link': []
          ,'MT_pre__SignalType': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Subtract': []
          ,'MT_pre__directLink_S': []
          ,'MT_pre__Inst': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__PythonRef': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__EntryPoint': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__CONJUGATE1': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Protocol': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__directLink_T': []
          ,'MT_pre__Def': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__StateMachine': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Seq': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__match_contains': []
          ,'MT_pre__Transition': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Vertex': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__StateMachineElement': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__hasArgs': []
          ,'MT_pre__Port': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__hasAttribute_S': []
          ,'MT_pre__hasAttribute_T': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__Condition': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Attribute': [( 'MT_pre__hasAttribute_T', self.createNewMT_pre__hasAttribute_T)]
          ,'MT_pre__Print': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Constant': []
          ,'MT_pre__ExitPoint': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Pattern': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__TransitionType': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Capsule': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__ListenBranch': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__ProcDef': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Delay': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Add': []
          ,'MT_pre__Trigger_S': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Proc': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Trigger_T': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__PLUGIN2': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Action': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Model_T': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Model_S': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__CapsuleRole': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__leftExpr': []
          ,'MT_pre__FIXED0': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Equation': [] }
    self.ConnectivityMap['MT_pre__hasAttribute_T']={
           'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__OPTIONAL1': []
          ,'MT_pre__backward_link': []
          ,'MT_pre__Expression': []
          ,'MT_pre__PhysicalThread': []
          ,'MT_pre__PortRef': []
          ,'MT_pre__PortConnectorRef': []
          ,'MT_pre__Name': []
          ,'MT_pre__RoleType': []
          ,'MT_pre__Module': []
          ,'MT_pre__Thread': []
          ,'MT_pre__indirectLink_S': []
          ,'MT_pre__ConditionBranch': []
          ,'MT_pre__BASE0': []
          ,'MT_pre__NamedElement': []
          ,'MT_pre__Element': []
          ,'MT_pre__OUT2': []
          ,'MT_pre__OUT1': []
          ,'MT_pre__LocalDef': []
          ,'MT_pre__Expr': []
          ,'MT_pre__Signal': []
          ,'MT_pre__MetaModelElement_T': []
          ,'MT_pre__MetaModelElement_S': []
          ,'MT_pre__Package': []
          ,'MT_pre__apply_contains': []
          ,'MT_pre__ConditionSet': []
          ,'MT_pre__State': []
          ,'MT_pre__MatchCase': []
          ,'MT_pre__PortType': []
          ,'MT_pre__Match': []
          ,'MT_pre__paired_with': []
          ,'MT_pre__PackageContainer': []
          ,'MT_pre__IN1': []
          ,'MT_pre__IN0': []
          ,'MT_pre__LogicalThread': []
          ,'MT_pre__Operation': []
          ,'MT_pre__FuncDef': []
          ,'MT_pre__SIBLING0': []
          ,'MT_pre__InitialPoint': []
          ,'MT_pre__PortConnector': []
          ,'MT_pre__Null': []
          ,'MT_pre__Par': []
          ,'MT_pre__ParIndexed': []
          ,'MT_pre__rightExpr': []
          ,'MT_pre__Listen': []
          ,'MT_pre__MatchModel': []
          ,'MT_pre__Site': []
          ,'MT_pre__New': []
          ,'MT_pre__Concat': []
          ,'MT_pre__trace_link': []
          ,'MT_pre__SignalType': []
          ,'MT_pre__Subtract': []
          ,'MT_pre__directLink_S': []
          ,'MT_pre__Inst': []
          ,'MT_pre__PythonRef': []
          ,'MT_pre__EntryPoint': []
          ,'MT_pre__CONJUGATE1': []
          ,'MT_pre__Protocol': []
          ,'MT_pre__directLink_T': []
          ,'MT_pre__Def': []
          ,'MT_pre__StateMachine': []
          ,'MT_pre__Seq': []
          ,'MT_pre__match_contains': []
          ,'MT_pre__Transition': []
          ,'MT_pre__Vertex': []
          ,'MT_pre__StateMachineElement': []
          ,'MT_pre__hasArgs': []
          ,'MT_pre__Port': []
          ,'MT_pre__hasAttribute_S': []
          ,'MT_pre__hasAttribute_T': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__Condition': []
          ,'MT_pre__Attribute': []
          ,'MT_pre__Print': []
          ,'MT_pre__Constant': []
          ,'MT_pre__ExitPoint': []
          ,'MT_pre__Pattern': []
          ,'MT_pre__TransitionType': []
          ,'MT_pre__Capsule': []
          ,'MT_pre__ListenBranch': []
          ,'MT_pre__ProcDef': []
          ,'MT_pre__Delay': []
          ,'MT_pre__Add': []
          ,'MT_pre__Trigger_S': []
          ,'MT_pre__Proc': []
          ,'MT_pre__Trigger_T': []
          ,'MT_pre__PLUGIN2': []
          ,'MT_pre__Action': []
          ,'MT_pre__Model_T': []
          ,'MT_pre__Model_S': []
          ,'MT_pre__CapsuleRole': []
          ,'MT_pre__leftExpr': []
          ,'MT_pre__FIXED0': []
          ,'MT_pre__Equation': [] }
    self.ConnectivityMap['MT_pre__GenericEdge_UMLRT2Kiltera_MM']={
           'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__OPTIONAL1': []
          ,'MT_pre__backward_link': [( 'MT_pre__MetaModelElement_T', self.createNewMT_pre__MetaModelElement_T), ( 'MT_pre__Def', self.createNewMT_pre__Def), ( 'MT_pre__Expr', self.createNewMT_pre__Expr), ( 'MT_pre__Pattern', self.createNewMT_pre__Pattern), ( 'MT_pre__Proc', self.createNewMT_pre__Proc), ( 'MT_pre__ProcDef', self.createNewMT_pre__ProcDef), ( 'MT_pre__FuncDef', self.createNewMT_pre__FuncDef), ( 'MT_pre__Name', self.createNewMT_pre__Name), ( 'MT_pre__PythonRef', self.createNewMT_pre__PythonRef), ( 'MT_pre__Module', self.createNewMT_pre__Module), ( 'MT_pre__Null', self.createNewMT_pre__Null), ( 'MT_pre__Trigger_T', self.createNewMT_pre__Trigger_T), ( 'MT_pre__Listen', self.createNewMT_pre__Listen), ( 'MT_pre__ConditionBranch', self.createNewMT_pre__ConditionBranch), ( 'MT_pre__ListenBranch', self.createNewMT_pre__ListenBranch), ( 'MT_pre__Site', self.createNewMT_pre__Site), ( 'MT_pre__Model_T', self.createNewMT_pre__Model_T), ( 'MT_pre__MatchCase', self.createNewMT_pre__MatchCase), ( 'MT_pre__Condition', self.createNewMT_pre__Condition), ( 'MT_pre__New', self.createNewMT_pre__New), ( 'MT_pre__Delay', self.createNewMT_pre__Delay), ( 'MT_pre__Par', self.createNewMT_pre__Par), ( 'MT_pre__ParIndexed', self.createNewMT_pre__ParIndexed), ( 'MT_pre__Inst', self.createNewMT_pre__Inst), ( 'MT_pre__LocalDef', self.createNewMT_pre__LocalDef), ( 'MT_pre__Seq', self.createNewMT_pre__Seq), ( 'MT_pre__ConditionSet', self.createNewMT_pre__ConditionSet), ( 'MT_pre__Match', self.createNewMT_pre__Match), ( 'MT_pre__Print', self.createNewMT_pre__Print)]
          ,'MT_pre__Expression': []
          ,'MT_pre__PhysicalThread': []
          ,'MT_pre__PortRef': []
          ,'MT_pre__PortConnectorRef': []
          ,'MT_pre__Name': []
          ,'MT_pre__RoleType': []
          ,'MT_pre__Module': []
          ,'MT_pre__Thread': []
          ,'MT_pre__indirectLink_S': [( 'MT_pre__MetaModelElement_S', self.createNewMT_pre__MetaModelElement_S), ( 'MT_pre__Element', self.createNewMT_pre__Element), ( 'MT_pre__NamedElement', self.createNewMT_pre__NamedElement), ( 'MT_pre__Trigger_S', self.createNewMT_pre__Trigger_S), ( 'MT_pre__Action', self.createNewMT_pre__Action), ( 'MT_pre__PortRef', self.createNewMT_pre__PortRef), ( 'MT_pre__PortConnectorRef', self.createNewMT_pre__PortConnectorRef), ( 'MT_pre__StateMachineElement', self.createNewMT_pre__StateMachineElement), ( 'MT_pre__Protocol', self.createNewMT_pre__Protocol), ( 'MT_pre__Signal', self.createNewMT_pre__Signal), ( 'MT_pre__Port', self.createNewMT_pre__Port), ( 'MT_pre__Vertex', self.createNewMT_pre__Vertex), ( 'MT_pre__InitialPoint', self.createNewMT_pre__InitialPoint), ( 'MT_pre__EntryPoint', self.createNewMT_pre__EntryPoint), ( 'MT_pre__ExitPoint', self.createNewMT_pre__ExitPoint), ( 'MT_pre__Transition', self.createNewMT_pre__Transition), ( 'MT_pre__StateMachine', self.createNewMT_pre__StateMachine), ( 'MT_pre__State', self.createNewMT_pre__State), ( 'MT_pre__Capsule', self.createNewMT_pre__Capsule), ( 'MT_pre__PackageContainer', self.createNewMT_pre__PackageContainer), ( 'MT_pre__Model_S', self.createNewMT_pre__Model_S), ( 'MT_pre__Package', self.createNewMT_pre__Package), ( 'MT_pre__CapsuleRole', self.createNewMT_pre__CapsuleRole), ( 'MT_pre__PortConnector', self.createNewMT_pre__PortConnector), ( 'MT_pre__Thread', self.createNewMT_pre__Thread), ( 'MT_pre__PhysicalThread', self.createNewMT_pre__PhysicalThread), ( 'MT_pre__LogicalThread', self.createNewMT_pre__LogicalThread), ( 'MT_pre__PortType', self.createNewMT_pre__PortType), ( 'MT_pre__BASE0', self.createNewMT_pre__BASE0), ( 'MT_pre__CONJUGATE1', self.createNewMT_pre__CONJUGATE1), ( 'MT_pre__SignalType', self.createNewMT_pre__SignalType), ( 'MT_pre__OUT1', self.createNewMT_pre__OUT1), ( 'MT_pre__IN0', self.createNewMT_pre__IN0), ( 'MT_pre__RoleType', self.createNewMT_pre__RoleType), ( 'MT_pre__FIXED0', self.createNewMT_pre__FIXED0), ( 'MT_pre__OPTIONAL1', self.createNewMT_pre__OPTIONAL1), ( 'MT_pre__PLUGIN2', self.createNewMT_pre__PLUGIN2), ( 'MT_pre__TransitionType', self.createNewMT_pre__TransitionType), ( 'MT_pre__SIBLING0', self.createNewMT_pre__SIBLING0), ( 'MT_pre__IN1', self.createNewMT_pre__IN1), ( 'MT_pre__OUT2', self.createNewMT_pre__OUT2)]
          ,'MT_pre__ConditionBranch': []
          ,'MT_pre__BASE0': []
          ,'MT_pre__NamedElement': []
          ,'MT_pre__Element': []
          ,'MT_pre__OUT2': []
          ,'MT_pre__OUT1': []
          ,'MT_pre__LocalDef': []
          ,'MT_pre__Expr': []
          ,'MT_pre__Signal': []
          ,'MT_pre__MetaModelElement_T': []
          ,'MT_pre__MetaModelElement_S': []
          ,'MT_pre__Package': []
          ,'MT_pre__apply_contains': [( 'MT_pre__ApplyModel', self.createNewMT_pre__ApplyModel)]
          ,'MT_pre__ConditionSet': []
          ,'MT_pre__State': []
          ,'MT_pre__MatchCase': []
          ,'MT_pre__PortType': []
          ,'MT_pre__Match': []
          ,'MT_pre__paired_with': [( 'MT_pre__MatchModel', self.createNewMT_pre__MatchModel)]
          ,'MT_pre__PackageContainer': []
          ,'MT_pre__IN1': []
          ,'MT_pre__IN0': []
          ,'MT_pre__LogicalThread': []
          ,'MT_pre__Operation': []
          ,'MT_pre__FuncDef': []
          ,'MT_pre__SIBLING0': []
          ,'MT_pre__InitialPoint': []
          ,'MT_pre__PortConnector': []
          ,'MT_pre__Null': []
          ,'MT_pre__Par': []
          ,'MT_pre__ParIndexed': []
          ,'MT_pre__rightExpr': [( 'MT_pre__Equation', self.createNewMT_pre__Equation)]
          ,'MT_pre__Listen': []
          ,'MT_pre__MatchModel': []
          ,'MT_pre__Site': []
          ,'MT_pre__New': []
          ,'MT_pre__Concat': []
          ,'MT_pre__trace_link': [( 'MT_pre__MetaModelElement_T', self.createNewMT_pre__MetaModelElement_T), ( 'MT_pre__Def', self.createNewMT_pre__Def), ( 'MT_pre__Expr', self.createNewMT_pre__Expr), ( 'MT_pre__Pattern', self.createNewMT_pre__Pattern), ( 'MT_pre__Proc', self.createNewMT_pre__Proc), ( 'MT_pre__ProcDef', self.createNewMT_pre__ProcDef), ( 'MT_pre__FuncDef', self.createNewMT_pre__FuncDef), ( 'MT_pre__Name', self.createNewMT_pre__Name), ( 'MT_pre__PythonRef', self.createNewMT_pre__PythonRef), ( 'MT_pre__Module', self.createNewMT_pre__Module), ( 'MT_pre__Null', self.createNewMT_pre__Null), ( 'MT_pre__Trigger_T', self.createNewMT_pre__Trigger_T), ( 'MT_pre__Listen', self.createNewMT_pre__Listen), ( 'MT_pre__ConditionBranch', self.createNewMT_pre__ConditionBranch), ( 'MT_pre__ListenBranch', self.createNewMT_pre__ListenBranch), ( 'MT_pre__Site', self.createNewMT_pre__Site), ( 'MT_pre__Model_T', self.createNewMT_pre__Model_T), ( 'MT_pre__MatchCase', self.createNewMT_pre__MatchCase), ( 'MT_pre__Condition', self.createNewMT_pre__Condition), ( 'MT_pre__New', self.createNewMT_pre__New), ( 'MT_pre__Delay', self.createNewMT_pre__Delay), ( 'MT_pre__Par', self.createNewMT_pre__Par), ( 'MT_pre__ParIndexed', self.createNewMT_pre__ParIndexed), ( 'MT_pre__Inst', self.createNewMT_pre__Inst), ( 'MT_pre__LocalDef', self.createNewMT_pre__LocalDef), ( 'MT_pre__Seq', self.createNewMT_pre__Seq), ( 'MT_pre__ConditionSet', self.createNewMT_pre__ConditionSet), ( 'MT_pre__Match', self.createNewMT_pre__Match), ( 'MT_pre__Print', self.createNewMT_pre__Print)]
          ,'MT_pre__SignalType': []
          ,'MT_pre__Subtract': []
          ,'MT_pre__directLink_S': [( 'MT_pre__MetaModelElement_S', self.createNewMT_pre__MetaModelElement_S), ( 'MT_pre__Element', self.createNewMT_pre__Element), ( 'MT_pre__NamedElement', self.createNewMT_pre__NamedElement), ( 'MT_pre__Trigger_S', self.createNewMT_pre__Trigger_S), ( 'MT_pre__Action', self.createNewMT_pre__Action), ( 'MT_pre__PortRef', self.createNewMT_pre__PortRef), ( 'MT_pre__PortConnectorRef', self.createNewMT_pre__PortConnectorRef), ( 'MT_pre__StateMachineElement', self.createNewMT_pre__StateMachineElement), ( 'MT_pre__Protocol', self.createNewMT_pre__Protocol), ( 'MT_pre__Signal', self.createNewMT_pre__Signal), ( 'MT_pre__Port', self.createNewMT_pre__Port), ( 'MT_pre__Vertex', self.createNewMT_pre__Vertex), ( 'MT_pre__InitialPoint', self.createNewMT_pre__InitialPoint), ( 'MT_pre__EntryPoint', self.createNewMT_pre__EntryPoint), ( 'MT_pre__ExitPoint', self.createNewMT_pre__ExitPoint), ( 'MT_pre__Transition', self.createNewMT_pre__Transition), ( 'MT_pre__StateMachine', self.createNewMT_pre__StateMachine), ( 'MT_pre__State', self.createNewMT_pre__State), ( 'MT_pre__Capsule', self.createNewMT_pre__Capsule), ( 'MT_pre__PackageContainer', self.createNewMT_pre__PackageContainer), ( 'MT_pre__Model_S', self.createNewMT_pre__Model_S), ( 'MT_pre__Package', self.createNewMT_pre__Package), ( 'MT_pre__CapsuleRole', self.createNewMT_pre__CapsuleRole), ( 'MT_pre__PortConnector', self.createNewMT_pre__PortConnector), ( 'MT_pre__Thread', self.createNewMT_pre__Thread), ( 'MT_pre__PhysicalThread', self.createNewMT_pre__PhysicalThread), ( 'MT_pre__LogicalThread', self.createNewMT_pre__LogicalThread), ( 'MT_pre__PortType', self.createNewMT_pre__PortType), ( 'MT_pre__BASE0', self.createNewMT_pre__BASE0), ( 'MT_pre__CONJUGATE1', self.createNewMT_pre__CONJUGATE1), ( 'MT_pre__SignalType', self.createNewMT_pre__SignalType), ( 'MT_pre__OUT1', self.createNewMT_pre__OUT1), ( 'MT_pre__IN0', self.createNewMT_pre__IN0), ( 'MT_pre__RoleType', self.createNewMT_pre__RoleType), ( 'MT_pre__FIXED0', self.createNewMT_pre__FIXED0), ( 'MT_pre__OPTIONAL1', self.createNewMT_pre__OPTIONAL1), ( 'MT_pre__PLUGIN2', self.createNewMT_pre__PLUGIN2), ( 'MT_pre__TransitionType', self.createNewMT_pre__TransitionType), ( 'MT_pre__SIBLING0', self.createNewMT_pre__SIBLING0), ( 'MT_pre__IN1', self.createNewMT_pre__IN1), ( 'MT_pre__OUT2', self.createNewMT_pre__OUT2)]
          ,'MT_pre__Inst': []
          ,'MT_pre__PythonRef': []
          ,'MT_pre__EntryPoint': []
          ,'MT_pre__CONJUGATE1': []
          ,'MT_pre__Protocol': []
          ,'MT_pre__directLink_T': [( 'MT_pre__MetaModelElement_T', self.createNewMT_pre__MetaModelElement_T), ( 'MT_pre__Def', self.createNewMT_pre__Def), ( 'MT_pre__Expr', self.createNewMT_pre__Expr), ( 'MT_pre__Pattern', self.createNewMT_pre__Pattern), ( 'MT_pre__Proc', self.createNewMT_pre__Proc), ( 'MT_pre__ProcDef', self.createNewMT_pre__ProcDef), ( 'MT_pre__FuncDef', self.createNewMT_pre__FuncDef), ( 'MT_pre__Name', self.createNewMT_pre__Name), ( 'MT_pre__PythonRef', self.createNewMT_pre__PythonRef), ( 'MT_pre__Module', self.createNewMT_pre__Module), ( 'MT_pre__Null', self.createNewMT_pre__Null), ( 'MT_pre__Trigger_T', self.createNewMT_pre__Trigger_T), ( 'MT_pre__Listen', self.createNewMT_pre__Listen), ( 'MT_pre__ConditionBranch', self.createNewMT_pre__ConditionBranch), ( 'MT_pre__ListenBranch', self.createNewMT_pre__ListenBranch), ( 'MT_pre__Site', self.createNewMT_pre__Site), ( 'MT_pre__Model_T', self.createNewMT_pre__Model_T), ( 'MT_pre__MatchCase', self.createNewMT_pre__MatchCase), ( 'MT_pre__Condition', self.createNewMT_pre__Condition), ( 'MT_pre__New', self.createNewMT_pre__New), ( 'MT_pre__Delay', self.createNewMT_pre__Delay), ( 'MT_pre__Par', self.createNewMT_pre__Par), ( 'MT_pre__ParIndexed', self.createNewMT_pre__ParIndexed), ( 'MT_pre__Inst', self.createNewMT_pre__Inst), ( 'MT_pre__LocalDef', self.createNewMT_pre__LocalDef), ( 'MT_pre__Seq', self.createNewMT_pre__Seq), ( 'MT_pre__ConditionSet', self.createNewMT_pre__ConditionSet), ( 'MT_pre__Match', self.createNewMT_pre__Match), ( 'MT_pre__Print', self.createNewMT_pre__Print)]
          ,'MT_pre__Def': []
          ,'MT_pre__StateMachine': []
          ,'MT_pre__Seq': []
          ,'MT_pre__match_contains': [( 'MT_pre__MatchModel', self.createNewMT_pre__MatchModel)]
          ,'MT_pre__Transition': []
          ,'MT_pre__Vertex': []
          ,'MT_pre__StateMachineElement': []
          ,'MT_pre__hasArgs': [( 'MT_pre__Operation', self.createNewMT_pre__Operation), ( 'MT_pre__Add', self.createNewMT_pre__Add), ( 'MT_pre__Subtract', self.createNewMT_pre__Subtract), ( 'MT_pre__Concat', self.createNewMT_pre__Concat)]
          ,'MT_pre__Port': []
          ,'MT_pre__hasAttribute_S': [( 'MT_pre__MetaModelElement_S', self.createNewMT_pre__MetaModelElement_S), ( 'MT_pre__Element', self.createNewMT_pre__Element), ( 'MT_pre__NamedElement', self.createNewMT_pre__NamedElement), ( 'MT_pre__Trigger_S', self.createNewMT_pre__Trigger_S), ( 'MT_pre__Action', self.createNewMT_pre__Action), ( 'MT_pre__PortRef', self.createNewMT_pre__PortRef), ( 'MT_pre__PortConnectorRef', self.createNewMT_pre__PortConnectorRef), ( 'MT_pre__StateMachineElement', self.createNewMT_pre__StateMachineElement), ( 'MT_pre__Protocol', self.createNewMT_pre__Protocol), ( 'MT_pre__Signal', self.createNewMT_pre__Signal), ( 'MT_pre__Port', self.createNewMT_pre__Port), ( 'MT_pre__Vertex', self.createNewMT_pre__Vertex), ( 'MT_pre__InitialPoint', self.createNewMT_pre__InitialPoint), ( 'MT_pre__EntryPoint', self.createNewMT_pre__EntryPoint), ( 'MT_pre__ExitPoint', self.createNewMT_pre__ExitPoint), ( 'MT_pre__Transition', self.createNewMT_pre__Transition), ( 'MT_pre__StateMachine', self.createNewMT_pre__StateMachine), ( 'MT_pre__State', self.createNewMT_pre__State), ( 'MT_pre__Capsule', self.createNewMT_pre__Capsule), ( 'MT_pre__PackageContainer', self.createNewMT_pre__PackageContainer), ( 'MT_pre__Model_S', self.createNewMT_pre__Model_S), ( 'MT_pre__Package', self.createNewMT_pre__Package), ( 'MT_pre__CapsuleRole', self.createNewMT_pre__CapsuleRole), ( 'MT_pre__PortConnector', self.createNewMT_pre__PortConnector), ( 'MT_pre__Thread', self.createNewMT_pre__Thread), ( 'MT_pre__PhysicalThread', self.createNewMT_pre__PhysicalThread), ( 'MT_pre__LogicalThread', self.createNewMT_pre__LogicalThread), ( 'MT_pre__PortType', self.createNewMT_pre__PortType), ( 'MT_pre__BASE0', self.createNewMT_pre__BASE0), ( 'MT_pre__CONJUGATE1', self.createNewMT_pre__CONJUGATE1), ( 'MT_pre__SignalType', self.createNewMT_pre__SignalType), ( 'MT_pre__OUT1', self.createNewMT_pre__OUT1), ( 'MT_pre__IN0', self.createNewMT_pre__IN0), ( 'MT_pre__RoleType', self.createNewMT_pre__RoleType), ( 'MT_pre__FIXED0', self.createNewMT_pre__FIXED0), ( 'MT_pre__OPTIONAL1', self.createNewMT_pre__OPTIONAL1), ( 'MT_pre__PLUGIN2', self.createNewMT_pre__PLUGIN2), ( 'MT_pre__TransitionType', self.createNewMT_pre__TransitionType), ( 'MT_pre__SIBLING0', self.createNewMT_pre__SIBLING0), ( 'MT_pre__IN1', self.createNewMT_pre__IN1), ( 'MT_pre__OUT2', self.createNewMT_pre__OUT2)]
          ,'MT_pre__hasAttribute_T': [( 'MT_pre__MetaModelElement_T', self.createNewMT_pre__MetaModelElement_T), ( 'MT_pre__Def', self.createNewMT_pre__Def), ( 'MT_pre__Expr', self.createNewMT_pre__Expr), ( 'MT_pre__Pattern', self.createNewMT_pre__Pattern), ( 'MT_pre__Proc', self.createNewMT_pre__Proc), ( 'MT_pre__ProcDef', self.createNewMT_pre__ProcDef), ( 'MT_pre__FuncDef', self.createNewMT_pre__FuncDef), ( 'MT_pre__Name', self.createNewMT_pre__Name), ( 'MT_pre__PythonRef', self.createNewMT_pre__PythonRef), ( 'MT_pre__Module', self.createNewMT_pre__Module), ( 'MT_pre__Null', self.createNewMT_pre__Null), ( 'MT_pre__Trigger_T', self.createNewMT_pre__Trigger_T), ( 'MT_pre__Listen', self.createNewMT_pre__Listen), ( 'MT_pre__ConditionBranch', self.createNewMT_pre__ConditionBranch), ( 'MT_pre__ListenBranch', self.createNewMT_pre__ListenBranch), ( 'MT_pre__Site', self.createNewMT_pre__Site), ( 'MT_pre__Model_T', self.createNewMT_pre__Model_T), ( 'MT_pre__MatchCase', self.createNewMT_pre__MatchCase), ( 'MT_pre__Condition', self.createNewMT_pre__Condition), ( 'MT_pre__New', self.createNewMT_pre__New), ( 'MT_pre__Delay', self.createNewMT_pre__Delay), ( 'MT_pre__Par', self.createNewMT_pre__Par), ( 'MT_pre__ParIndexed', self.createNewMT_pre__ParIndexed), ( 'MT_pre__Inst', self.createNewMT_pre__Inst), ( 'MT_pre__LocalDef', self.createNewMT_pre__LocalDef), ( 'MT_pre__Seq', self.createNewMT_pre__Seq), ( 'MT_pre__ConditionSet', self.createNewMT_pre__ConditionSet), ( 'MT_pre__Match', self.createNewMT_pre__Match), ( 'MT_pre__Print', self.createNewMT_pre__Print)]
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': [( 'MT_pre__GenericNode_UMLRT2Kiltera_MM', self.createNewMT_pre__GenericNode_UMLRT2Kiltera_MM)]
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__Condition': []
          ,'MT_pre__Attribute': []
          ,'MT_pre__Print': []
          ,'MT_pre__Constant': []
          ,'MT_pre__ExitPoint': []
          ,'MT_pre__Pattern': []
          ,'MT_pre__TransitionType': []
          ,'MT_pre__Capsule': []
          ,'MT_pre__ListenBranch': []
          ,'MT_pre__ProcDef': []
          ,'MT_pre__Delay': []
          ,'MT_pre__Add': []
          ,'MT_pre__Trigger_S': []
          ,'MT_pre__Proc': []
          ,'MT_pre__Trigger_T': []
          ,'MT_pre__PLUGIN2': []
          ,'MT_pre__Action': []
          ,'MT_pre__Model_T': []
          ,'MT_pre__Model_S': []
          ,'MT_pre__CapsuleRole': []
          ,'MT_pre__leftExpr': [( 'MT_pre__Equation', self.createNewMT_pre__Equation)]
          ,'MT_pre__FIXED0': []
          ,'MT_pre__Equation': [] }
    self.ConnectivityMap['MT_pre__ApplyModel']={
           'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__OPTIONAL1': []
          ,'MT_pre__backward_link': []
          ,'MT_pre__Expression': []
          ,'MT_pre__PhysicalThread': []
          ,'MT_pre__PortRef': []
          ,'MT_pre__PortConnectorRef': []
          ,'MT_pre__Name': [( 'MT_pre__apply_contains', self.createNewMT_pre__apply_contains)]
          ,'MT_pre__RoleType': []
          ,'MT_pre__Module': [( 'MT_pre__apply_contains', self.createNewMT_pre__apply_contains)]
          ,'MT_pre__Thread': []
          ,'MT_pre__indirectLink_S': []
          ,'MT_pre__ConditionBranch': [( 'MT_pre__apply_contains', self.createNewMT_pre__apply_contains)]
          ,'MT_pre__BASE0': []
          ,'MT_pre__NamedElement': []
          ,'MT_pre__Element': []
          ,'MT_pre__OUT2': []
          ,'MT_pre__OUT1': []
          ,'MT_pre__LocalDef': [( 'MT_pre__apply_contains', self.createNewMT_pre__apply_contains)]
          ,'MT_pre__Expr': [( 'MT_pre__apply_contains', self.createNewMT_pre__apply_contains)]
          ,'MT_pre__Signal': []
          ,'MT_pre__MetaModelElement_T': [( 'MT_pre__apply_contains', self.createNewMT_pre__apply_contains)]
          ,'MT_pre__MetaModelElement_S': []
          ,'MT_pre__Package': []
          ,'MT_pre__apply_contains': []
          ,'MT_pre__ConditionSet': [( 'MT_pre__apply_contains', self.createNewMT_pre__apply_contains)]
          ,'MT_pre__State': []
          ,'MT_pre__MatchCase': [( 'MT_pre__apply_contains', self.createNewMT_pre__apply_contains)]
          ,'MT_pre__PortType': []
          ,'MT_pre__Match': [( 'MT_pre__apply_contains', self.createNewMT_pre__apply_contains)]
          ,'MT_pre__paired_with': []
          ,'MT_pre__PackageContainer': []
          ,'MT_pre__IN1': []
          ,'MT_pre__IN0': []
          ,'MT_pre__LogicalThread': []
          ,'MT_pre__Operation': []
          ,'MT_pre__FuncDef': [( 'MT_pre__apply_contains', self.createNewMT_pre__apply_contains)]
          ,'MT_pre__SIBLING0': []
          ,'MT_pre__InitialPoint': []
          ,'MT_pre__PortConnector': []
          ,'MT_pre__Null': [( 'MT_pre__apply_contains', self.createNewMT_pre__apply_contains)]
          ,'MT_pre__Par': [( 'MT_pre__apply_contains', self.createNewMT_pre__apply_contains)]
          ,'MT_pre__ParIndexed': [( 'MT_pre__apply_contains', self.createNewMT_pre__apply_contains)]
          ,'MT_pre__rightExpr': []
          ,'MT_pre__Listen': [( 'MT_pre__apply_contains', self.createNewMT_pre__apply_contains)]
          ,'MT_pre__MatchModel': []
          ,'MT_pre__Site': [( 'MT_pre__apply_contains', self.createNewMT_pre__apply_contains)]
          ,'MT_pre__New': [( 'MT_pre__apply_contains', self.createNewMT_pre__apply_contains)]
          ,'MT_pre__Concat': []
          ,'MT_pre__trace_link': []
          ,'MT_pre__SignalType': []
          ,'MT_pre__Subtract': []
          ,'MT_pre__directLink_S': []
          ,'MT_pre__Inst': [( 'MT_pre__apply_contains', self.createNewMT_pre__apply_contains)]
          ,'MT_pre__PythonRef': [( 'MT_pre__apply_contains', self.createNewMT_pre__apply_contains)]
          ,'MT_pre__EntryPoint': []
          ,'MT_pre__CONJUGATE1': []
          ,'MT_pre__Protocol': []
          ,'MT_pre__directLink_T': []
          ,'MT_pre__Def': [( 'MT_pre__apply_contains', self.createNewMT_pre__apply_contains)]
          ,'MT_pre__StateMachine': []
          ,'MT_pre__Seq': [( 'MT_pre__apply_contains', self.createNewMT_pre__apply_contains)]
          ,'MT_pre__match_contains': []
          ,'MT_pre__Transition': []
          ,'MT_pre__Vertex': []
          ,'MT_pre__StateMachineElement': []
          ,'MT_pre__hasArgs': []
          ,'MT_pre__Port': []
          ,'MT_pre__hasAttribute_S': []
          ,'MT_pre__hasAttribute_T': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__Condition': [( 'MT_pre__apply_contains', self.createNewMT_pre__apply_contains)]
          ,'MT_pre__Attribute': []
          ,'MT_pre__Print': [( 'MT_pre__apply_contains', self.createNewMT_pre__apply_contains)]
          ,'MT_pre__Constant': []
          ,'MT_pre__ExitPoint': []
          ,'MT_pre__Pattern': [( 'MT_pre__apply_contains', self.createNewMT_pre__apply_contains)]
          ,'MT_pre__TransitionType': []
          ,'MT_pre__Capsule': []
          ,'MT_pre__ListenBranch': [( 'MT_pre__apply_contains', self.createNewMT_pre__apply_contains)]
          ,'MT_pre__ProcDef': [( 'MT_pre__apply_contains', self.createNewMT_pre__apply_contains)]
          ,'MT_pre__Delay': [( 'MT_pre__apply_contains', self.createNewMT_pre__apply_contains)]
          ,'MT_pre__Add': []
          ,'MT_pre__Trigger_S': []
          ,'MT_pre__Proc': [( 'MT_pre__apply_contains', self.createNewMT_pre__apply_contains)]
          ,'MT_pre__Trigger_T': [( 'MT_pre__apply_contains', self.createNewMT_pre__apply_contains)]
          ,'MT_pre__PLUGIN2': []
          ,'MT_pre__Action': []
          ,'MT_pre__Model_T': [( 'MT_pre__apply_contains', self.createNewMT_pre__apply_contains)]
          ,'MT_pre__Model_S': []
          ,'MT_pre__CapsuleRole': []
          ,'MT_pre__leftExpr': []
          ,'MT_pre__FIXED0': []
          ,'MT_pre__Equation': [] }
    self.ConnectivityMap['MT_pre__Condition']={
           'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__OPTIONAL1': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__backward_link': []
          ,'MT_pre__Expression': []
          ,'MT_pre__PhysicalThread': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__PortRef': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__PortConnectorRef': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Name': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__RoleType': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Module': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Thread': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__indirectLink_S': []
          ,'MT_pre__ConditionBranch': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__BASE0': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__NamedElement': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Element': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__OUT2': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__OUT1': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__LocalDef': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Expr': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Signal': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__MetaModelElement_T': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__MetaModelElement_S': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Package': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__apply_contains': []
          ,'MT_pre__ConditionSet': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__State': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__MatchCase': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__PortType': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Match': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__paired_with': []
          ,'MT_pre__PackageContainer': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__IN1': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__IN0': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__LogicalThread': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Operation': []
          ,'MT_pre__FuncDef': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__SIBLING0': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__InitialPoint': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__PortConnector': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Null': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Par': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__ParIndexed': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__rightExpr': []
          ,'MT_pre__Listen': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__MatchModel': []
          ,'MT_pre__Site': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__New': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Concat': []
          ,'MT_pre__trace_link': []
          ,'MT_pre__SignalType': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Subtract': []
          ,'MT_pre__directLink_S': []
          ,'MT_pre__Inst': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__PythonRef': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__EntryPoint': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__CONJUGATE1': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Protocol': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__directLink_T': []
          ,'MT_pre__Def': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__StateMachine': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Seq': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__match_contains': []
          ,'MT_pre__Transition': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Vertex': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__StateMachineElement': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__hasArgs': []
          ,'MT_pre__Port': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__hasAttribute_S': []
          ,'MT_pre__hasAttribute_T': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__Condition': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Attribute': [( 'MT_pre__hasAttribute_T', self.createNewMT_pre__hasAttribute_T)]
          ,'MT_pre__Print': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Constant': []
          ,'MT_pre__ExitPoint': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Pattern': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__TransitionType': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Capsule': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__ListenBranch': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__ProcDef': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Delay': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Add': []
          ,'MT_pre__Trigger_S': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Proc': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Trigger_T': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__PLUGIN2': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Action': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Model_T': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Model_S': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__CapsuleRole': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__leftExpr': []
          ,'MT_pre__FIXED0': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Equation': [] }
    self.ConnectivityMap['MT_pre__Attribute']={
           'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__OPTIONAL1': []
          ,'MT_pre__backward_link': []
          ,'MT_pre__Expression': []
          ,'MT_pre__PhysicalThread': []
          ,'MT_pre__PortRef': []
          ,'MT_pre__PortConnectorRef': []
          ,'MT_pre__Name': []
          ,'MT_pre__RoleType': []
          ,'MT_pre__Module': []
          ,'MT_pre__Thread': []
          ,'MT_pre__indirectLink_S': []
          ,'MT_pre__ConditionBranch': []
          ,'MT_pre__BASE0': []
          ,'MT_pre__NamedElement': []
          ,'MT_pre__Element': []
          ,'MT_pre__OUT2': []
          ,'MT_pre__OUT1': []
          ,'MT_pre__LocalDef': []
          ,'MT_pre__Expr': []
          ,'MT_pre__Signal': []
          ,'MT_pre__MetaModelElement_T': []
          ,'MT_pre__MetaModelElement_S': []
          ,'MT_pre__Package': []
          ,'MT_pre__apply_contains': []
          ,'MT_pre__ConditionSet': []
          ,'MT_pre__State': []
          ,'MT_pre__MatchCase': []
          ,'MT_pre__PortType': []
          ,'MT_pre__Match': []
          ,'MT_pre__paired_with': []
          ,'MT_pre__PackageContainer': []
          ,'MT_pre__IN1': []
          ,'MT_pre__IN0': []
          ,'MT_pre__LogicalThread': []
          ,'MT_pre__Operation': []
          ,'MT_pre__FuncDef': []
          ,'MT_pre__SIBLING0': []
          ,'MT_pre__InitialPoint': []
          ,'MT_pre__PortConnector': []
          ,'MT_pre__Null': []
          ,'MT_pre__Par': []
          ,'MT_pre__ParIndexed': []
          ,'MT_pre__rightExpr': []
          ,'MT_pre__Listen': []
          ,'MT_pre__MatchModel': []
          ,'MT_pre__Site': []
          ,'MT_pre__New': []
          ,'MT_pre__Concat': []
          ,'MT_pre__trace_link': []
          ,'MT_pre__SignalType': []
          ,'MT_pre__Subtract': []
          ,'MT_pre__directLink_S': []
          ,'MT_pre__Inst': []
          ,'MT_pre__PythonRef': []
          ,'MT_pre__EntryPoint': []
          ,'MT_pre__CONJUGATE1': []
          ,'MT_pre__Protocol': []
          ,'MT_pre__directLink_T': []
          ,'MT_pre__Def': []
          ,'MT_pre__StateMachine': []
          ,'MT_pre__Seq': []
          ,'MT_pre__match_contains': []
          ,'MT_pre__Transition': []
          ,'MT_pre__Vertex': []
          ,'MT_pre__StateMachineElement': []
          ,'MT_pre__hasArgs': []
          ,'MT_pre__Port': []
          ,'MT_pre__hasAttribute_S': []
          ,'MT_pre__hasAttribute_T': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__Condition': []
          ,'MT_pre__Attribute': []
          ,'MT_pre__Print': []
          ,'MT_pre__Constant': []
          ,'MT_pre__ExitPoint': []
          ,'MT_pre__Pattern': []
          ,'MT_pre__TransitionType': []
          ,'MT_pre__Capsule': []
          ,'MT_pre__ListenBranch': []
          ,'MT_pre__ProcDef': []
          ,'MT_pre__Delay': []
          ,'MT_pre__Add': []
          ,'MT_pre__Trigger_S': []
          ,'MT_pre__Proc': []
          ,'MT_pre__Trigger_T': []
          ,'MT_pre__PLUGIN2': []
          ,'MT_pre__Action': []
          ,'MT_pre__Model_T': []
          ,'MT_pre__Model_S': []
          ,'MT_pre__CapsuleRole': []
          ,'MT_pre__leftExpr': []
          ,'MT_pre__FIXED0': []
          ,'MT_pre__Equation': [] }
    self.ConnectivityMap['MT_pre__Print']={
           'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__OPTIONAL1': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__backward_link': []
          ,'MT_pre__Expression': []
          ,'MT_pre__PhysicalThread': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__PortRef': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__PortConnectorRef': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Name': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__RoleType': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Module': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Thread': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__indirectLink_S': []
          ,'MT_pre__ConditionBranch': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__BASE0': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__NamedElement': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Element': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__OUT2': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__OUT1': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__LocalDef': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Expr': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Signal': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__MetaModelElement_T': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__MetaModelElement_S': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Package': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__apply_contains': []
          ,'MT_pre__ConditionSet': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__State': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__MatchCase': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__PortType': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Match': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__paired_with': []
          ,'MT_pre__PackageContainer': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__IN1': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__IN0': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__LogicalThread': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Operation': []
          ,'MT_pre__FuncDef': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__SIBLING0': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__InitialPoint': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__PortConnector': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Null': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Par': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__ParIndexed': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__rightExpr': []
          ,'MT_pre__Listen': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__MatchModel': []
          ,'MT_pre__Site': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__New': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Concat': []
          ,'MT_pre__trace_link': []
          ,'MT_pre__SignalType': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Subtract': []
          ,'MT_pre__directLink_S': []
          ,'MT_pre__Inst': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__PythonRef': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__EntryPoint': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__CONJUGATE1': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Protocol': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__directLink_T': []
          ,'MT_pre__Def': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__StateMachine': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Seq': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__match_contains': []
          ,'MT_pre__Transition': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Vertex': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__StateMachineElement': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__hasArgs': []
          ,'MT_pre__Port': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__hasAttribute_S': []
          ,'MT_pre__hasAttribute_T': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__Condition': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Attribute': [( 'MT_pre__hasAttribute_T', self.createNewMT_pre__hasAttribute_T)]
          ,'MT_pre__Print': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Constant': []
          ,'MT_pre__ExitPoint': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Pattern': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__TransitionType': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Capsule': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__ListenBranch': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__ProcDef': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Delay': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Add': []
          ,'MT_pre__Trigger_S': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Proc': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Trigger_T': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__PLUGIN2': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Action': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Model_T': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Model_S': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__CapsuleRole': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__leftExpr': []
          ,'MT_pre__FIXED0': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Equation': [] }
    self.ConnectivityMap['MT_pre__Constant']={
           'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__OPTIONAL1': []
          ,'MT_pre__backward_link': []
          ,'MT_pre__Expression': []
          ,'MT_pre__PhysicalThread': []
          ,'MT_pre__PortRef': []
          ,'MT_pre__PortConnectorRef': []
          ,'MT_pre__Name': []
          ,'MT_pre__RoleType': []
          ,'MT_pre__Module': []
          ,'MT_pre__Thread': []
          ,'MT_pre__indirectLink_S': []
          ,'MT_pre__ConditionBranch': []
          ,'MT_pre__BASE0': []
          ,'MT_pre__NamedElement': []
          ,'MT_pre__Element': []
          ,'MT_pre__OUT2': []
          ,'MT_pre__OUT1': []
          ,'MT_pre__LocalDef': []
          ,'MT_pre__Expr': []
          ,'MT_pre__Signal': []
          ,'MT_pre__MetaModelElement_T': []
          ,'MT_pre__MetaModelElement_S': []
          ,'MT_pre__Package': []
          ,'MT_pre__apply_contains': []
          ,'MT_pre__ConditionSet': []
          ,'MT_pre__State': []
          ,'MT_pre__MatchCase': []
          ,'MT_pre__PortType': []
          ,'MT_pre__Match': []
          ,'MT_pre__paired_with': []
          ,'MT_pre__PackageContainer': []
          ,'MT_pre__IN1': []
          ,'MT_pre__IN0': []
          ,'MT_pre__LogicalThread': []
          ,'MT_pre__Operation': []
          ,'MT_pre__FuncDef': []
          ,'MT_pre__SIBLING0': []
          ,'MT_pre__InitialPoint': []
          ,'MT_pre__PortConnector': []
          ,'MT_pre__Null': []
          ,'MT_pre__Par': []
          ,'MT_pre__ParIndexed': []
          ,'MT_pre__rightExpr': []
          ,'MT_pre__Listen': []
          ,'MT_pre__MatchModel': []
          ,'MT_pre__Site': []
          ,'MT_pre__New': []
          ,'MT_pre__Concat': []
          ,'MT_pre__trace_link': []
          ,'MT_pre__SignalType': []
          ,'MT_pre__Subtract': []
          ,'MT_pre__directLink_S': []
          ,'MT_pre__Inst': []
          ,'MT_pre__PythonRef': []
          ,'MT_pre__EntryPoint': []
          ,'MT_pre__CONJUGATE1': []
          ,'MT_pre__Protocol': []
          ,'MT_pre__directLink_T': []
          ,'MT_pre__Def': []
          ,'MT_pre__StateMachine': []
          ,'MT_pre__Seq': []
          ,'MT_pre__match_contains': []
          ,'MT_pre__Transition': []
          ,'MT_pre__Vertex': []
          ,'MT_pre__StateMachineElement': []
          ,'MT_pre__hasArgs': []
          ,'MT_pre__Port': []
          ,'MT_pre__hasAttribute_S': []
          ,'MT_pre__hasAttribute_T': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__Condition': []
          ,'MT_pre__Attribute': []
          ,'MT_pre__Print': []
          ,'MT_pre__Constant': []
          ,'MT_pre__ExitPoint': []
          ,'MT_pre__Pattern': []
          ,'MT_pre__TransitionType': []
          ,'MT_pre__Capsule': []
          ,'MT_pre__ListenBranch': []
          ,'MT_pre__ProcDef': []
          ,'MT_pre__Delay': []
          ,'MT_pre__Add': []
          ,'MT_pre__Trigger_S': []
          ,'MT_pre__Proc': []
          ,'MT_pre__Trigger_T': []
          ,'MT_pre__PLUGIN2': []
          ,'MT_pre__Action': []
          ,'MT_pre__Model_T': []
          ,'MT_pre__Model_S': []
          ,'MT_pre__CapsuleRole': []
          ,'MT_pre__leftExpr': []
          ,'MT_pre__FIXED0': []
          ,'MT_pre__Equation': [] }
    self.ConnectivityMap['MT_pre__ExitPoint']={
           'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__OPTIONAL1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__backward_link': []
          ,'MT_pre__Expression': []
          ,'MT_pre__PhysicalThread': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__PortRef': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__PortConnectorRef': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Name': []
          ,'MT_pre__RoleType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Module': []
          ,'MT_pre__Thread': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__indirectLink_S': []
          ,'MT_pre__ConditionBranch': []
          ,'MT_pre__BASE0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__NamedElement': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Element': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__OUT2': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__OUT1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__LocalDef': []
          ,'MT_pre__Expr': []
          ,'MT_pre__Signal': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__MetaModelElement_T': []
          ,'MT_pre__MetaModelElement_S': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Package': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__apply_contains': []
          ,'MT_pre__ConditionSet': []
          ,'MT_pre__State': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__MatchCase': []
          ,'MT_pre__PortType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Match': []
          ,'MT_pre__paired_with': []
          ,'MT_pre__PackageContainer': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__IN1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__IN0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__LogicalThread': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Operation': []
          ,'MT_pre__FuncDef': []
          ,'MT_pre__SIBLING0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__InitialPoint': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__PortConnector': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Null': []
          ,'MT_pre__Par': []
          ,'MT_pre__ParIndexed': []
          ,'MT_pre__rightExpr': []
          ,'MT_pre__Listen': []
          ,'MT_pre__MatchModel': []
          ,'MT_pre__Site': []
          ,'MT_pre__New': []
          ,'MT_pre__Concat': []
          ,'MT_pre__trace_link': []
          ,'MT_pre__SignalType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Subtract': []
          ,'MT_pre__directLink_S': []
          ,'MT_pre__Inst': []
          ,'MT_pre__PythonRef': []
          ,'MT_pre__EntryPoint': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__CONJUGATE1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Protocol': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__directLink_T': []
          ,'MT_pre__Def': []
          ,'MT_pre__StateMachine': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Seq': []
          ,'MT_pre__match_contains': []
          ,'MT_pre__Transition': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Vertex': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__StateMachineElement': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__hasArgs': []
          ,'MT_pre__Port': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__hasAttribute_S': []
          ,'MT_pre__hasAttribute_T': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__Condition': []
          ,'MT_pre__Attribute': [( 'MT_pre__hasAttribute_S', self.createNewMT_pre__hasAttribute_S)]
          ,'MT_pre__Print': []
          ,'MT_pre__Constant': []
          ,'MT_pre__ExitPoint': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Pattern': []
          ,'MT_pre__TransitionType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Capsule': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__ListenBranch': []
          ,'MT_pre__ProcDef': []
          ,'MT_pre__Delay': []
          ,'MT_pre__Add': []
          ,'MT_pre__Trigger_S': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Proc': []
          ,'MT_pre__Trigger_T': []
          ,'MT_pre__PLUGIN2': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Action': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Model_T': []
          ,'MT_pre__Model_S': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__CapsuleRole': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__leftExpr': []
          ,'MT_pre__FIXED0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Equation': [] }
    self.ConnectivityMap['MT_pre__Pattern']={
           'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__OPTIONAL1': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__backward_link': []
          ,'MT_pre__Expression': []
          ,'MT_pre__PhysicalThread': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__PortRef': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__PortConnectorRef': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Name': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__RoleType': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Module': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Thread': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__indirectLink_S': []
          ,'MT_pre__ConditionBranch': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__BASE0': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__NamedElement': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Element': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__OUT2': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__OUT1': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__LocalDef': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Expr': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Signal': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__MetaModelElement_T': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__MetaModelElement_S': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Package': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__apply_contains': []
          ,'MT_pre__ConditionSet': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__State': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__MatchCase': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__PortType': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Match': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__paired_with': []
          ,'MT_pre__PackageContainer': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__IN1': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__IN0': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__LogicalThread': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Operation': []
          ,'MT_pre__FuncDef': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__SIBLING0': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__InitialPoint': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__PortConnector': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Null': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Par': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__ParIndexed': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__rightExpr': []
          ,'MT_pre__Listen': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__MatchModel': []
          ,'MT_pre__Site': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__New': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Concat': []
          ,'MT_pre__trace_link': []
          ,'MT_pre__SignalType': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Subtract': []
          ,'MT_pre__directLink_S': []
          ,'MT_pre__Inst': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__PythonRef': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__EntryPoint': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__CONJUGATE1': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Protocol': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__directLink_T': []
          ,'MT_pre__Def': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__StateMachine': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Seq': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__match_contains': []
          ,'MT_pre__Transition': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Vertex': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__StateMachineElement': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__hasArgs': []
          ,'MT_pre__Port': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__hasAttribute_S': []
          ,'MT_pre__hasAttribute_T': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__Condition': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Attribute': [( 'MT_pre__hasAttribute_T', self.createNewMT_pre__hasAttribute_T)]
          ,'MT_pre__Print': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Constant': []
          ,'MT_pre__ExitPoint': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Pattern': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__TransitionType': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Capsule': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__ListenBranch': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__ProcDef': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Delay': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Add': []
          ,'MT_pre__Trigger_S': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Proc': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Trigger_T': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__PLUGIN2': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Action': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Model_T': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Model_S': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__CapsuleRole': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__leftExpr': []
          ,'MT_pre__FIXED0': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Equation': [] }
    self.ConnectivityMap['MT_pre__TransitionType']={
           'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__OPTIONAL1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__backward_link': []
          ,'MT_pre__Expression': []
          ,'MT_pre__PhysicalThread': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__PortRef': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__PortConnectorRef': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Name': []
          ,'MT_pre__RoleType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Module': []
          ,'MT_pre__Thread': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__indirectLink_S': []
          ,'MT_pre__ConditionBranch': []
          ,'MT_pre__BASE0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__NamedElement': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Element': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__OUT2': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__OUT1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__LocalDef': []
          ,'MT_pre__Expr': []
          ,'MT_pre__Signal': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__MetaModelElement_T': []
          ,'MT_pre__MetaModelElement_S': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Package': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__apply_contains': []
          ,'MT_pre__ConditionSet': []
          ,'MT_pre__State': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__MatchCase': []
          ,'MT_pre__PortType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Match': []
          ,'MT_pre__paired_with': []
          ,'MT_pre__PackageContainer': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__IN1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__IN0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__LogicalThread': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Operation': []
          ,'MT_pre__FuncDef': []
          ,'MT_pre__SIBLING0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__InitialPoint': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__PortConnector': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Null': []
          ,'MT_pre__Par': []
          ,'MT_pre__ParIndexed': []
          ,'MT_pre__rightExpr': []
          ,'MT_pre__Listen': []
          ,'MT_pre__MatchModel': []
          ,'MT_pre__Site': []
          ,'MT_pre__New': []
          ,'MT_pre__Concat': []
          ,'MT_pre__trace_link': []
          ,'MT_pre__SignalType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Subtract': []
          ,'MT_pre__directLink_S': []
          ,'MT_pre__Inst': []
          ,'MT_pre__PythonRef': []
          ,'MT_pre__EntryPoint': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__CONJUGATE1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Protocol': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__directLink_T': []
          ,'MT_pre__Def': []
          ,'MT_pre__StateMachine': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Seq': []
          ,'MT_pre__match_contains': []
          ,'MT_pre__Transition': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Vertex': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__StateMachineElement': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__hasArgs': []
          ,'MT_pre__Port': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__hasAttribute_S': []
          ,'MT_pre__hasAttribute_T': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__Condition': []
          ,'MT_pre__Attribute': [( 'MT_pre__hasAttribute_S', self.createNewMT_pre__hasAttribute_S)]
          ,'MT_pre__Print': []
          ,'MT_pre__Constant': []
          ,'MT_pre__ExitPoint': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Pattern': []
          ,'MT_pre__TransitionType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Capsule': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__ListenBranch': []
          ,'MT_pre__ProcDef': []
          ,'MT_pre__Delay': []
          ,'MT_pre__Add': []
          ,'MT_pre__Trigger_S': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Proc': []
          ,'MT_pre__Trigger_T': []
          ,'MT_pre__PLUGIN2': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Action': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Model_T': []
          ,'MT_pre__Model_S': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__CapsuleRole': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__leftExpr': []
          ,'MT_pre__FIXED0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Equation': [] }
    self.ConnectivityMap['MT_pre__RoleType']={
           'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__OPTIONAL1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__backward_link': []
          ,'MT_pre__Expression': []
          ,'MT_pre__PhysicalThread': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__PortRef': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__PortConnectorRef': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Name': []
          ,'MT_pre__RoleType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Module': []
          ,'MT_pre__Thread': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__indirectLink_S': []
          ,'MT_pre__ConditionBranch': []
          ,'MT_pre__BASE0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__NamedElement': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Element': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__OUT2': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__OUT1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__LocalDef': []
          ,'MT_pre__Expr': []
          ,'MT_pre__Signal': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__MetaModelElement_T': []
          ,'MT_pre__MetaModelElement_S': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Package': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__apply_contains': []
          ,'MT_pre__ConditionSet': []
          ,'MT_pre__State': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__MatchCase': []
          ,'MT_pre__PortType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Match': []
          ,'MT_pre__paired_with': []
          ,'MT_pre__PackageContainer': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__IN1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__IN0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__LogicalThread': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Operation': []
          ,'MT_pre__FuncDef': []
          ,'MT_pre__SIBLING0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__InitialPoint': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__PortConnector': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Null': []
          ,'MT_pre__Par': []
          ,'MT_pre__ParIndexed': []
          ,'MT_pre__rightExpr': []
          ,'MT_pre__Listen': []
          ,'MT_pre__MatchModel': []
          ,'MT_pre__Site': []
          ,'MT_pre__New': []
          ,'MT_pre__Concat': []
          ,'MT_pre__trace_link': []
          ,'MT_pre__SignalType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Subtract': []
          ,'MT_pre__directLink_S': []
          ,'MT_pre__Inst': []
          ,'MT_pre__PythonRef': []
          ,'MT_pre__EntryPoint': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__CONJUGATE1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Protocol': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__directLink_T': []
          ,'MT_pre__Def': []
          ,'MT_pre__StateMachine': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Seq': []
          ,'MT_pre__match_contains': []
          ,'MT_pre__Transition': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Vertex': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__StateMachineElement': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__hasArgs': []
          ,'MT_pre__Port': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__hasAttribute_S': []
          ,'MT_pre__hasAttribute_T': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__Condition': []
          ,'MT_pre__Attribute': [( 'MT_pre__hasAttribute_S', self.createNewMT_pre__hasAttribute_S)]
          ,'MT_pre__Print': []
          ,'MT_pre__Constant': []
          ,'MT_pre__ExitPoint': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Pattern': []
          ,'MT_pre__TransitionType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Capsule': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__ListenBranch': []
          ,'MT_pre__ProcDef': []
          ,'MT_pre__Delay': []
          ,'MT_pre__Add': []
          ,'MT_pre__Trigger_S': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Proc': []
          ,'MT_pre__Trigger_T': []
          ,'MT_pre__PLUGIN2': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Action': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Model_T': []
          ,'MT_pre__Model_S': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__CapsuleRole': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__leftExpr': []
          ,'MT_pre__FIXED0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Equation': [] }
    self.ConnectivityMap['MT_pre__ListenBranch']={
           'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__OPTIONAL1': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__backward_link': []
          ,'MT_pre__Expression': []
          ,'MT_pre__PhysicalThread': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__PortRef': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__PortConnectorRef': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Name': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__RoleType': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Module': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Thread': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__indirectLink_S': []
          ,'MT_pre__ConditionBranch': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__BASE0': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__NamedElement': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Element': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__OUT2': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__OUT1': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__LocalDef': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Expr': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Signal': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__MetaModelElement_T': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__MetaModelElement_S': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Package': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__apply_contains': []
          ,'MT_pre__ConditionSet': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__State': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__MatchCase': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__PortType': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Match': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__paired_with': []
          ,'MT_pre__PackageContainer': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__IN1': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__IN0': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__LogicalThread': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Operation': []
          ,'MT_pre__FuncDef': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__SIBLING0': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__InitialPoint': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__PortConnector': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Null': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Par': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__ParIndexed': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__rightExpr': []
          ,'MT_pre__Listen': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__MatchModel': []
          ,'MT_pre__Site': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__New': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Concat': []
          ,'MT_pre__trace_link': []
          ,'MT_pre__SignalType': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Subtract': []
          ,'MT_pre__directLink_S': []
          ,'MT_pre__Inst': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__PythonRef': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__EntryPoint': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__CONJUGATE1': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Protocol': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__directLink_T': []
          ,'MT_pre__Def': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__StateMachine': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Seq': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__match_contains': []
          ,'MT_pre__Transition': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Vertex': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__StateMachineElement': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__hasArgs': []
          ,'MT_pre__Port': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__hasAttribute_S': []
          ,'MT_pre__hasAttribute_T': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__Condition': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Attribute': [( 'MT_pre__hasAttribute_T', self.createNewMT_pre__hasAttribute_T)]
          ,'MT_pre__Print': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Constant': []
          ,'MT_pre__ExitPoint': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Pattern': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__TransitionType': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Capsule': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__ListenBranch': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__ProcDef': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Delay': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Add': []
          ,'MT_pre__Trigger_S': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Proc': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Trigger_T': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__PLUGIN2': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Action': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Model_T': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Model_S': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__CapsuleRole': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__leftExpr': []
          ,'MT_pre__FIXED0': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Equation': [] }
    self.ConnectivityMap['MT_pre__ProcDef']={
           'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__OPTIONAL1': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__backward_link': []
          ,'MT_pre__Expression': []
          ,'MT_pre__PhysicalThread': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__PortRef': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__PortConnectorRef': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Name': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__RoleType': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Module': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Thread': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__indirectLink_S': []
          ,'MT_pre__ConditionBranch': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__BASE0': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__NamedElement': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Element': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__OUT2': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__OUT1': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__LocalDef': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Expr': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Signal': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__MetaModelElement_T': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__MetaModelElement_S': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Package': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__apply_contains': []
          ,'MT_pre__ConditionSet': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__State': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__MatchCase': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__PortType': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Match': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__paired_with': []
          ,'MT_pre__PackageContainer': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__IN1': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__IN0': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__LogicalThread': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Operation': []
          ,'MT_pre__FuncDef': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__SIBLING0': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__InitialPoint': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__PortConnector': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Null': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Par': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__ParIndexed': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__rightExpr': []
          ,'MT_pre__Listen': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__MatchModel': []
          ,'MT_pre__Site': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__New': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Concat': []
          ,'MT_pre__trace_link': []
          ,'MT_pre__SignalType': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Subtract': []
          ,'MT_pre__directLink_S': []
          ,'MT_pre__Inst': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__PythonRef': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__EntryPoint': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__CONJUGATE1': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Protocol': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__directLink_T': []
          ,'MT_pre__Def': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__StateMachine': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Seq': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__match_contains': []
          ,'MT_pre__Transition': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Vertex': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__StateMachineElement': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__hasArgs': []
          ,'MT_pre__Port': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__hasAttribute_S': []
          ,'MT_pre__hasAttribute_T': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__Condition': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Attribute': [( 'MT_pre__hasAttribute_T', self.createNewMT_pre__hasAttribute_T)]
          ,'MT_pre__Print': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Constant': []
          ,'MT_pre__ExitPoint': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Pattern': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__TransitionType': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Capsule': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__ListenBranch': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__ProcDef': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Delay': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Add': []
          ,'MT_pre__Trigger_S': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Proc': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Trigger_T': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__PLUGIN2': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Action': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Model_T': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Model_S': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__CapsuleRole': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__leftExpr': []
          ,'MT_pre__FIXED0': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Equation': [] }
    self.ConnectivityMap['MT_pre__BASE0']={
           'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__OPTIONAL1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__backward_link': []
          ,'MT_pre__Expression': []
          ,'MT_pre__PhysicalThread': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__PortRef': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__PortConnectorRef': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Name': []
          ,'MT_pre__RoleType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Module': []
          ,'MT_pre__Thread': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__indirectLink_S': []
          ,'MT_pre__ConditionBranch': []
          ,'MT_pre__BASE0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__NamedElement': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Element': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__OUT2': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__OUT1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__LocalDef': []
          ,'MT_pre__Expr': []
          ,'MT_pre__Signal': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__MetaModelElement_T': []
          ,'MT_pre__MetaModelElement_S': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Package': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__apply_contains': []
          ,'MT_pre__ConditionSet': []
          ,'MT_pre__State': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__MatchCase': []
          ,'MT_pre__PortType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Match': []
          ,'MT_pre__paired_with': []
          ,'MT_pre__PackageContainer': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__IN1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__IN0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__LogicalThread': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Operation': []
          ,'MT_pre__FuncDef': []
          ,'MT_pre__SIBLING0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__InitialPoint': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__PortConnector': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Null': []
          ,'MT_pre__Par': []
          ,'MT_pre__ParIndexed': []
          ,'MT_pre__rightExpr': []
          ,'MT_pre__Listen': []
          ,'MT_pre__MatchModel': []
          ,'MT_pre__Site': []
          ,'MT_pre__New': []
          ,'MT_pre__Concat': []
          ,'MT_pre__trace_link': []
          ,'MT_pre__SignalType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Subtract': []
          ,'MT_pre__directLink_S': []
          ,'MT_pre__Inst': []
          ,'MT_pre__PythonRef': []
          ,'MT_pre__EntryPoint': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__CONJUGATE1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Protocol': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__directLink_T': []
          ,'MT_pre__Def': []
          ,'MT_pre__StateMachine': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Seq': []
          ,'MT_pre__match_contains': []
          ,'MT_pre__Transition': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Vertex': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__StateMachineElement': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__hasArgs': []
          ,'MT_pre__Port': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__hasAttribute_S': []
          ,'MT_pre__hasAttribute_T': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__Condition': []
          ,'MT_pre__Attribute': [( 'MT_pre__hasAttribute_S', self.createNewMT_pre__hasAttribute_S)]
          ,'MT_pre__Print': []
          ,'MT_pre__Constant': []
          ,'MT_pre__ExitPoint': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Pattern': []
          ,'MT_pre__TransitionType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Capsule': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__ListenBranch': []
          ,'MT_pre__ProcDef': []
          ,'MT_pre__Delay': []
          ,'MT_pre__Add': []
          ,'MT_pre__Trigger_S': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Proc': []
          ,'MT_pre__Trigger_T': []
          ,'MT_pre__PLUGIN2': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Action': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Model_T': []
          ,'MT_pre__Model_S': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__CapsuleRole': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__leftExpr': []
          ,'MT_pre__FIXED0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Equation': [] }
    self.ConnectivityMap['MT_pre__Add']={
           'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__OPTIONAL1': []
          ,'MT_pre__backward_link': []
          ,'MT_pre__Expression': [( 'MT_pre__hasArgs', self.createNewMT_pre__hasArgs)]
          ,'MT_pre__PhysicalThread': []
          ,'MT_pre__PortRef': []
          ,'MT_pre__PortConnectorRef': []
          ,'MT_pre__Name': []
          ,'MT_pre__RoleType': []
          ,'MT_pre__Module': []
          ,'MT_pre__Thread': []
          ,'MT_pre__indirectLink_S': []
          ,'MT_pre__ConditionBranch': []
          ,'MT_pre__BASE0': []
          ,'MT_pre__NamedElement': []
          ,'MT_pre__Element': []
          ,'MT_pre__OUT2': []
          ,'MT_pre__OUT1': []
          ,'MT_pre__LocalDef': []
          ,'MT_pre__Expr': []
          ,'MT_pre__Signal': []
          ,'MT_pre__MetaModelElement_T': []
          ,'MT_pre__MetaModelElement_S': []
          ,'MT_pre__Package': []
          ,'MT_pre__apply_contains': []
          ,'MT_pre__ConditionSet': []
          ,'MT_pre__State': []
          ,'MT_pre__MatchCase': []
          ,'MT_pre__PortType': []
          ,'MT_pre__Match': []
          ,'MT_pre__paired_with': []
          ,'MT_pre__PackageContainer': []
          ,'MT_pre__IN1': []
          ,'MT_pre__IN0': []
          ,'MT_pre__LogicalThread': []
          ,'MT_pre__Operation': [( 'MT_pre__hasArgs', self.createNewMT_pre__hasArgs)]
          ,'MT_pre__FuncDef': []
          ,'MT_pre__SIBLING0': []
          ,'MT_pre__InitialPoint': []
          ,'MT_pre__PortConnector': []
          ,'MT_pre__Null': []
          ,'MT_pre__Par': []
          ,'MT_pre__ParIndexed': []
          ,'MT_pre__rightExpr': []
          ,'MT_pre__Listen': []
          ,'MT_pre__MatchModel': []
          ,'MT_pre__Site': []
          ,'MT_pre__New': []
          ,'MT_pre__Concat': [( 'MT_pre__hasArgs', self.createNewMT_pre__hasArgs)]
          ,'MT_pre__trace_link': []
          ,'MT_pre__SignalType': []
          ,'MT_pre__Subtract': [( 'MT_pre__hasArgs', self.createNewMT_pre__hasArgs)]
          ,'MT_pre__directLink_S': []
          ,'MT_pre__Inst': []
          ,'MT_pre__PythonRef': []
          ,'MT_pre__EntryPoint': []
          ,'MT_pre__CONJUGATE1': []
          ,'MT_pre__Protocol': []
          ,'MT_pre__directLink_T': []
          ,'MT_pre__Def': []
          ,'MT_pre__StateMachine': []
          ,'MT_pre__Seq': []
          ,'MT_pre__match_contains': []
          ,'MT_pre__Transition': []
          ,'MT_pre__Vertex': []
          ,'MT_pre__StateMachineElement': []
          ,'MT_pre__hasArgs': []
          ,'MT_pre__Port': []
          ,'MT_pre__hasAttribute_S': []
          ,'MT_pre__hasAttribute_T': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__Condition': []
          ,'MT_pre__Attribute': [( 'MT_pre__hasArgs', self.createNewMT_pre__hasArgs)]
          ,'MT_pre__Print': []
          ,'MT_pre__Constant': [( 'MT_pre__hasArgs', self.createNewMT_pre__hasArgs)]
          ,'MT_pre__ExitPoint': []
          ,'MT_pre__Pattern': []
          ,'MT_pre__TransitionType': []
          ,'MT_pre__Capsule': []
          ,'MT_pre__ListenBranch': []
          ,'MT_pre__ProcDef': []
          ,'MT_pre__Delay': []
          ,'MT_pre__Add': [( 'MT_pre__hasArgs', self.createNewMT_pre__hasArgs)]
          ,'MT_pre__Trigger_S': []
          ,'MT_pre__Proc': []
          ,'MT_pre__Trigger_T': []
          ,'MT_pre__PLUGIN2': []
          ,'MT_pre__Action': []
          ,'MT_pre__Model_T': []
          ,'MT_pre__Model_S': []
          ,'MT_pre__CapsuleRole': []
          ,'MT_pre__leftExpr': []
          ,'MT_pre__FIXED0': []
          ,'MT_pre__Equation': [] }
    self.ConnectivityMap['MT_pre__Trigger_S']={
           'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__OPTIONAL1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__backward_link': []
          ,'MT_pre__Expression': []
          ,'MT_pre__PhysicalThread': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__PortRef': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__PortConnectorRef': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Name': []
          ,'MT_pre__RoleType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Module': []
          ,'MT_pre__Thread': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__indirectLink_S': []
          ,'MT_pre__ConditionBranch': []
          ,'MT_pre__BASE0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__NamedElement': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Element': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__OUT2': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__OUT1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__LocalDef': []
          ,'MT_pre__Expr': []
          ,'MT_pre__Signal': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__MetaModelElement_T': []
          ,'MT_pre__MetaModelElement_S': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Package': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__apply_contains': []
          ,'MT_pre__ConditionSet': []
          ,'MT_pre__State': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__MatchCase': []
          ,'MT_pre__PortType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Match': []
          ,'MT_pre__paired_with': []
          ,'MT_pre__PackageContainer': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__IN1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__IN0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__LogicalThread': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Operation': []
          ,'MT_pre__FuncDef': []
          ,'MT_pre__SIBLING0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__InitialPoint': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__PortConnector': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Null': []
          ,'MT_pre__Par': []
          ,'MT_pre__ParIndexed': []
          ,'MT_pre__rightExpr': []
          ,'MT_pre__Listen': []
          ,'MT_pre__MatchModel': []
          ,'MT_pre__Site': []
          ,'MT_pre__New': []
          ,'MT_pre__Concat': []
          ,'MT_pre__trace_link': []
          ,'MT_pre__SignalType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Subtract': []
          ,'MT_pre__directLink_S': []
          ,'MT_pre__Inst': []
          ,'MT_pre__PythonRef': []
          ,'MT_pre__EntryPoint': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__CONJUGATE1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Protocol': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__directLink_T': []
          ,'MT_pre__Def': []
          ,'MT_pre__StateMachine': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Seq': []
          ,'MT_pre__match_contains': []
          ,'MT_pre__Transition': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Vertex': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__StateMachineElement': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__hasArgs': []
          ,'MT_pre__Port': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__hasAttribute_S': []
          ,'MT_pre__hasAttribute_T': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__Condition': []
          ,'MT_pre__Attribute': [( 'MT_pre__hasAttribute_S', self.createNewMT_pre__hasAttribute_S)]
          ,'MT_pre__Print': []
          ,'MT_pre__Constant': []
          ,'MT_pre__ExitPoint': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Pattern': []
          ,'MT_pre__TransitionType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Capsule': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__ListenBranch': []
          ,'MT_pre__ProcDef': []
          ,'MT_pre__Delay': []
          ,'MT_pre__Add': []
          ,'MT_pre__Trigger_S': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Proc': []
          ,'MT_pre__Trigger_T': []
          ,'MT_pre__PLUGIN2': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Action': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Model_T': []
          ,'MT_pre__Model_S': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__CapsuleRole': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__leftExpr': []
          ,'MT_pre__FIXED0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Equation': [] }
    self.ConnectivityMap['MT_pre__Proc']={
           'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__OPTIONAL1': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__backward_link': []
          ,'MT_pre__Expression': []
          ,'MT_pre__PhysicalThread': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__PortRef': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__PortConnectorRef': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Name': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__RoleType': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Module': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Thread': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__indirectLink_S': []
          ,'MT_pre__ConditionBranch': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__BASE0': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__NamedElement': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Element': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__OUT2': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__OUT1': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__LocalDef': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Expr': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Signal': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__MetaModelElement_T': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__MetaModelElement_S': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Package': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__apply_contains': []
          ,'MT_pre__ConditionSet': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__State': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__MatchCase': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__PortType': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Match': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__paired_with': []
          ,'MT_pre__PackageContainer': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__IN1': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__IN0': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__LogicalThread': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Operation': []
          ,'MT_pre__FuncDef': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__SIBLING0': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__InitialPoint': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__PortConnector': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Null': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Par': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__ParIndexed': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__rightExpr': []
          ,'MT_pre__Listen': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__MatchModel': []
          ,'MT_pre__Site': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__New': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Concat': []
          ,'MT_pre__trace_link': []
          ,'MT_pre__SignalType': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Subtract': []
          ,'MT_pre__directLink_S': []
          ,'MT_pre__Inst': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__PythonRef': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__EntryPoint': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__CONJUGATE1': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Protocol': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__directLink_T': []
          ,'MT_pre__Def': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__StateMachine': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Seq': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__match_contains': []
          ,'MT_pre__Transition': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Vertex': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__StateMachineElement': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__hasArgs': []
          ,'MT_pre__Port': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__hasAttribute_S': []
          ,'MT_pre__hasAttribute_T': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__Condition': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Attribute': [( 'MT_pre__hasAttribute_T', self.createNewMT_pre__hasAttribute_T)]
          ,'MT_pre__Print': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Constant': []
          ,'MT_pre__ExitPoint': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Pattern': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__TransitionType': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Capsule': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__ListenBranch': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__ProcDef': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Delay': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Add': []
          ,'MT_pre__Trigger_S': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Proc': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Trigger_T': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__PLUGIN2': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Action': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Model_T': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Model_S': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__CapsuleRole': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__leftExpr': []
          ,'MT_pre__FIXED0': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Equation': [] }
    self.ConnectivityMap['MT_pre__Trigger_T']={
           'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__OPTIONAL1': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__backward_link': []
          ,'MT_pre__Expression': []
          ,'MT_pre__PhysicalThread': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__PortRef': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__PortConnectorRef': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Name': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__RoleType': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Module': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Thread': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__indirectLink_S': []
          ,'MT_pre__ConditionBranch': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__BASE0': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__NamedElement': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Element': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__OUT2': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__OUT1': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__LocalDef': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Expr': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Signal': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__MetaModelElement_T': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__MetaModelElement_S': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Package': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__apply_contains': []
          ,'MT_pre__ConditionSet': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__State': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__MatchCase': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__PortType': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Match': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__paired_with': []
          ,'MT_pre__PackageContainer': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__IN1': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__IN0': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__LogicalThread': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Operation': []
          ,'MT_pre__FuncDef': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__SIBLING0': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__InitialPoint': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__PortConnector': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Null': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Par': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__ParIndexed': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__rightExpr': []
          ,'MT_pre__Listen': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__MatchModel': []
          ,'MT_pre__Site': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__New': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Concat': []
          ,'MT_pre__trace_link': []
          ,'MT_pre__SignalType': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Subtract': []
          ,'MT_pre__directLink_S': []
          ,'MT_pre__Inst': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__PythonRef': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__EntryPoint': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__CONJUGATE1': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Protocol': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__directLink_T': []
          ,'MT_pre__Def': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__StateMachine': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Seq': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__match_contains': []
          ,'MT_pre__Transition': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Vertex': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__StateMachineElement': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__hasArgs': []
          ,'MT_pre__Port': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__hasAttribute_S': []
          ,'MT_pre__hasAttribute_T': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__Condition': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Attribute': [( 'MT_pre__hasAttribute_T', self.createNewMT_pre__hasAttribute_T)]
          ,'MT_pre__Print': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Constant': []
          ,'MT_pre__ExitPoint': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Pattern': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__TransitionType': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Capsule': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__ListenBranch': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__ProcDef': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Delay': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Add': []
          ,'MT_pre__Trigger_S': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Proc': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Trigger_T': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__PLUGIN2': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Action': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Model_T': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Model_S': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__CapsuleRole': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__leftExpr': []
          ,'MT_pre__FIXED0': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Equation': [] }
    self.ConnectivityMap['MT_pre__PLUGIN2']={
           'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__OPTIONAL1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__backward_link': []
          ,'MT_pre__Expression': []
          ,'MT_pre__PhysicalThread': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__PortRef': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__PortConnectorRef': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Name': []
          ,'MT_pre__RoleType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Module': []
          ,'MT_pre__Thread': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__indirectLink_S': []
          ,'MT_pre__ConditionBranch': []
          ,'MT_pre__BASE0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__NamedElement': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Element': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__OUT2': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__OUT1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__LocalDef': []
          ,'MT_pre__Expr': []
          ,'MT_pre__Signal': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__MetaModelElement_T': []
          ,'MT_pre__MetaModelElement_S': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Package': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__apply_contains': []
          ,'MT_pre__ConditionSet': []
          ,'MT_pre__State': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__MatchCase': []
          ,'MT_pre__PortType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Match': []
          ,'MT_pre__paired_with': []
          ,'MT_pre__PackageContainer': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__IN1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__IN0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__LogicalThread': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Operation': []
          ,'MT_pre__FuncDef': []
          ,'MT_pre__SIBLING0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__InitialPoint': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__PortConnector': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Null': []
          ,'MT_pre__Par': []
          ,'MT_pre__ParIndexed': []
          ,'MT_pre__rightExpr': []
          ,'MT_pre__Listen': []
          ,'MT_pre__MatchModel': []
          ,'MT_pre__Site': []
          ,'MT_pre__New': []
          ,'MT_pre__Concat': []
          ,'MT_pre__trace_link': []
          ,'MT_pre__SignalType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Subtract': []
          ,'MT_pre__directLink_S': []
          ,'MT_pre__Inst': []
          ,'MT_pre__PythonRef': []
          ,'MT_pre__EntryPoint': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__CONJUGATE1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Protocol': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__directLink_T': []
          ,'MT_pre__Def': []
          ,'MT_pre__StateMachine': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Seq': []
          ,'MT_pre__match_contains': []
          ,'MT_pre__Transition': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Vertex': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__StateMachineElement': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__hasArgs': []
          ,'MT_pre__Port': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__hasAttribute_S': []
          ,'MT_pre__hasAttribute_T': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__Condition': []
          ,'MT_pre__Attribute': [( 'MT_pre__hasAttribute_S', self.createNewMT_pre__hasAttribute_S)]
          ,'MT_pre__Print': []
          ,'MT_pre__Constant': []
          ,'MT_pre__ExitPoint': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Pattern': []
          ,'MT_pre__TransitionType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Capsule': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__ListenBranch': []
          ,'MT_pre__ProcDef': []
          ,'MT_pre__Delay': []
          ,'MT_pre__Add': []
          ,'MT_pre__Trigger_S': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Proc': []
          ,'MT_pre__Trigger_T': []
          ,'MT_pre__PLUGIN2': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Action': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Model_T': []
          ,'MT_pre__Model_S': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__CapsuleRole': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__leftExpr': []
          ,'MT_pre__FIXED0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Equation': [] }
    self.ConnectivityMap['MT_pre__Action']={
           'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__OPTIONAL1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__backward_link': []
          ,'MT_pre__Expression': []
          ,'MT_pre__PhysicalThread': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__PortRef': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__PortConnectorRef': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Name': []
          ,'MT_pre__RoleType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Module': []
          ,'MT_pre__Thread': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__indirectLink_S': []
          ,'MT_pre__ConditionBranch': []
          ,'MT_pre__BASE0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__NamedElement': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Element': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__OUT2': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__OUT1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__LocalDef': []
          ,'MT_pre__Expr': []
          ,'MT_pre__Signal': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__MetaModelElement_T': []
          ,'MT_pre__MetaModelElement_S': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Package': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__apply_contains': []
          ,'MT_pre__ConditionSet': []
          ,'MT_pre__State': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__MatchCase': []
          ,'MT_pre__PortType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Match': []
          ,'MT_pre__paired_with': []
          ,'MT_pre__PackageContainer': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__IN1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__IN0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__LogicalThread': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Operation': []
          ,'MT_pre__FuncDef': []
          ,'MT_pre__SIBLING0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__InitialPoint': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__PortConnector': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Null': []
          ,'MT_pre__Par': []
          ,'MT_pre__ParIndexed': []
          ,'MT_pre__rightExpr': []
          ,'MT_pre__Listen': []
          ,'MT_pre__MatchModel': []
          ,'MT_pre__Site': []
          ,'MT_pre__New': []
          ,'MT_pre__Concat': []
          ,'MT_pre__trace_link': []
          ,'MT_pre__SignalType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Subtract': []
          ,'MT_pre__directLink_S': []
          ,'MT_pre__Inst': []
          ,'MT_pre__PythonRef': []
          ,'MT_pre__EntryPoint': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__CONJUGATE1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Protocol': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__directLink_T': []
          ,'MT_pre__Def': []
          ,'MT_pre__StateMachine': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Seq': []
          ,'MT_pre__match_contains': []
          ,'MT_pre__Transition': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Vertex': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__StateMachineElement': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__hasArgs': []
          ,'MT_pre__Port': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__hasAttribute_S': []
          ,'MT_pre__hasAttribute_T': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__Condition': []
          ,'MT_pre__Attribute': [( 'MT_pre__hasAttribute_S', self.createNewMT_pre__hasAttribute_S)]
          ,'MT_pre__Print': []
          ,'MT_pre__Constant': []
          ,'MT_pre__ExitPoint': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Pattern': []
          ,'MT_pre__TransitionType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Capsule': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__ListenBranch': []
          ,'MT_pre__ProcDef': []
          ,'MT_pre__Delay': []
          ,'MT_pre__Add': []
          ,'MT_pre__Trigger_S': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Proc': []
          ,'MT_pre__Trigger_T': []
          ,'MT_pre__PLUGIN2': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Action': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Model_T': []
          ,'MT_pre__Model_S': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__CapsuleRole': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__leftExpr': []
          ,'MT_pre__FIXED0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Equation': [] }
    self.ConnectivityMap['MT_pre__Model_T']={
           'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__OPTIONAL1': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__backward_link': []
          ,'MT_pre__Expression': []
          ,'MT_pre__PhysicalThread': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__PortRef': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__PortConnectorRef': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Name': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__RoleType': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Module': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Thread': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__indirectLink_S': []
          ,'MT_pre__ConditionBranch': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__BASE0': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__NamedElement': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Element': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__OUT2': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__OUT1': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__LocalDef': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Expr': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Signal': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__MetaModelElement_T': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__MetaModelElement_S': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Package': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__apply_contains': []
          ,'MT_pre__ConditionSet': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__State': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__MatchCase': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__PortType': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Match': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__paired_with': []
          ,'MT_pre__PackageContainer': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__IN1': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__IN0': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__LogicalThread': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Operation': []
          ,'MT_pre__FuncDef': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__SIBLING0': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__InitialPoint': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__PortConnector': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Null': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Par': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__ParIndexed': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__rightExpr': []
          ,'MT_pre__Listen': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__MatchModel': []
          ,'MT_pre__Site': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__New': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Concat': []
          ,'MT_pre__trace_link': []
          ,'MT_pre__SignalType': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Subtract': []
          ,'MT_pre__directLink_S': []
          ,'MT_pre__Inst': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__PythonRef': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__EntryPoint': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__CONJUGATE1': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Protocol': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__directLink_T': []
          ,'MT_pre__Def': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__StateMachine': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Seq': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__match_contains': []
          ,'MT_pre__Transition': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Vertex': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__StateMachineElement': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__hasArgs': []
          ,'MT_pre__Port': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__hasAttribute_S': []
          ,'MT_pre__hasAttribute_T': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__Condition': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Attribute': [( 'MT_pre__hasAttribute_T', self.createNewMT_pre__hasAttribute_T)]
          ,'MT_pre__Print': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Constant': []
          ,'MT_pre__ExitPoint': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Pattern': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__TransitionType': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Capsule': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__ListenBranch': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__ProcDef': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Delay': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Add': []
          ,'MT_pre__Trigger_S': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Proc': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Trigger_T': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__PLUGIN2': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Action': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Model_T': [( 'MT_pre__directLink_T', self.createNewMT_pre__directLink_T)]
          ,'MT_pre__Model_S': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__CapsuleRole': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__leftExpr': []
          ,'MT_pre__FIXED0': [( 'MT_pre__backward_link', self.createNewMT_pre__backward_link), ( 'MT_pre__trace_link', self.createNewMT_pre__trace_link)]
          ,'MT_pre__Equation': [] }
    self.ConnectivityMap['MT_pre__Model_S']={
           'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__OPTIONAL1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__backward_link': []
          ,'MT_pre__Expression': []
          ,'MT_pre__PhysicalThread': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__PortRef': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__PortConnectorRef': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Name': []
          ,'MT_pre__RoleType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Module': []
          ,'MT_pre__Thread': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__indirectLink_S': []
          ,'MT_pre__ConditionBranch': []
          ,'MT_pre__BASE0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__NamedElement': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Element': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__OUT2': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__OUT1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__LocalDef': []
          ,'MT_pre__Expr': []
          ,'MT_pre__Signal': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__MetaModelElement_T': []
          ,'MT_pre__MetaModelElement_S': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Package': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__apply_contains': []
          ,'MT_pre__ConditionSet': []
          ,'MT_pre__State': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__MatchCase': []
          ,'MT_pre__PortType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Match': []
          ,'MT_pre__paired_with': []
          ,'MT_pre__PackageContainer': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__IN1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__IN0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__LogicalThread': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Operation': []
          ,'MT_pre__FuncDef': []
          ,'MT_pre__SIBLING0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__InitialPoint': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__PortConnector': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Null': []
          ,'MT_pre__Par': []
          ,'MT_pre__ParIndexed': []
          ,'MT_pre__rightExpr': []
          ,'MT_pre__Listen': []
          ,'MT_pre__MatchModel': []
          ,'MT_pre__Site': []
          ,'MT_pre__New': []
          ,'MT_pre__Concat': []
          ,'MT_pre__trace_link': []
          ,'MT_pre__SignalType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Subtract': []
          ,'MT_pre__directLink_S': []
          ,'MT_pre__Inst': []
          ,'MT_pre__PythonRef': []
          ,'MT_pre__EntryPoint': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__CONJUGATE1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Protocol': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__directLink_T': []
          ,'MT_pre__Def': []
          ,'MT_pre__StateMachine': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Seq': []
          ,'MT_pre__match_contains': []
          ,'MT_pre__Transition': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Vertex': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__StateMachineElement': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__hasArgs': []
          ,'MT_pre__Port': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__hasAttribute_S': []
          ,'MT_pre__hasAttribute_T': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__Condition': []
          ,'MT_pre__Attribute': [( 'MT_pre__hasAttribute_S', self.createNewMT_pre__hasAttribute_S)]
          ,'MT_pre__Print': []
          ,'MT_pre__Constant': []
          ,'MT_pre__ExitPoint': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Pattern': []
          ,'MT_pre__TransitionType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Capsule': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__ListenBranch': []
          ,'MT_pre__ProcDef': []
          ,'MT_pre__Delay': []
          ,'MT_pre__Add': []
          ,'MT_pre__Trigger_S': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Proc': []
          ,'MT_pre__Trigger_T': []
          ,'MT_pre__PLUGIN2': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Action': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Model_T': []
          ,'MT_pre__Model_S': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__CapsuleRole': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__leftExpr': []
          ,'MT_pre__FIXED0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Equation': [] }
    self.ConnectivityMap['MT_pre__CapsuleRole']={
           'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__OPTIONAL1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__backward_link': []
          ,'MT_pre__Expression': []
          ,'MT_pre__PhysicalThread': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__PortRef': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__PortConnectorRef': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Name': []
          ,'MT_pre__RoleType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Module': []
          ,'MT_pre__Thread': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__indirectLink_S': []
          ,'MT_pre__ConditionBranch': []
          ,'MT_pre__BASE0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__NamedElement': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Element': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__OUT2': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__OUT1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__LocalDef': []
          ,'MT_pre__Expr': []
          ,'MT_pre__Signal': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__MetaModelElement_T': []
          ,'MT_pre__MetaModelElement_S': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Package': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__apply_contains': []
          ,'MT_pre__ConditionSet': []
          ,'MT_pre__State': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__MatchCase': []
          ,'MT_pre__PortType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Match': []
          ,'MT_pre__paired_with': []
          ,'MT_pre__PackageContainer': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__IN1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__IN0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__LogicalThread': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Operation': []
          ,'MT_pre__FuncDef': []
          ,'MT_pre__SIBLING0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__InitialPoint': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__PortConnector': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Null': []
          ,'MT_pre__Par': []
          ,'MT_pre__ParIndexed': []
          ,'MT_pre__rightExpr': []
          ,'MT_pre__Listen': []
          ,'MT_pre__MatchModel': []
          ,'MT_pre__Site': []
          ,'MT_pre__New': []
          ,'MT_pre__Concat': []
          ,'MT_pre__trace_link': []
          ,'MT_pre__SignalType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Subtract': []
          ,'MT_pre__directLink_S': []
          ,'MT_pre__Inst': []
          ,'MT_pre__PythonRef': []
          ,'MT_pre__EntryPoint': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__CONJUGATE1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Protocol': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__directLink_T': []
          ,'MT_pre__Def': []
          ,'MT_pre__StateMachine': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Seq': []
          ,'MT_pre__match_contains': []
          ,'MT_pre__Transition': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Vertex': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__StateMachineElement': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__hasArgs': []
          ,'MT_pre__Port': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__hasAttribute_S': []
          ,'MT_pre__hasAttribute_T': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__Condition': []
          ,'MT_pre__Attribute': [( 'MT_pre__hasAttribute_S', self.createNewMT_pre__hasAttribute_S)]
          ,'MT_pre__Print': []
          ,'MT_pre__Constant': []
          ,'MT_pre__ExitPoint': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Pattern': []
          ,'MT_pre__TransitionType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Capsule': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__ListenBranch': []
          ,'MT_pre__ProcDef': []
          ,'MT_pre__Delay': []
          ,'MT_pre__Add': []
          ,'MT_pre__Trigger_S': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Proc': []
          ,'MT_pre__Trigger_T': []
          ,'MT_pre__PLUGIN2': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Action': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Model_T': []
          ,'MT_pre__Model_S': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__CapsuleRole': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__leftExpr': []
          ,'MT_pre__FIXED0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Equation': [] }
    self.ConnectivityMap['MT_pre__leftExpr']={
           'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__OPTIONAL1': []
          ,'MT_pre__backward_link': []
          ,'MT_pre__Expression': []
          ,'MT_pre__PhysicalThread': []
          ,'MT_pre__PortRef': []
          ,'MT_pre__PortConnectorRef': []
          ,'MT_pre__Name': []
          ,'MT_pre__RoleType': []
          ,'MT_pre__Module': []
          ,'MT_pre__Thread': []
          ,'MT_pre__indirectLink_S': []
          ,'MT_pre__ConditionBranch': []
          ,'MT_pre__BASE0': []
          ,'MT_pre__NamedElement': []
          ,'MT_pre__Element': []
          ,'MT_pre__OUT2': []
          ,'MT_pre__OUT1': []
          ,'MT_pre__LocalDef': []
          ,'MT_pre__Expr': []
          ,'MT_pre__Signal': []
          ,'MT_pre__MetaModelElement_T': []
          ,'MT_pre__MetaModelElement_S': []
          ,'MT_pre__Package': []
          ,'MT_pre__apply_contains': []
          ,'MT_pre__ConditionSet': []
          ,'MT_pre__State': []
          ,'MT_pre__MatchCase': []
          ,'MT_pre__PortType': []
          ,'MT_pre__Match': []
          ,'MT_pre__paired_with': []
          ,'MT_pre__PackageContainer': []
          ,'MT_pre__IN1': []
          ,'MT_pre__IN0': []
          ,'MT_pre__LogicalThread': []
          ,'MT_pre__Operation': []
          ,'MT_pre__FuncDef': []
          ,'MT_pre__SIBLING0': []
          ,'MT_pre__InitialPoint': []
          ,'MT_pre__PortConnector': []
          ,'MT_pre__Null': []
          ,'MT_pre__Par': []
          ,'MT_pre__ParIndexed': []
          ,'MT_pre__rightExpr': []
          ,'MT_pre__Listen': []
          ,'MT_pre__MatchModel': []
          ,'MT_pre__Site': []
          ,'MT_pre__New': []
          ,'MT_pre__Concat': []
          ,'MT_pre__trace_link': []
          ,'MT_pre__SignalType': []
          ,'MT_pre__Subtract': []
          ,'MT_pre__directLink_S': []
          ,'MT_pre__Inst': []
          ,'MT_pre__PythonRef': []
          ,'MT_pre__EntryPoint': []
          ,'MT_pre__CONJUGATE1': []
          ,'MT_pre__Protocol': []
          ,'MT_pre__directLink_T': []
          ,'MT_pre__Def': []
          ,'MT_pre__StateMachine': []
          ,'MT_pre__Seq': []
          ,'MT_pre__match_contains': []
          ,'MT_pre__Transition': []
          ,'MT_pre__Vertex': []
          ,'MT_pre__StateMachineElement': []
          ,'MT_pre__hasArgs': [( 'MT_pre__Operation', self.createNewMT_pre__Operation), ( 'MT_pre__Add', self.createNewMT_pre__Add), ( 'MT_pre__Subtract', self.createNewMT_pre__Subtract), ( 'MT_pre__Concat', self.createNewMT_pre__Concat)]
          ,'MT_pre__Port': []
          ,'MT_pre__hasAttribute_S': []
          ,'MT_pre__hasAttribute_T': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__Condition': []
          ,'MT_pre__Attribute': []
          ,'MT_pre__Print': []
          ,'MT_pre__Constant': []
          ,'MT_pre__ExitPoint': []
          ,'MT_pre__Pattern': []
          ,'MT_pre__TransitionType': []
          ,'MT_pre__Capsule': []
          ,'MT_pre__ListenBranch': []
          ,'MT_pre__ProcDef': []
          ,'MT_pre__Delay': []
          ,'MT_pre__Add': []
          ,'MT_pre__Trigger_S': []
          ,'MT_pre__Proc': []
          ,'MT_pre__Trigger_T': []
          ,'MT_pre__PLUGIN2': []
          ,'MT_pre__Action': []
          ,'MT_pre__Model_T': []
          ,'MT_pre__Model_S': []
          ,'MT_pre__CapsuleRole': []
          ,'MT_pre__leftExpr': []
          ,'MT_pre__FIXED0': []
          ,'MT_pre__Equation': [] }
    self.ConnectivityMap['MT_pre__FIXED0']={
           'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__OPTIONAL1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__backward_link': []
          ,'MT_pre__Expression': []
          ,'MT_pre__PhysicalThread': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__PortRef': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__PortConnectorRef': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Name': []
          ,'MT_pre__RoleType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Module': []
          ,'MT_pre__Thread': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__indirectLink_S': []
          ,'MT_pre__ConditionBranch': []
          ,'MT_pre__BASE0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__NamedElement': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Element': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__OUT2': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__OUT1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__LocalDef': []
          ,'MT_pre__Expr': []
          ,'MT_pre__Signal': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__MetaModelElement_T': []
          ,'MT_pre__MetaModelElement_S': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Package': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__apply_contains': []
          ,'MT_pre__ConditionSet': []
          ,'MT_pre__State': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__MatchCase': []
          ,'MT_pre__PortType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Match': []
          ,'MT_pre__paired_with': []
          ,'MT_pre__PackageContainer': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__IN1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__IN0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__LogicalThread': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Operation': []
          ,'MT_pre__FuncDef': []
          ,'MT_pre__SIBLING0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__InitialPoint': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__PortConnector': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Null': []
          ,'MT_pre__Par': []
          ,'MT_pre__ParIndexed': []
          ,'MT_pre__rightExpr': []
          ,'MT_pre__Listen': []
          ,'MT_pre__MatchModel': []
          ,'MT_pre__Site': []
          ,'MT_pre__New': []
          ,'MT_pre__Concat': []
          ,'MT_pre__trace_link': []
          ,'MT_pre__SignalType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Subtract': []
          ,'MT_pre__directLink_S': []
          ,'MT_pre__Inst': []
          ,'MT_pre__PythonRef': []
          ,'MT_pre__EntryPoint': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__CONJUGATE1': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Protocol': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__directLink_T': []
          ,'MT_pre__Def': []
          ,'MT_pre__StateMachine': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Seq': []
          ,'MT_pre__match_contains': []
          ,'MT_pre__Transition': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Vertex': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__StateMachineElement': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__hasArgs': []
          ,'MT_pre__Port': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__hasAttribute_S': []
          ,'MT_pre__hasAttribute_T': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__Condition': []
          ,'MT_pre__Attribute': [( 'MT_pre__hasAttribute_S', self.createNewMT_pre__hasAttribute_S)]
          ,'MT_pre__Print': []
          ,'MT_pre__Constant': []
          ,'MT_pre__ExitPoint': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Pattern': []
          ,'MT_pre__TransitionType': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Capsule': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__ListenBranch': []
          ,'MT_pre__ProcDef': []
          ,'MT_pre__Delay': []
          ,'MT_pre__Add': []
          ,'MT_pre__Trigger_S': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Proc': []
          ,'MT_pre__Trigger_T': []
          ,'MT_pre__PLUGIN2': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Action': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Model_T': []
          ,'MT_pre__Model_S': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__CapsuleRole': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__leftExpr': []
          ,'MT_pre__FIXED0': [( 'MT_pre__directLink_S', self.createNewMT_pre__directLink_S), ( 'MT_pre__indirectLink_S', self.createNewMT_pre__indirectLink_S)]
          ,'MT_pre__Equation': [] }
    self.ConnectivityMap['MT_pre__Equation']={
           'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__OPTIONAL1': []
          ,'MT_pre__backward_link': []
          ,'MT_pre__Expression': [( 'MT_pre__leftExpr', self.createNewMT_pre__leftExpr), ( 'MT_pre__rightExpr', self.createNewMT_pre__rightExpr)]
          ,'MT_pre__PhysicalThread': []
          ,'MT_pre__PortRef': []
          ,'MT_pre__PortConnectorRef': []
          ,'MT_pre__Name': []
          ,'MT_pre__RoleType': []
          ,'MT_pre__Module': []
          ,'MT_pre__Thread': []
          ,'MT_pre__indirectLink_S': []
          ,'MT_pre__ConditionBranch': []
          ,'MT_pre__BASE0': []
          ,'MT_pre__NamedElement': []
          ,'MT_pre__Element': []
          ,'MT_pre__OUT2': []
          ,'MT_pre__OUT1': []
          ,'MT_pre__LocalDef': []
          ,'MT_pre__Expr': []
          ,'MT_pre__Signal': []
          ,'MT_pre__MetaModelElement_T': []
          ,'MT_pre__MetaModelElement_S': []
          ,'MT_pre__Package': []
          ,'MT_pre__apply_contains': []
          ,'MT_pre__ConditionSet': []
          ,'MT_pre__State': []
          ,'MT_pre__MatchCase': []
          ,'MT_pre__PortType': []
          ,'MT_pre__Match': []
          ,'MT_pre__paired_with': []
          ,'MT_pre__PackageContainer': []
          ,'MT_pre__IN1': []
          ,'MT_pre__IN0': []
          ,'MT_pre__LogicalThread': []
          ,'MT_pre__Operation': [( 'MT_pre__leftExpr', self.createNewMT_pre__leftExpr), ( 'MT_pre__rightExpr', self.createNewMT_pre__rightExpr)]
          ,'MT_pre__FuncDef': []
          ,'MT_pre__SIBLING0': []
          ,'MT_pre__InitialPoint': []
          ,'MT_pre__PortConnector': []
          ,'MT_pre__Null': []
          ,'MT_pre__Par': []
          ,'MT_pre__ParIndexed': []
          ,'MT_pre__rightExpr': []
          ,'MT_pre__Listen': []
          ,'MT_pre__MatchModel': []
          ,'MT_pre__Site': []
          ,'MT_pre__New': []
          ,'MT_pre__Concat': [( 'MT_pre__leftExpr', self.createNewMT_pre__leftExpr), ( 'MT_pre__rightExpr', self.createNewMT_pre__rightExpr)]
          ,'MT_pre__trace_link': []
          ,'MT_pre__SignalType': []
          ,'MT_pre__Subtract': [( 'MT_pre__leftExpr', self.createNewMT_pre__leftExpr), ( 'MT_pre__rightExpr', self.createNewMT_pre__rightExpr)]
          ,'MT_pre__directLink_S': []
          ,'MT_pre__Inst': []
          ,'MT_pre__PythonRef': []
          ,'MT_pre__EntryPoint': []
          ,'MT_pre__CONJUGATE1': []
          ,'MT_pre__Protocol': []
          ,'MT_pre__directLink_T': []
          ,'MT_pre__Def': []
          ,'MT_pre__StateMachine': []
          ,'MT_pre__Seq': []
          ,'MT_pre__match_contains': []
          ,'MT_pre__Transition': []
          ,'MT_pre__Vertex': []
          ,'MT_pre__StateMachineElement': []
          ,'MT_pre__hasArgs': []
          ,'MT_pre__Port': []
          ,'MT_pre__hasAttribute_S': []
          ,'MT_pre__hasAttribute_T': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__Condition': []
          ,'MT_pre__Attribute': [( 'MT_pre__leftExpr', self.createNewMT_pre__leftExpr), ( 'MT_pre__rightExpr', self.createNewMT_pre__rightExpr)]
          ,'MT_pre__Print': []
          ,'MT_pre__Constant': [( 'MT_pre__leftExpr', self.createNewMT_pre__leftExpr), ( 'MT_pre__rightExpr', self.createNewMT_pre__rightExpr)]
          ,'MT_pre__ExitPoint': []
          ,'MT_pre__Pattern': []
          ,'MT_pre__TransitionType': []
          ,'MT_pre__Capsule': []
          ,'MT_pre__ListenBranch': []
          ,'MT_pre__ProcDef': []
          ,'MT_pre__Delay': []
          ,'MT_pre__Add': [( 'MT_pre__leftExpr', self.createNewMT_pre__leftExpr), ( 'MT_pre__rightExpr', self.createNewMT_pre__rightExpr)]
          ,'MT_pre__Trigger_S': []
          ,'MT_pre__Proc': []
          ,'MT_pre__Trigger_T': []
          ,'MT_pre__PLUGIN2': []
          ,'MT_pre__Action': []
          ,'MT_pre__Model_T': []
          ,'MT_pre__Model_S': []
          ,'MT_pre__CapsuleRole': []
          ,'MT_pre__leftExpr': []
          ,'MT_pre__FIXED0': []
          ,'MT_pre__Equation': [] }
    
    self.CardinalityTable['MT_pre__MatchModel']={
          'MT_pre__MatchModel': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__MetaModelElement_S': []
          ,'MT_pre__MetaModelElement_T': []
          ,'MT_pre__Element': []
          ,'MT_pre__NamedElement': []
          ,'MT_pre__Trigger_S': []
          ,'MT_pre__Action': []
          ,'MT_pre__PortRef': []
          ,'MT_pre__PortConnectorRef': []
          ,'MT_pre__StateMachineElement': []
          ,'MT_pre__Protocol': []
          ,'MT_pre__Signal': []
          ,'MT_pre__Port': []
          ,'MT_pre__Vertex': []
          ,'MT_pre__InitialPoint': []
          ,'MT_pre__EntryPoint': []
          ,'MT_pre__ExitPoint': []
          ,'MT_pre__Transition': []
          ,'MT_pre__StateMachine': []
          ,'MT_pre__State': []
          ,'MT_pre__Capsule': []
          ,'MT_pre__PackageContainer': []
          ,'MT_pre__Model_S': []
          ,'MT_pre__Package': []
          ,'MT_pre__CapsuleRole': []
          ,'MT_pre__PortConnector': []
          ,'MT_pre__Thread': []
          ,'MT_pre__PhysicalThread': []
          ,'MT_pre__LogicalThread': []
          ,'MT_pre__PortType': []
          ,'MT_pre__BASE0': []
          ,'MT_pre__CONJUGATE1': []
          ,'MT_pre__SignalType': []
          ,'MT_pre__OUT1': []
          ,'MT_pre__IN0': []
          ,'MT_pre__RoleType': []
          ,'MT_pre__FIXED0': []
          ,'MT_pre__OPTIONAL1': []
          ,'MT_pre__PLUGIN2': []
          ,'MT_pre__TransitionType': []
          ,'MT_pre__SIBLING0': []
          ,'MT_pre__IN1': []
          ,'MT_pre__OUT2': []
          ,'MT_pre__Def': []
          ,'MT_pre__Expr': []
          ,'MT_pre__Pattern': []
          ,'MT_pre__Proc': []
          ,'MT_pre__ProcDef': []
          ,'MT_pre__FuncDef': []
          ,'MT_pre__Name': []
          ,'MT_pre__PythonRef': []
          ,'MT_pre__Module': []
          ,'MT_pre__Null': []
          ,'MT_pre__Trigger_T': []
          ,'MT_pre__Listen': []
          ,'MT_pre__ConditionBranch': []
          ,'MT_pre__ListenBranch': []
          ,'MT_pre__Site': []
          ,'MT_pre__Model_T': []
          ,'MT_pre__MatchCase': []
          ,'MT_pre__Condition': []
          ,'MT_pre__New': []
          ,'MT_pre__Delay': []
          ,'MT_pre__Par': []
          ,'MT_pre__ParIndexed': []
          ,'MT_pre__Inst': []
          ,'MT_pre__LocalDef': []
          ,'MT_pre__Seq': []
          ,'MT_pre__ConditionSet': []
          ,'MT_pre__Match': []
          ,'MT_pre__Print': []
          ,'MT_pre__Attribute': []
          ,'MT_pre__Expression': []
          ,'MT_pre__Equation': []
          ,'MT_pre__Operation': []
          ,'MT_pre__Add': []
          ,'MT_pre__Subtract': []
          ,'MT_pre__Concat': []
          ,'MT_pre__Constant': []
          ,'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__paired_with': [('0', '1', 'Source')]
          ,'MT_pre__match_contains': [('0', 'N', 'Source')]
          ,'MT_pre__apply_contains': []
          ,'MT_pre__directLink_T': []
          ,'MT_pre__directLink_S': []
          ,'MT_pre__indirectLink_S': []
          ,'MT_pre__backward_link': []
          ,'MT_pre__trace_link': []
          ,'MT_pre__hasAttribute_S': []
          ,'MT_pre__hasAttribute_T': []
          ,'MT_pre__leftExpr': []
          ,'MT_pre__rightExpr': []
          ,'MT_pre__hasArgs': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': [('0', 'N', 'Destination')] }
    self.CardinalityTable['MT_pre__ApplyModel']={
          'MT_pre__MatchModel': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__MetaModelElement_S': []
          ,'MT_pre__MetaModelElement_T': []
          ,'MT_pre__Element': []
          ,'MT_pre__NamedElement': []
          ,'MT_pre__Trigger_S': []
          ,'MT_pre__Action': []
          ,'MT_pre__PortRef': []
          ,'MT_pre__PortConnectorRef': []
          ,'MT_pre__StateMachineElement': []
          ,'MT_pre__Protocol': []
          ,'MT_pre__Signal': []
          ,'MT_pre__Port': []
          ,'MT_pre__Vertex': []
          ,'MT_pre__InitialPoint': []
          ,'MT_pre__EntryPoint': []
          ,'MT_pre__ExitPoint': []
          ,'MT_pre__Transition': []
          ,'MT_pre__StateMachine': []
          ,'MT_pre__State': []
          ,'MT_pre__Capsule': []
          ,'MT_pre__PackageContainer': []
          ,'MT_pre__Model_S': []
          ,'MT_pre__Package': []
          ,'MT_pre__CapsuleRole': []
          ,'MT_pre__PortConnector': []
          ,'MT_pre__Thread': []
          ,'MT_pre__PhysicalThread': []
          ,'MT_pre__LogicalThread': []
          ,'MT_pre__PortType': []
          ,'MT_pre__BASE0': []
          ,'MT_pre__CONJUGATE1': []
          ,'MT_pre__SignalType': []
          ,'MT_pre__OUT1': []
          ,'MT_pre__IN0': []
          ,'MT_pre__RoleType': []
          ,'MT_pre__FIXED0': []
          ,'MT_pre__OPTIONAL1': []
          ,'MT_pre__PLUGIN2': []
          ,'MT_pre__TransitionType': []
          ,'MT_pre__SIBLING0': []
          ,'MT_pre__IN1': []
          ,'MT_pre__OUT2': []
          ,'MT_pre__Def': []
          ,'MT_pre__Expr': []
          ,'MT_pre__Pattern': []
          ,'MT_pre__Proc': []
          ,'MT_pre__ProcDef': []
          ,'MT_pre__FuncDef': []
          ,'MT_pre__Name': []
          ,'MT_pre__PythonRef': []
          ,'MT_pre__Module': []
          ,'MT_pre__Null': []
          ,'MT_pre__Trigger_T': []
          ,'MT_pre__Listen': []
          ,'MT_pre__ConditionBranch': []
          ,'MT_pre__ListenBranch': []
          ,'MT_pre__Site': []
          ,'MT_pre__Model_T': []
          ,'MT_pre__MatchCase': []
          ,'MT_pre__Condition': []
          ,'MT_pre__New': []
          ,'MT_pre__Delay': []
          ,'MT_pre__Par': []
          ,'MT_pre__ParIndexed': []
          ,'MT_pre__Inst': []
          ,'MT_pre__LocalDef': []
          ,'MT_pre__Seq': []
          ,'MT_pre__ConditionSet': []
          ,'MT_pre__Match': []
          ,'MT_pre__Print': []
          ,'MT_pre__Attribute': []
          ,'MT_pre__Expression': []
          ,'MT_pre__Equation': []
          ,'MT_pre__Operation': []
          ,'MT_pre__Add': []
          ,'MT_pre__Subtract': []
          ,'MT_pre__Concat': []
          ,'MT_pre__Constant': []
          ,'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__paired_with': [('0', '1', 'Destination')]
          ,'MT_pre__match_contains': []
          ,'MT_pre__apply_contains': [('0', 'N', 'Source')]
          ,'MT_pre__directLink_T': []
          ,'MT_pre__directLink_S': []
          ,'MT_pre__indirectLink_S': []
          ,'MT_pre__backward_link': []
          ,'MT_pre__trace_link': []
          ,'MT_pre__hasAttribute_S': []
          ,'MT_pre__hasAttribute_T': []
          ,'MT_pre__leftExpr': []
          ,'MT_pre__rightExpr': []
          ,'MT_pre__hasArgs': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': [('0', 'N', 'Destination')] }
    self.CardinalityTable['MT_pre__MetaModelElement_S']={
          'MT_pre__MatchModel': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__MetaModelElement_S': []
          ,'MT_pre__MetaModelElement_T': []
          ,'MT_pre__Element': []
          ,'MT_pre__NamedElement': []
          ,'MT_pre__Trigger_S': []
          ,'MT_pre__Action': []
          ,'MT_pre__PortRef': []
          ,'MT_pre__PortConnectorRef': []
          ,'MT_pre__StateMachineElement': []
          ,'MT_pre__Protocol': []
          ,'MT_pre__Signal': []
          ,'MT_pre__Port': []
          ,'MT_pre__Vertex': []
          ,'MT_pre__InitialPoint': []
          ,'MT_pre__EntryPoint': []
          ,'MT_pre__ExitPoint': []
          ,'MT_pre__Transition': []
          ,'MT_pre__StateMachine': []
          ,'MT_pre__State': []
          ,'MT_pre__Capsule': []
          ,'MT_pre__PackageContainer': []
          ,'MT_pre__Model_S': []
          ,'MT_pre__Package': []
          ,'MT_pre__CapsuleRole': []
          ,'MT_pre__PortConnector': []
          ,'MT_pre__Thread': []
          ,'MT_pre__PhysicalThread': []
          ,'MT_pre__LogicalThread': []
          ,'MT_pre__PortType': []
          ,'MT_pre__BASE0': []
          ,'MT_pre__CONJUGATE1': []
          ,'MT_pre__SignalType': []
          ,'MT_pre__OUT1': []
          ,'MT_pre__IN0': []
          ,'MT_pre__RoleType': []
          ,'MT_pre__FIXED0': []
          ,'MT_pre__OPTIONAL1': []
          ,'MT_pre__PLUGIN2': []
          ,'MT_pre__TransitionType': []
          ,'MT_pre__SIBLING0': []
          ,'MT_pre__IN1': []
          ,'MT_pre__OUT2': []
          ,'MT_pre__Def': []
          ,'MT_pre__Expr': []
          ,'MT_pre__Pattern': []
          ,'MT_pre__Proc': []
          ,'MT_pre__ProcDef': []
          ,'MT_pre__FuncDef': []
          ,'MT_pre__Name': []
          ,'MT_pre__PythonRef': []
          ,'MT_pre__Module': []
          ,'MT_pre__Null': []
          ,'MT_pre__Trigger_T': []
          ,'MT_pre__Listen': []
          ,'MT_pre__ConditionBranch': []
          ,'MT_pre__ListenBranch': []
          ,'MT_pre__Site': []
          ,'MT_pre__Model_T': []
          ,'MT_pre__MatchCase': []
          ,'MT_pre__Condition': []
          ,'MT_pre__New': []
          ,'MT_pre__Delay': []
          ,'MT_pre__Par': []
          ,'MT_pre__ParIndexed': []
          ,'MT_pre__Inst': []
          ,'MT_pre__LocalDef': []
          ,'MT_pre__Seq': []
          ,'MT_pre__ConditionSet': []
          ,'MT_pre__Match': []
          ,'MT_pre__Print': []
          ,'MT_pre__Attribute': []
          ,'MT_pre__Expression': []
          ,'MT_pre__Equation': []
          ,'MT_pre__Operation': []
          ,'MT_pre__Add': []
          ,'MT_pre__Subtract': []
          ,'MT_pre__Concat': []
          ,'MT_pre__Constant': []
          ,'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__paired_with': []
          ,'MT_pre__match_contains': [('0', 'N', 'Destination')]
          ,'MT_pre__apply_contains': []
          ,'MT_pre__directLink_T': []
          ,'MT_pre__directLink_S': [('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__indirectLink_S': [('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__backward_link': [('0', 'N', 'Destination')]
          ,'MT_pre__trace_link': [('0', 'N', 'Destination')]
          ,'MT_pre__hasAttribute_S': [('0', 'N', 'Source')]
          ,'MT_pre__hasAttribute_T': []
          ,'MT_pre__leftExpr': []
          ,'MT_pre__rightExpr': []
          ,'MT_pre__hasArgs': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': [('0', 'N', 'Destination')] }
    self.CardinalityTable['MT_pre__MetaModelElement_T']={
          'MT_pre__MatchModel': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__MetaModelElement_S': []
          ,'MT_pre__MetaModelElement_T': []
          ,'MT_pre__Element': []
          ,'MT_pre__NamedElement': []
          ,'MT_pre__Trigger_S': []
          ,'MT_pre__Action': []
          ,'MT_pre__PortRef': []
          ,'MT_pre__PortConnectorRef': []
          ,'MT_pre__StateMachineElement': []
          ,'MT_pre__Protocol': []
          ,'MT_pre__Signal': []
          ,'MT_pre__Port': []
          ,'MT_pre__Vertex': []
          ,'MT_pre__InitialPoint': []
          ,'MT_pre__EntryPoint': []
          ,'MT_pre__ExitPoint': []
          ,'MT_pre__Transition': []
          ,'MT_pre__StateMachine': []
          ,'MT_pre__State': []
          ,'MT_pre__Capsule': []
          ,'MT_pre__PackageContainer': []
          ,'MT_pre__Model_S': []
          ,'MT_pre__Package': []
          ,'MT_pre__CapsuleRole': []
          ,'MT_pre__PortConnector': []
          ,'MT_pre__Thread': []
          ,'MT_pre__PhysicalThread': []
          ,'MT_pre__LogicalThread': []
          ,'MT_pre__PortType': []
          ,'MT_pre__BASE0': []
          ,'MT_pre__CONJUGATE1': []
          ,'MT_pre__SignalType': []
          ,'MT_pre__OUT1': []
          ,'MT_pre__IN0': []
          ,'MT_pre__RoleType': []
          ,'MT_pre__FIXED0': []
          ,'MT_pre__OPTIONAL1': []
          ,'MT_pre__PLUGIN2': []
          ,'MT_pre__TransitionType': []
          ,'MT_pre__SIBLING0': []
          ,'MT_pre__IN1': []
          ,'MT_pre__OUT2': []
          ,'MT_pre__Def': []
          ,'MT_pre__Expr': []
          ,'MT_pre__Pattern': []
          ,'MT_pre__Proc': []
          ,'MT_pre__ProcDef': []
          ,'MT_pre__FuncDef': []
          ,'MT_pre__Name': []
          ,'MT_pre__PythonRef': []
          ,'MT_pre__Module': []
          ,'MT_pre__Null': []
          ,'MT_pre__Trigger_T': []
          ,'MT_pre__Listen': []
          ,'MT_pre__ConditionBranch': []
          ,'MT_pre__ListenBranch': []
          ,'MT_pre__Site': []
          ,'MT_pre__Model_T': []
          ,'MT_pre__MatchCase': []
          ,'MT_pre__Condition': []
          ,'MT_pre__New': []
          ,'MT_pre__Delay': []
          ,'MT_pre__Par': []
          ,'MT_pre__ParIndexed': []
          ,'MT_pre__Inst': []
          ,'MT_pre__LocalDef': []
          ,'MT_pre__Seq': []
          ,'MT_pre__ConditionSet': []
          ,'MT_pre__Match': []
          ,'MT_pre__Print': []
          ,'MT_pre__Attribute': []
          ,'MT_pre__Expression': []
          ,'MT_pre__Equation': []
          ,'MT_pre__Operation': []
          ,'MT_pre__Add': []
          ,'MT_pre__Subtract': []
          ,'MT_pre__Concat': []
          ,'MT_pre__Constant': []
          ,'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__paired_with': []
          ,'MT_pre__match_contains': []
          ,'MT_pre__apply_contains': [('0', 'N', 'Destination')]
          ,'MT_pre__directLink_T': [('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__directLink_S': []
          ,'MT_pre__indirectLink_S': []
          ,'MT_pre__backward_link': [('0', 'N', 'Source')]
          ,'MT_pre__trace_link': [('0', 'N', 'Source')]
          ,'MT_pre__hasAttribute_S': []
          ,'MT_pre__hasAttribute_T': [('0', 'N', 'Source')]
          ,'MT_pre__leftExpr': []
          ,'MT_pre__rightExpr': []
          ,'MT_pre__hasArgs': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': [('0', 'N', 'Destination')] }
    self.CardinalityTable['MT_pre__Element']={
          'MT_pre__MatchModel': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__MetaModelElement_S': []
          ,'MT_pre__MetaModelElement_T': []
          ,'MT_pre__Element': []
          ,'MT_pre__NamedElement': []
          ,'MT_pre__Trigger_S': []
          ,'MT_pre__Action': []
          ,'MT_pre__PortRef': []
          ,'MT_pre__PortConnectorRef': []
          ,'MT_pre__StateMachineElement': []
          ,'MT_pre__Protocol': []
          ,'MT_pre__Signal': []
          ,'MT_pre__Port': []
          ,'MT_pre__Vertex': []
          ,'MT_pre__InitialPoint': []
          ,'MT_pre__EntryPoint': []
          ,'MT_pre__ExitPoint': []
          ,'MT_pre__Transition': []
          ,'MT_pre__StateMachine': []
          ,'MT_pre__State': []
          ,'MT_pre__Capsule': []
          ,'MT_pre__PackageContainer': []
          ,'MT_pre__Model_S': []
          ,'MT_pre__Package': []
          ,'MT_pre__CapsuleRole': []
          ,'MT_pre__PortConnector': []
          ,'MT_pre__Thread': []
          ,'MT_pre__PhysicalThread': []
          ,'MT_pre__LogicalThread': []
          ,'MT_pre__PortType': []
          ,'MT_pre__BASE0': []
          ,'MT_pre__CONJUGATE1': []
          ,'MT_pre__SignalType': []
          ,'MT_pre__OUT1': []
          ,'MT_pre__IN0': []
          ,'MT_pre__RoleType': []
          ,'MT_pre__FIXED0': []
          ,'MT_pre__OPTIONAL1': []
          ,'MT_pre__PLUGIN2': []
          ,'MT_pre__TransitionType': []
          ,'MT_pre__SIBLING0': []
          ,'MT_pre__IN1': []
          ,'MT_pre__OUT2': []
          ,'MT_pre__Def': []
          ,'MT_pre__Expr': []
          ,'MT_pre__Pattern': []
          ,'MT_pre__Proc': []
          ,'MT_pre__ProcDef': []
          ,'MT_pre__FuncDef': []
          ,'MT_pre__Name': []
          ,'MT_pre__PythonRef': []
          ,'MT_pre__Module': []
          ,'MT_pre__Null': []
          ,'MT_pre__Trigger_T': []
          ,'MT_pre__Listen': []
          ,'MT_pre__ConditionBranch': []
          ,'MT_pre__ListenBranch': []
          ,'MT_pre__Site': []
          ,'MT_pre__Model_T': []
          ,'MT_pre__MatchCase': []
          ,'MT_pre__Condition': []
          ,'MT_pre__New': []
          ,'MT_pre__Delay': []
          ,'MT_pre__Par': []
          ,'MT_pre__ParIndexed': []
          ,'MT_pre__Inst': []
          ,'MT_pre__LocalDef': []
          ,'MT_pre__Seq': []
          ,'MT_pre__ConditionSet': []
          ,'MT_pre__Match': []
          ,'MT_pre__Print': []
          ,'MT_pre__Attribute': []
          ,'MT_pre__Expression': []
          ,'MT_pre__Equation': []
          ,'MT_pre__Operation': []
          ,'MT_pre__Add': []
          ,'MT_pre__Subtract': []
          ,'MT_pre__Concat': []
          ,'MT_pre__Constant': []
          ,'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__paired_with': []
          ,'MT_pre__match_contains': [('0', 'N', 'Destination')]
          ,'MT_pre__apply_contains': []
          ,'MT_pre__directLink_T': []
          ,'MT_pre__directLink_S': [('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__indirectLink_S': [('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__backward_link': [('0', 'N', 'Destination')]
          ,'MT_pre__trace_link': [('0', 'N', 'Destination')]
          ,'MT_pre__hasAttribute_S': [('0', 'N', 'Source')]
          ,'MT_pre__hasAttribute_T': []
          ,'MT_pre__leftExpr': []
          ,'MT_pre__rightExpr': []
          ,'MT_pre__hasArgs': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': [('0', 'N', 'Destination'), ('0', 'N', 'Destination')] }
    self.CardinalityTable['MT_pre__NamedElement']={
          'MT_pre__MatchModel': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__MetaModelElement_S': []
          ,'MT_pre__MetaModelElement_T': []
          ,'MT_pre__Element': []
          ,'MT_pre__NamedElement': []
          ,'MT_pre__Trigger_S': []
          ,'MT_pre__Action': []
          ,'MT_pre__PortRef': []
          ,'MT_pre__PortConnectorRef': []
          ,'MT_pre__StateMachineElement': []
          ,'MT_pre__Protocol': []
          ,'MT_pre__Signal': []
          ,'MT_pre__Port': []
          ,'MT_pre__Vertex': []
          ,'MT_pre__InitialPoint': []
          ,'MT_pre__EntryPoint': []
          ,'MT_pre__ExitPoint': []
          ,'MT_pre__Transition': []
          ,'MT_pre__StateMachine': []
          ,'MT_pre__State': []
          ,'MT_pre__Capsule': []
          ,'MT_pre__PackageContainer': []
          ,'MT_pre__Model_S': []
          ,'MT_pre__Package': []
          ,'MT_pre__CapsuleRole': []
          ,'MT_pre__PortConnector': []
          ,'MT_pre__Thread': []
          ,'MT_pre__PhysicalThread': []
          ,'MT_pre__LogicalThread': []
          ,'MT_pre__PortType': []
          ,'MT_pre__BASE0': []
          ,'MT_pre__CONJUGATE1': []
          ,'MT_pre__SignalType': []
          ,'MT_pre__OUT1': []
          ,'MT_pre__IN0': []
          ,'MT_pre__RoleType': []
          ,'MT_pre__FIXED0': []
          ,'MT_pre__OPTIONAL1': []
          ,'MT_pre__PLUGIN2': []
          ,'MT_pre__TransitionType': []
          ,'MT_pre__SIBLING0': []
          ,'MT_pre__IN1': []
          ,'MT_pre__OUT2': []
          ,'MT_pre__Def': []
          ,'MT_pre__Expr': []
          ,'MT_pre__Pattern': []
          ,'MT_pre__Proc': []
          ,'MT_pre__ProcDef': []
          ,'MT_pre__FuncDef': []
          ,'MT_pre__Name': []
          ,'MT_pre__PythonRef': []
          ,'MT_pre__Module': []
          ,'MT_pre__Null': []
          ,'MT_pre__Trigger_T': []
          ,'MT_pre__Listen': []
          ,'MT_pre__ConditionBranch': []
          ,'MT_pre__ListenBranch': []
          ,'MT_pre__Site': []
          ,'MT_pre__Model_T': []
          ,'MT_pre__MatchCase': []
          ,'MT_pre__Condition': []
          ,'MT_pre__New': []
          ,'MT_pre__Delay': []
          ,'MT_pre__Par': []
          ,'MT_pre__ParIndexed': []
          ,'MT_pre__Inst': []
          ,'MT_pre__LocalDef': []
          ,'MT_pre__Seq': []
          ,'MT_pre__ConditionSet': []
          ,'MT_pre__Match': []
          ,'MT_pre__Print': []
          ,'MT_pre__Attribute': []
          ,'MT_pre__Expression': []
          ,'MT_pre__Equation': []
          ,'MT_pre__Operation': []
          ,'MT_pre__Add': []
          ,'MT_pre__Subtract': []
          ,'MT_pre__Concat': []
          ,'MT_pre__Constant': []
          ,'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__paired_with': []
          ,'MT_pre__match_contains': [('0', 'N', 'Destination'), ('0', 'N', 'Destination')]
          ,'MT_pre__apply_contains': []
          ,'MT_pre__directLink_T': []
          ,'MT_pre__directLink_S': [('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__indirectLink_S': [('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__backward_link': [('0', 'N', 'Destination'), ('0', 'N', 'Destination')]
          ,'MT_pre__trace_link': [('0', 'N', 'Destination'), ('0', 'N', 'Destination')]
          ,'MT_pre__hasAttribute_S': [('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__hasAttribute_T': []
          ,'MT_pre__leftExpr': []
          ,'MT_pre__rightExpr': []
          ,'MT_pre__hasArgs': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': [('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination')] }
    self.CardinalityTable['MT_pre__Trigger_S']={
          'MT_pre__MatchModel': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__MetaModelElement_S': []
          ,'MT_pre__MetaModelElement_T': []
          ,'MT_pre__Element': []
          ,'MT_pre__NamedElement': []
          ,'MT_pre__Trigger_S': []
          ,'MT_pre__Action': []
          ,'MT_pre__PortRef': []
          ,'MT_pre__PortConnectorRef': []
          ,'MT_pre__StateMachineElement': []
          ,'MT_pre__Protocol': []
          ,'MT_pre__Signal': []
          ,'MT_pre__Port': []
          ,'MT_pre__Vertex': []
          ,'MT_pre__InitialPoint': []
          ,'MT_pre__EntryPoint': []
          ,'MT_pre__ExitPoint': []
          ,'MT_pre__Transition': []
          ,'MT_pre__StateMachine': []
          ,'MT_pre__State': []
          ,'MT_pre__Capsule': []
          ,'MT_pre__PackageContainer': []
          ,'MT_pre__Model_S': []
          ,'MT_pre__Package': []
          ,'MT_pre__CapsuleRole': []
          ,'MT_pre__PortConnector': []
          ,'MT_pre__Thread': []
          ,'MT_pre__PhysicalThread': []
          ,'MT_pre__LogicalThread': []
          ,'MT_pre__PortType': []
          ,'MT_pre__BASE0': []
          ,'MT_pre__CONJUGATE1': []
          ,'MT_pre__SignalType': []
          ,'MT_pre__OUT1': []
          ,'MT_pre__IN0': []
          ,'MT_pre__RoleType': []
          ,'MT_pre__FIXED0': []
          ,'MT_pre__OPTIONAL1': []
          ,'MT_pre__PLUGIN2': []
          ,'MT_pre__TransitionType': []
          ,'MT_pre__SIBLING0': []
          ,'MT_pre__IN1': []
          ,'MT_pre__OUT2': []
          ,'MT_pre__Def': []
          ,'MT_pre__Expr': []
          ,'MT_pre__Pattern': []
          ,'MT_pre__Proc': []
          ,'MT_pre__ProcDef': []
          ,'MT_pre__FuncDef': []
          ,'MT_pre__Name': []
          ,'MT_pre__PythonRef': []
          ,'MT_pre__Module': []
          ,'MT_pre__Null': []
          ,'MT_pre__Trigger_T': []
          ,'MT_pre__Listen': []
          ,'MT_pre__ConditionBranch': []
          ,'MT_pre__ListenBranch': []
          ,'MT_pre__Site': []
          ,'MT_pre__Model_T': []
          ,'MT_pre__MatchCase': []
          ,'MT_pre__Condition': []
          ,'MT_pre__New': []
          ,'MT_pre__Delay': []
          ,'MT_pre__Par': []
          ,'MT_pre__ParIndexed': []
          ,'MT_pre__Inst': []
          ,'MT_pre__LocalDef': []
          ,'MT_pre__Seq': []
          ,'MT_pre__ConditionSet': []
          ,'MT_pre__Match': []
          ,'MT_pre__Print': []
          ,'MT_pre__Attribute': []
          ,'MT_pre__Expression': []
          ,'MT_pre__Equation': []
          ,'MT_pre__Operation': []
          ,'MT_pre__Add': []
          ,'MT_pre__Subtract': []
          ,'MT_pre__Concat': []
          ,'MT_pre__Constant': []
          ,'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__paired_with': []
          ,'MT_pre__match_contains': [('0', 'N', 'Destination'), ('0', 'N', 'Destination')]
          ,'MT_pre__apply_contains': []
          ,'MT_pre__directLink_T': []
          ,'MT_pre__directLink_S': [('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__indirectLink_S': [('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__backward_link': [('0', 'N', 'Destination'), ('0', 'N', 'Destination')]
          ,'MT_pre__trace_link': [('0', 'N', 'Destination'), ('0', 'N', 'Destination')]
          ,'MT_pre__hasAttribute_S': [('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__hasAttribute_T': []
          ,'MT_pre__leftExpr': []
          ,'MT_pre__rightExpr': []
          ,'MT_pre__hasArgs': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': [('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination')] }
    self.CardinalityTable['MT_pre__Action']={
          'MT_pre__MatchModel': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__MetaModelElement_S': []
          ,'MT_pre__MetaModelElement_T': []
          ,'MT_pre__Element': []
          ,'MT_pre__NamedElement': []
          ,'MT_pre__Trigger_S': []
          ,'MT_pre__Action': []
          ,'MT_pre__PortRef': []
          ,'MT_pre__PortConnectorRef': []
          ,'MT_pre__StateMachineElement': []
          ,'MT_pre__Protocol': []
          ,'MT_pre__Signal': []
          ,'MT_pre__Port': []
          ,'MT_pre__Vertex': []
          ,'MT_pre__InitialPoint': []
          ,'MT_pre__EntryPoint': []
          ,'MT_pre__ExitPoint': []
          ,'MT_pre__Transition': []
          ,'MT_pre__StateMachine': []
          ,'MT_pre__State': []
          ,'MT_pre__Capsule': []
          ,'MT_pre__PackageContainer': []
          ,'MT_pre__Model_S': []
          ,'MT_pre__Package': []
          ,'MT_pre__CapsuleRole': []
          ,'MT_pre__PortConnector': []
          ,'MT_pre__Thread': []
          ,'MT_pre__PhysicalThread': []
          ,'MT_pre__LogicalThread': []
          ,'MT_pre__PortType': []
          ,'MT_pre__BASE0': []
          ,'MT_pre__CONJUGATE1': []
          ,'MT_pre__SignalType': []
          ,'MT_pre__OUT1': []
          ,'MT_pre__IN0': []
          ,'MT_pre__RoleType': []
          ,'MT_pre__FIXED0': []
          ,'MT_pre__OPTIONAL1': []
          ,'MT_pre__PLUGIN2': []
          ,'MT_pre__TransitionType': []
          ,'MT_pre__SIBLING0': []
          ,'MT_pre__IN1': []
          ,'MT_pre__OUT2': []
          ,'MT_pre__Def': []
          ,'MT_pre__Expr': []
          ,'MT_pre__Pattern': []
          ,'MT_pre__Proc': []
          ,'MT_pre__ProcDef': []
          ,'MT_pre__FuncDef': []
          ,'MT_pre__Name': []
          ,'MT_pre__PythonRef': []
          ,'MT_pre__Module': []
          ,'MT_pre__Null': []
          ,'MT_pre__Trigger_T': []
          ,'MT_pre__Listen': []
          ,'MT_pre__ConditionBranch': []
          ,'MT_pre__ListenBranch': []
          ,'MT_pre__Site': []
          ,'MT_pre__Model_T': []
          ,'MT_pre__MatchCase': []
          ,'MT_pre__Condition': []
          ,'MT_pre__New': []
          ,'MT_pre__Delay': []
          ,'MT_pre__Par': []
          ,'MT_pre__ParIndexed': []
          ,'MT_pre__Inst': []
          ,'MT_pre__LocalDef': []
          ,'MT_pre__Seq': []
          ,'MT_pre__ConditionSet': []
          ,'MT_pre__Match': []
          ,'MT_pre__Print': []
          ,'MT_pre__Attribute': []
          ,'MT_pre__Expression': []
          ,'MT_pre__Equation': []
          ,'MT_pre__Operation': []
          ,'MT_pre__Add': []
          ,'MT_pre__Subtract': []
          ,'MT_pre__Concat': []
          ,'MT_pre__Constant': []
          ,'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__paired_with': []
          ,'MT_pre__match_contains': [('0', 'N', 'Destination'), ('0', 'N', 'Destination')]
          ,'MT_pre__apply_contains': []
          ,'MT_pre__directLink_T': []
          ,'MT_pre__directLink_S': [('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__indirectLink_S': [('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__backward_link': [('0', 'N', 'Destination'), ('0', 'N', 'Destination')]
          ,'MT_pre__trace_link': [('0', 'N', 'Destination'), ('0', 'N', 'Destination')]
          ,'MT_pre__hasAttribute_S': [('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__hasAttribute_T': []
          ,'MT_pre__leftExpr': []
          ,'MT_pre__rightExpr': []
          ,'MT_pre__hasArgs': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': [('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination')] }
    self.CardinalityTable['MT_pre__PortRef']={
          'MT_pre__MatchModel': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__MetaModelElement_S': []
          ,'MT_pre__MetaModelElement_T': []
          ,'MT_pre__Element': []
          ,'MT_pre__NamedElement': []
          ,'MT_pre__Trigger_S': []
          ,'MT_pre__Action': []
          ,'MT_pre__PortRef': []
          ,'MT_pre__PortConnectorRef': []
          ,'MT_pre__StateMachineElement': []
          ,'MT_pre__Protocol': []
          ,'MT_pre__Signal': []
          ,'MT_pre__Port': []
          ,'MT_pre__Vertex': []
          ,'MT_pre__InitialPoint': []
          ,'MT_pre__EntryPoint': []
          ,'MT_pre__ExitPoint': []
          ,'MT_pre__Transition': []
          ,'MT_pre__StateMachine': []
          ,'MT_pre__State': []
          ,'MT_pre__Capsule': []
          ,'MT_pre__PackageContainer': []
          ,'MT_pre__Model_S': []
          ,'MT_pre__Package': []
          ,'MT_pre__CapsuleRole': []
          ,'MT_pre__PortConnector': []
          ,'MT_pre__Thread': []
          ,'MT_pre__PhysicalThread': []
          ,'MT_pre__LogicalThread': []
          ,'MT_pre__PortType': []
          ,'MT_pre__BASE0': []
          ,'MT_pre__CONJUGATE1': []
          ,'MT_pre__SignalType': []
          ,'MT_pre__OUT1': []
          ,'MT_pre__IN0': []
          ,'MT_pre__RoleType': []
          ,'MT_pre__FIXED0': []
          ,'MT_pre__OPTIONAL1': []
          ,'MT_pre__PLUGIN2': []
          ,'MT_pre__TransitionType': []
          ,'MT_pre__SIBLING0': []
          ,'MT_pre__IN1': []
          ,'MT_pre__OUT2': []
          ,'MT_pre__Def': []
          ,'MT_pre__Expr': []
          ,'MT_pre__Pattern': []
          ,'MT_pre__Proc': []
          ,'MT_pre__ProcDef': []
          ,'MT_pre__FuncDef': []
          ,'MT_pre__Name': []
          ,'MT_pre__PythonRef': []
          ,'MT_pre__Module': []
          ,'MT_pre__Null': []
          ,'MT_pre__Trigger_T': []
          ,'MT_pre__Listen': []
          ,'MT_pre__ConditionBranch': []
          ,'MT_pre__ListenBranch': []
          ,'MT_pre__Site': []
          ,'MT_pre__Model_T': []
          ,'MT_pre__MatchCase': []
          ,'MT_pre__Condition': []
          ,'MT_pre__New': []
          ,'MT_pre__Delay': []
          ,'MT_pre__Par': []
          ,'MT_pre__ParIndexed': []
          ,'MT_pre__Inst': []
          ,'MT_pre__LocalDef': []
          ,'MT_pre__Seq': []
          ,'MT_pre__ConditionSet': []
          ,'MT_pre__Match': []
          ,'MT_pre__Print': []
          ,'MT_pre__Attribute': []
          ,'MT_pre__Expression': []
          ,'MT_pre__Equation': []
          ,'MT_pre__Operation': []
          ,'MT_pre__Add': []
          ,'MT_pre__Subtract': []
          ,'MT_pre__Concat': []
          ,'MT_pre__Constant': []
          ,'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__paired_with': []
          ,'MT_pre__match_contains': [('0', 'N', 'Destination'), ('0', 'N', 'Destination')]
          ,'MT_pre__apply_contains': []
          ,'MT_pre__directLink_T': []
          ,'MT_pre__directLink_S': [('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__indirectLink_S': [('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__backward_link': [('0', 'N', 'Destination'), ('0', 'N', 'Destination')]
          ,'MT_pre__trace_link': [('0', 'N', 'Destination'), ('0', 'N', 'Destination')]
          ,'MT_pre__hasAttribute_S': [('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__hasAttribute_T': []
          ,'MT_pre__leftExpr': []
          ,'MT_pre__rightExpr': []
          ,'MT_pre__hasArgs': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': [('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination')] }
    self.CardinalityTable['MT_pre__PortConnectorRef']={
          'MT_pre__MatchModel': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__MetaModelElement_S': []
          ,'MT_pre__MetaModelElement_T': []
          ,'MT_pre__Element': []
          ,'MT_pre__NamedElement': []
          ,'MT_pre__Trigger_S': []
          ,'MT_pre__Action': []
          ,'MT_pre__PortRef': []
          ,'MT_pre__PortConnectorRef': []
          ,'MT_pre__StateMachineElement': []
          ,'MT_pre__Protocol': []
          ,'MT_pre__Signal': []
          ,'MT_pre__Port': []
          ,'MT_pre__Vertex': []
          ,'MT_pre__InitialPoint': []
          ,'MT_pre__EntryPoint': []
          ,'MT_pre__ExitPoint': []
          ,'MT_pre__Transition': []
          ,'MT_pre__StateMachine': []
          ,'MT_pre__State': []
          ,'MT_pre__Capsule': []
          ,'MT_pre__PackageContainer': []
          ,'MT_pre__Model_S': []
          ,'MT_pre__Package': []
          ,'MT_pre__CapsuleRole': []
          ,'MT_pre__PortConnector': []
          ,'MT_pre__Thread': []
          ,'MT_pre__PhysicalThread': []
          ,'MT_pre__LogicalThread': []
          ,'MT_pre__PortType': []
          ,'MT_pre__BASE0': []
          ,'MT_pre__CONJUGATE1': []
          ,'MT_pre__SignalType': []
          ,'MT_pre__OUT1': []
          ,'MT_pre__IN0': []
          ,'MT_pre__RoleType': []
          ,'MT_pre__FIXED0': []
          ,'MT_pre__OPTIONAL1': []
          ,'MT_pre__PLUGIN2': []
          ,'MT_pre__TransitionType': []
          ,'MT_pre__SIBLING0': []
          ,'MT_pre__IN1': []
          ,'MT_pre__OUT2': []
          ,'MT_pre__Def': []
          ,'MT_pre__Expr': []
          ,'MT_pre__Pattern': []
          ,'MT_pre__Proc': []
          ,'MT_pre__ProcDef': []
          ,'MT_pre__FuncDef': []
          ,'MT_pre__Name': []
          ,'MT_pre__PythonRef': []
          ,'MT_pre__Module': []
          ,'MT_pre__Null': []
          ,'MT_pre__Trigger_T': []
          ,'MT_pre__Listen': []
          ,'MT_pre__ConditionBranch': []
          ,'MT_pre__ListenBranch': []
          ,'MT_pre__Site': []
          ,'MT_pre__Model_T': []
          ,'MT_pre__MatchCase': []
          ,'MT_pre__Condition': []
          ,'MT_pre__New': []
          ,'MT_pre__Delay': []
          ,'MT_pre__Par': []
          ,'MT_pre__ParIndexed': []
          ,'MT_pre__Inst': []
          ,'MT_pre__LocalDef': []
          ,'MT_pre__Seq': []
          ,'MT_pre__ConditionSet': []
          ,'MT_pre__Match': []
          ,'MT_pre__Print': []
          ,'MT_pre__Attribute': []
          ,'MT_pre__Expression': []
          ,'MT_pre__Equation': []
          ,'MT_pre__Operation': []
          ,'MT_pre__Add': []
          ,'MT_pre__Subtract': []
          ,'MT_pre__Concat': []
          ,'MT_pre__Constant': []
          ,'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__paired_with': []
          ,'MT_pre__match_contains': [('0', 'N', 'Destination'), ('0', 'N', 'Destination')]
          ,'MT_pre__apply_contains': []
          ,'MT_pre__directLink_T': []
          ,'MT_pre__directLink_S': [('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__indirectLink_S': [('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__backward_link': [('0', 'N', 'Destination'), ('0', 'N', 'Destination')]
          ,'MT_pre__trace_link': [('0', 'N', 'Destination'), ('0', 'N', 'Destination')]
          ,'MT_pre__hasAttribute_S': [('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__hasAttribute_T': []
          ,'MT_pre__leftExpr': []
          ,'MT_pre__rightExpr': []
          ,'MT_pre__hasArgs': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': [('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination')] }
    self.CardinalityTable['MT_pre__StateMachineElement']={
          'MT_pre__MatchModel': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__MetaModelElement_S': []
          ,'MT_pre__MetaModelElement_T': []
          ,'MT_pre__Element': []
          ,'MT_pre__NamedElement': []
          ,'MT_pre__Trigger_S': []
          ,'MT_pre__Action': []
          ,'MT_pre__PortRef': []
          ,'MT_pre__PortConnectorRef': []
          ,'MT_pre__StateMachineElement': []
          ,'MT_pre__Protocol': []
          ,'MT_pre__Signal': []
          ,'MT_pre__Port': []
          ,'MT_pre__Vertex': []
          ,'MT_pre__InitialPoint': []
          ,'MT_pre__EntryPoint': []
          ,'MT_pre__ExitPoint': []
          ,'MT_pre__Transition': []
          ,'MT_pre__StateMachine': []
          ,'MT_pre__State': []
          ,'MT_pre__Capsule': []
          ,'MT_pre__PackageContainer': []
          ,'MT_pre__Model_S': []
          ,'MT_pre__Package': []
          ,'MT_pre__CapsuleRole': []
          ,'MT_pre__PortConnector': []
          ,'MT_pre__Thread': []
          ,'MT_pre__PhysicalThread': []
          ,'MT_pre__LogicalThread': []
          ,'MT_pre__PortType': []
          ,'MT_pre__BASE0': []
          ,'MT_pre__CONJUGATE1': []
          ,'MT_pre__SignalType': []
          ,'MT_pre__OUT1': []
          ,'MT_pre__IN0': []
          ,'MT_pre__RoleType': []
          ,'MT_pre__FIXED0': []
          ,'MT_pre__OPTIONAL1': []
          ,'MT_pre__PLUGIN2': []
          ,'MT_pre__TransitionType': []
          ,'MT_pre__SIBLING0': []
          ,'MT_pre__IN1': []
          ,'MT_pre__OUT2': []
          ,'MT_pre__Def': []
          ,'MT_pre__Expr': []
          ,'MT_pre__Pattern': []
          ,'MT_pre__Proc': []
          ,'MT_pre__ProcDef': []
          ,'MT_pre__FuncDef': []
          ,'MT_pre__Name': []
          ,'MT_pre__PythonRef': []
          ,'MT_pre__Module': []
          ,'MT_pre__Null': []
          ,'MT_pre__Trigger_T': []
          ,'MT_pre__Listen': []
          ,'MT_pre__ConditionBranch': []
          ,'MT_pre__ListenBranch': []
          ,'MT_pre__Site': []
          ,'MT_pre__Model_T': []
          ,'MT_pre__MatchCase': []
          ,'MT_pre__Condition': []
          ,'MT_pre__New': []
          ,'MT_pre__Delay': []
          ,'MT_pre__Par': []
          ,'MT_pre__ParIndexed': []
          ,'MT_pre__Inst': []
          ,'MT_pre__LocalDef': []
          ,'MT_pre__Seq': []
          ,'MT_pre__ConditionSet': []
          ,'MT_pre__Match': []
          ,'MT_pre__Print': []
          ,'MT_pre__Attribute': []
          ,'MT_pre__Expression': []
          ,'MT_pre__Equation': []
          ,'MT_pre__Operation': []
          ,'MT_pre__Add': []
          ,'MT_pre__Subtract': []
          ,'MT_pre__Concat': []
          ,'MT_pre__Constant': []
          ,'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__paired_with': []
          ,'MT_pre__match_contains': [('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination')]
          ,'MT_pre__apply_contains': []
          ,'MT_pre__directLink_T': []
          ,'MT_pre__directLink_S': [('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__indirectLink_S': [('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__backward_link': [('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination')]
          ,'MT_pre__trace_link': [('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination')]
          ,'MT_pre__hasAttribute_S': [('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__hasAttribute_T': []
          ,'MT_pre__leftExpr': []
          ,'MT_pre__rightExpr': []
          ,'MT_pre__hasArgs': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': [('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination')] }
    self.CardinalityTable['MT_pre__Protocol']={
          'MT_pre__MatchModel': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__MetaModelElement_S': []
          ,'MT_pre__MetaModelElement_T': []
          ,'MT_pre__Element': []
          ,'MT_pre__NamedElement': []
          ,'MT_pre__Trigger_S': []
          ,'MT_pre__Action': []
          ,'MT_pre__PortRef': []
          ,'MT_pre__PortConnectorRef': []
          ,'MT_pre__StateMachineElement': []
          ,'MT_pre__Protocol': []
          ,'MT_pre__Signal': []
          ,'MT_pre__Port': []
          ,'MT_pre__Vertex': []
          ,'MT_pre__InitialPoint': []
          ,'MT_pre__EntryPoint': []
          ,'MT_pre__ExitPoint': []
          ,'MT_pre__Transition': []
          ,'MT_pre__StateMachine': []
          ,'MT_pre__State': []
          ,'MT_pre__Capsule': []
          ,'MT_pre__PackageContainer': []
          ,'MT_pre__Model_S': []
          ,'MT_pre__Package': []
          ,'MT_pre__CapsuleRole': []
          ,'MT_pre__PortConnector': []
          ,'MT_pre__Thread': []
          ,'MT_pre__PhysicalThread': []
          ,'MT_pre__LogicalThread': []
          ,'MT_pre__PortType': []
          ,'MT_pre__BASE0': []
          ,'MT_pre__CONJUGATE1': []
          ,'MT_pre__SignalType': []
          ,'MT_pre__OUT1': []
          ,'MT_pre__IN0': []
          ,'MT_pre__RoleType': []
          ,'MT_pre__FIXED0': []
          ,'MT_pre__OPTIONAL1': []
          ,'MT_pre__PLUGIN2': []
          ,'MT_pre__TransitionType': []
          ,'MT_pre__SIBLING0': []
          ,'MT_pre__IN1': []
          ,'MT_pre__OUT2': []
          ,'MT_pre__Def': []
          ,'MT_pre__Expr': []
          ,'MT_pre__Pattern': []
          ,'MT_pre__Proc': []
          ,'MT_pre__ProcDef': []
          ,'MT_pre__FuncDef': []
          ,'MT_pre__Name': []
          ,'MT_pre__PythonRef': []
          ,'MT_pre__Module': []
          ,'MT_pre__Null': []
          ,'MT_pre__Trigger_T': []
          ,'MT_pre__Listen': []
          ,'MT_pre__ConditionBranch': []
          ,'MT_pre__ListenBranch': []
          ,'MT_pre__Site': []
          ,'MT_pre__Model_T': []
          ,'MT_pre__MatchCase': []
          ,'MT_pre__Condition': []
          ,'MT_pre__New': []
          ,'MT_pre__Delay': []
          ,'MT_pre__Par': []
          ,'MT_pre__ParIndexed': []
          ,'MT_pre__Inst': []
          ,'MT_pre__LocalDef': []
          ,'MT_pre__Seq': []
          ,'MT_pre__ConditionSet': []
          ,'MT_pre__Match': []
          ,'MT_pre__Print': []
          ,'MT_pre__Attribute': []
          ,'MT_pre__Expression': []
          ,'MT_pre__Equation': []
          ,'MT_pre__Operation': []
          ,'MT_pre__Add': []
          ,'MT_pre__Subtract': []
          ,'MT_pre__Concat': []
          ,'MT_pre__Constant': []
          ,'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__paired_with': []
          ,'MT_pre__match_contains': [('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination')]
          ,'MT_pre__apply_contains': []
          ,'MT_pre__directLink_T': []
          ,'MT_pre__directLink_S': [('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__indirectLink_S': [('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__backward_link': [('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination')]
          ,'MT_pre__trace_link': [('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination')]
          ,'MT_pre__hasAttribute_S': [('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__hasAttribute_T': []
          ,'MT_pre__leftExpr': []
          ,'MT_pre__rightExpr': []
          ,'MT_pre__hasArgs': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': [('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination')] }
    self.CardinalityTable['MT_pre__Signal']={
          'MT_pre__MatchModel': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__MetaModelElement_S': []
          ,'MT_pre__MetaModelElement_T': []
          ,'MT_pre__Element': []
          ,'MT_pre__NamedElement': []
          ,'MT_pre__Trigger_S': []
          ,'MT_pre__Action': []
          ,'MT_pre__PortRef': []
          ,'MT_pre__PortConnectorRef': []
          ,'MT_pre__StateMachineElement': []
          ,'MT_pre__Protocol': []
          ,'MT_pre__Signal': []
          ,'MT_pre__Port': []
          ,'MT_pre__Vertex': []
          ,'MT_pre__InitialPoint': []
          ,'MT_pre__EntryPoint': []
          ,'MT_pre__ExitPoint': []
          ,'MT_pre__Transition': []
          ,'MT_pre__StateMachine': []
          ,'MT_pre__State': []
          ,'MT_pre__Capsule': []
          ,'MT_pre__PackageContainer': []
          ,'MT_pre__Model_S': []
          ,'MT_pre__Package': []
          ,'MT_pre__CapsuleRole': []
          ,'MT_pre__PortConnector': []
          ,'MT_pre__Thread': []
          ,'MT_pre__PhysicalThread': []
          ,'MT_pre__LogicalThread': []
          ,'MT_pre__PortType': []
          ,'MT_pre__BASE0': []
          ,'MT_pre__CONJUGATE1': []
          ,'MT_pre__SignalType': []
          ,'MT_pre__OUT1': []
          ,'MT_pre__IN0': []
          ,'MT_pre__RoleType': []
          ,'MT_pre__FIXED0': []
          ,'MT_pre__OPTIONAL1': []
          ,'MT_pre__PLUGIN2': []
          ,'MT_pre__TransitionType': []
          ,'MT_pre__SIBLING0': []
          ,'MT_pre__IN1': []
          ,'MT_pre__OUT2': []
          ,'MT_pre__Def': []
          ,'MT_pre__Expr': []
          ,'MT_pre__Pattern': []
          ,'MT_pre__Proc': []
          ,'MT_pre__ProcDef': []
          ,'MT_pre__FuncDef': []
          ,'MT_pre__Name': []
          ,'MT_pre__PythonRef': []
          ,'MT_pre__Module': []
          ,'MT_pre__Null': []
          ,'MT_pre__Trigger_T': []
          ,'MT_pre__Listen': []
          ,'MT_pre__ConditionBranch': []
          ,'MT_pre__ListenBranch': []
          ,'MT_pre__Site': []
          ,'MT_pre__Model_T': []
          ,'MT_pre__MatchCase': []
          ,'MT_pre__Condition': []
          ,'MT_pre__New': []
          ,'MT_pre__Delay': []
          ,'MT_pre__Par': []
          ,'MT_pre__ParIndexed': []
          ,'MT_pre__Inst': []
          ,'MT_pre__LocalDef': []
          ,'MT_pre__Seq': []
          ,'MT_pre__ConditionSet': []
          ,'MT_pre__Match': []
          ,'MT_pre__Print': []
          ,'MT_pre__Attribute': []
          ,'MT_pre__Expression': []
          ,'MT_pre__Equation': []
          ,'MT_pre__Operation': []
          ,'MT_pre__Add': []
          ,'MT_pre__Subtract': []
          ,'MT_pre__Concat': []
          ,'MT_pre__Constant': []
          ,'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__paired_with': []
          ,'MT_pre__match_contains': [('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination')]
          ,'MT_pre__apply_contains': []
          ,'MT_pre__directLink_T': []
          ,'MT_pre__directLink_S': [('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__indirectLink_S': [('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__backward_link': [('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination')]
          ,'MT_pre__trace_link': [('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination')]
          ,'MT_pre__hasAttribute_S': [('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__hasAttribute_T': []
          ,'MT_pre__leftExpr': []
          ,'MT_pre__rightExpr': []
          ,'MT_pre__hasArgs': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': [('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination')] }
    self.CardinalityTable['MT_pre__Port']={
          'MT_pre__MatchModel': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__MetaModelElement_S': []
          ,'MT_pre__MetaModelElement_T': []
          ,'MT_pre__Element': []
          ,'MT_pre__NamedElement': []
          ,'MT_pre__Trigger_S': []
          ,'MT_pre__Action': []
          ,'MT_pre__PortRef': []
          ,'MT_pre__PortConnectorRef': []
          ,'MT_pre__StateMachineElement': []
          ,'MT_pre__Protocol': []
          ,'MT_pre__Signal': []
          ,'MT_pre__Port': []
          ,'MT_pre__Vertex': []
          ,'MT_pre__InitialPoint': []
          ,'MT_pre__EntryPoint': []
          ,'MT_pre__ExitPoint': []
          ,'MT_pre__Transition': []
          ,'MT_pre__StateMachine': []
          ,'MT_pre__State': []
          ,'MT_pre__Capsule': []
          ,'MT_pre__PackageContainer': []
          ,'MT_pre__Model_S': []
          ,'MT_pre__Package': []
          ,'MT_pre__CapsuleRole': []
          ,'MT_pre__PortConnector': []
          ,'MT_pre__Thread': []
          ,'MT_pre__PhysicalThread': []
          ,'MT_pre__LogicalThread': []
          ,'MT_pre__PortType': []
          ,'MT_pre__BASE0': []
          ,'MT_pre__CONJUGATE1': []
          ,'MT_pre__SignalType': []
          ,'MT_pre__OUT1': []
          ,'MT_pre__IN0': []
          ,'MT_pre__RoleType': []
          ,'MT_pre__FIXED0': []
          ,'MT_pre__OPTIONAL1': []
          ,'MT_pre__PLUGIN2': []
          ,'MT_pre__TransitionType': []
          ,'MT_pre__SIBLING0': []
          ,'MT_pre__IN1': []
          ,'MT_pre__OUT2': []
          ,'MT_pre__Def': []
          ,'MT_pre__Expr': []
          ,'MT_pre__Pattern': []
          ,'MT_pre__Proc': []
          ,'MT_pre__ProcDef': []
          ,'MT_pre__FuncDef': []
          ,'MT_pre__Name': []
          ,'MT_pre__PythonRef': []
          ,'MT_pre__Module': []
          ,'MT_pre__Null': []
          ,'MT_pre__Trigger_T': []
          ,'MT_pre__Listen': []
          ,'MT_pre__ConditionBranch': []
          ,'MT_pre__ListenBranch': []
          ,'MT_pre__Site': []
          ,'MT_pre__Model_T': []
          ,'MT_pre__MatchCase': []
          ,'MT_pre__Condition': []
          ,'MT_pre__New': []
          ,'MT_pre__Delay': []
          ,'MT_pre__Par': []
          ,'MT_pre__ParIndexed': []
          ,'MT_pre__Inst': []
          ,'MT_pre__LocalDef': []
          ,'MT_pre__Seq': []
          ,'MT_pre__ConditionSet': []
          ,'MT_pre__Match': []
          ,'MT_pre__Print': []
          ,'MT_pre__Attribute': []
          ,'MT_pre__Expression': []
          ,'MT_pre__Equation': []
          ,'MT_pre__Operation': []
          ,'MT_pre__Add': []
          ,'MT_pre__Subtract': []
          ,'MT_pre__Concat': []
          ,'MT_pre__Constant': []
          ,'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__paired_with': []
          ,'MT_pre__match_contains': [('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination')]
          ,'MT_pre__apply_contains': []
          ,'MT_pre__directLink_T': []
          ,'MT_pre__directLink_S': [('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__indirectLink_S': [('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__backward_link': [('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination')]
          ,'MT_pre__trace_link': [('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination')]
          ,'MT_pre__hasAttribute_S': [('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__hasAttribute_T': []
          ,'MT_pre__leftExpr': []
          ,'MT_pre__rightExpr': []
          ,'MT_pre__hasArgs': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': [('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination')] }
    self.CardinalityTable['MT_pre__Vertex']={
          'MT_pre__MatchModel': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__MetaModelElement_S': []
          ,'MT_pre__MetaModelElement_T': []
          ,'MT_pre__Element': []
          ,'MT_pre__NamedElement': []
          ,'MT_pre__Trigger_S': []
          ,'MT_pre__Action': []
          ,'MT_pre__PortRef': []
          ,'MT_pre__PortConnectorRef': []
          ,'MT_pre__StateMachineElement': []
          ,'MT_pre__Protocol': []
          ,'MT_pre__Signal': []
          ,'MT_pre__Port': []
          ,'MT_pre__Vertex': []
          ,'MT_pre__InitialPoint': []
          ,'MT_pre__EntryPoint': []
          ,'MT_pre__ExitPoint': []
          ,'MT_pre__Transition': []
          ,'MT_pre__StateMachine': []
          ,'MT_pre__State': []
          ,'MT_pre__Capsule': []
          ,'MT_pre__PackageContainer': []
          ,'MT_pre__Model_S': []
          ,'MT_pre__Package': []
          ,'MT_pre__CapsuleRole': []
          ,'MT_pre__PortConnector': []
          ,'MT_pre__Thread': []
          ,'MT_pre__PhysicalThread': []
          ,'MT_pre__LogicalThread': []
          ,'MT_pre__PortType': []
          ,'MT_pre__BASE0': []
          ,'MT_pre__CONJUGATE1': []
          ,'MT_pre__SignalType': []
          ,'MT_pre__OUT1': []
          ,'MT_pre__IN0': []
          ,'MT_pre__RoleType': []
          ,'MT_pre__FIXED0': []
          ,'MT_pre__OPTIONAL1': []
          ,'MT_pre__PLUGIN2': []
          ,'MT_pre__TransitionType': []
          ,'MT_pre__SIBLING0': []
          ,'MT_pre__IN1': []
          ,'MT_pre__OUT2': []
          ,'MT_pre__Def': []
          ,'MT_pre__Expr': []
          ,'MT_pre__Pattern': []
          ,'MT_pre__Proc': []
          ,'MT_pre__ProcDef': []
          ,'MT_pre__FuncDef': []
          ,'MT_pre__Name': []
          ,'MT_pre__PythonRef': []
          ,'MT_pre__Module': []
          ,'MT_pre__Null': []
          ,'MT_pre__Trigger_T': []
          ,'MT_pre__Listen': []
          ,'MT_pre__ConditionBranch': []
          ,'MT_pre__ListenBranch': []
          ,'MT_pre__Site': []
          ,'MT_pre__Model_T': []
          ,'MT_pre__MatchCase': []
          ,'MT_pre__Condition': []
          ,'MT_pre__New': []
          ,'MT_pre__Delay': []
          ,'MT_pre__Par': []
          ,'MT_pre__ParIndexed': []
          ,'MT_pre__Inst': []
          ,'MT_pre__LocalDef': []
          ,'MT_pre__Seq': []
          ,'MT_pre__ConditionSet': []
          ,'MT_pre__Match': []
          ,'MT_pre__Print': []
          ,'MT_pre__Attribute': []
          ,'MT_pre__Expression': []
          ,'MT_pre__Equation': []
          ,'MT_pre__Operation': []
          ,'MT_pre__Add': []
          ,'MT_pre__Subtract': []
          ,'MT_pre__Concat': []
          ,'MT_pre__Constant': []
          ,'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__paired_with': []
          ,'MT_pre__match_contains': [('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination')]
          ,'MT_pre__apply_contains': []
          ,'MT_pre__directLink_T': []
          ,'MT_pre__directLink_S': [('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__indirectLink_S': [('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__backward_link': [('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination')]
          ,'MT_pre__trace_link': [('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination')]
          ,'MT_pre__hasAttribute_S': [('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__hasAttribute_T': []
          ,'MT_pre__leftExpr': []
          ,'MT_pre__rightExpr': []
          ,'MT_pre__hasArgs': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': [('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination')] }
    self.CardinalityTable['MT_pre__InitialPoint']={
          'MT_pre__MatchModel': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__MetaModelElement_S': []
          ,'MT_pre__MetaModelElement_T': []
          ,'MT_pre__Element': []
          ,'MT_pre__NamedElement': []
          ,'MT_pre__Trigger_S': []
          ,'MT_pre__Action': []
          ,'MT_pre__PortRef': []
          ,'MT_pre__PortConnectorRef': []
          ,'MT_pre__StateMachineElement': []
          ,'MT_pre__Protocol': []
          ,'MT_pre__Signal': []
          ,'MT_pre__Port': []
          ,'MT_pre__Vertex': []
          ,'MT_pre__InitialPoint': []
          ,'MT_pre__EntryPoint': []
          ,'MT_pre__ExitPoint': []
          ,'MT_pre__Transition': []
          ,'MT_pre__StateMachine': []
          ,'MT_pre__State': []
          ,'MT_pre__Capsule': []
          ,'MT_pre__PackageContainer': []
          ,'MT_pre__Model_S': []
          ,'MT_pre__Package': []
          ,'MT_pre__CapsuleRole': []
          ,'MT_pre__PortConnector': []
          ,'MT_pre__Thread': []
          ,'MT_pre__PhysicalThread': []
          ,'MT_pre__LogicalThread': []
          ,'MT_pre__PortType': []
          ,'MT_pre__BASE0': []
          ,'MT_pre__CONJUGATE1': []
          ,'MT_pre__SignalType': []
          ,'MT_pre__OUT1': []
          ,'MT_pre__IN0': []
          ,'MT_pre__RoleType': []
          ,'MT_pre__FIXED0': []
          ,'MT_pre__OPTIONAL1': []
          ,'MT_pre__PLUGIN2': []
          ,'MT_pre__TransitionType': []
          ,'MT_pre__SIBLING0': []
          ,'MT_pre__IN1': []
          ,'MT_pre__OUT2': []
          ,'MT_pre__Def': []
          ,'MT_pre__Expr': []
          ,'MT_pre__Pattern': []
          ,'MT_pre__Proc': []
          ,'MT_pre__ProcDef': []
          ,'MT_pre__FuncDef': []
          ,'MT_pre__Name': []
          ,'MT_pre__PythonRef': []
          ,'MT_pre__Module': []
          ,'MT_pre__Null': []
          ,'MT_pre__Trigger_T': []
          ,'MT_pre__Listen': []
          ,'MT_pre__ConditionBranch': []
          ,'MT_pre__ListenBranch': []
          ,'MT_pre__Site': []
          ,'MT_pre__Model_T': []
          ,'MT_pre__MatchCase': []
          ,'MT_pre__Condition': []
          ,'MT_pre__New': []
          ,'MT_pre__Delay': []
          ,'MT_pre__Par': []
          ,'MT_pre__ParIndexed': []
          ,'MT_pre__Inst': []
          ,'MT_pre__LocalDef': []
          ,'MT_pre__Seq': []
          ,'MT_pre__ConditionSet': []
          ,'MT_pre__Match': []
          ,'MT_pre__Print': []
          ,'MT_pre__Attribute': []
          ,'MT_pre__Expression': []
          ,'MT_pre__Equation': []
          ,'MT_pre__Operation': []
          ,'MT_pre__Add': []
          ,'MT_pre__Subtract': []
          ,'MT_pre__Concat': []
          ,'MT_pre__Constant': []
          ,'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__paired_with': []
          ,'MT_pre__match_contains': [('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination')]
          ,'MT_pre__apply_contains': []
          ,'MT_pre__directLink_T': []
          ,'MT_pre__directLink_S': [('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__indirectLink_S': [('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__backward_link': [('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination')]
          ,'MT_pre__trace_link': [('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination')]
          ,'MT_pre__hasAttribute_S': [('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__hasAttribute_T': []
          ,'MT_pre__leftExpr': []
          ,'MT_pre__rightExpr': []
          ,'MT_pre__hasArgs': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': [('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination')] }
    self.CardinalityTable['MT_pre__EntryPoint']={
          'MT_pre__MatchModel': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__MetaModelElement_S': []
          ,'MT_pre__MetaModelElement_T': []
          ,'MT_pre__Element': []
          ,'MT_pre__NamedElement': []
          ,'MT_pre__Trigger_S': []
          ,'MT_pre__Action': []
          ,'MT_pre__PortRef': []
          ,'MT_pre__PortConnectorRef': []
          ,'MT_pre__StateMachineElement': []
          ,'MT_pre__Protocol': []
          ,'MT_pre__Signal': []
          ,'MT_pre__Port': []
          ,'MT_pre__Vertex': []
          ,'MT_pre__InitialPoint': []
          ,'MT_pre__EntryPoint': []
          ,'MT_pre__ExitPoint': []
          ,'MT_pre__Transition': []
          ,'MT_pre__StateMachine': []
          ,'MT_pre__State': []
          ,'MT_pre__Capsule': []
          ,'MT_pre__PackageContainer': []
          ,'MT_pre__Model_S': []
          ,'MT_pre__Package': []
          ,'MT_pre__CapsuleRole': []
          ,'MT_pre__PortConnector': []
          ,'MT_pre__Thread': []
          ,'MT_pre__PhysicalThread': []
          ,'MT_pre__LogicalThread': []
          ,'MT_pre__PortType': []
          ,'MT_pre__BASE0': []
          ,'MT_pre__CONJUGATE1': []
          ,'MT_pre__SignalType': []
          ,'MT_pre__OUT1': []
          ,'MT_pre__IN0': []
          ,'MT_pre__RoleType': []
          ,'MT_pre__FIXED0': []
          ,'MT_pre__OPTIONAL1': []
          ,'MT_pre__PLUGIN2': []
          ,'MT_pre__TransitionType': []
          ,'MT_pre__SIBLING0': []
          ,'MT_pre__IN1': []
          ,'MT_pre__OUT2': []
          ,'MT_pre__Def': []
          ,'MT_pre__Expr': []
          ,'MT_pre__Pattern': []
          ,'MT_pre__Proc': []
          ,'MT_pre__ProcDef': []
          ,'MT_pre__FuncDef': []
          ,'MT_pre__Name': []
          ,'MT_pre__PythonRef': []
          ,'MT_pre__Module': []
          ,'MT_pre__Null': []
          ,'MT_pre__Trigger_T': []
          ,'MT_pre__Listen': []
          ,'MT_pre__ConditionBranch': []
          ,'MT_pre__ListenBranch': []
          ,'MT_pre__Site': []
          ,'MT_pre__Model_T': []
          ,'MT_pre__MatchCase': []
          ,'MT_pre__Condition': []
          ,'MT_pre__New': []
          ,'MT_pre__Delay': []
          ,'MT_pre__Par': []
          ,'MT_pre__ParIndexed': []
          ,'MT_pre__Inst': []
          ,'MT_pre__LocalDef': []
          ,'MT_pre__Seq': []
          ,'MT_pre__ConditionSet': []
          ,'MT_pre__Match': []
          ,'MT_pre__Print': []
          ,'MT_pre__Attribute': []
          ,'MT_pre__Expression': []
          ,'MT_pre__Equation': []
          ,'MT_pre__Operation': []
          ,'MT_pre__Add': []
          ,'MT_pre__Subtract': []
          ,'MT_pre__Concat': []
          ,'MT_pre__Constant': []
          ,'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__paired_with': []
          ,'MT_pre__match_contains': [('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination')]
          ,'MT_pre__apply_contains': []
          ,'MT_pre__directLink_T': []
          ,'MT_pre__directLink_S': [('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__indirectLink_S': [('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__backward_link': [('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination')]
          ,'MT_pre__trace_link': [('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination')]
          ,'MT_pre__hasAttribute_S': [('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__hasAttribute_T': []
          ,'MT_pre__leftExpr': []
          ,'MT_pre__rightExpr': []
          ,'MT_pre__hasArgs': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': [('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination')] }
    self.CardinalityTable['MT_pre__ExitPoint']={
          'MT_pre__MatchModel': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__MetaModelElement_S': []
          ,'MT_pre__MetaModelElement_T': []
          ,'MT_pre__Element': []
          ,'MT_pre__NamedElement': []
          ,'MT_pre__Trigger_S': []
          ,'MT_pre__Action': []
          ,'MT_pre__PortRef': []
          ,'MT_pre__PortConnectorRef': []
          ,'MT_pre__StateMachineElement': []
          ,'MT_pre__Protocol': []
          ,'MT_pre__Signal': []
          ,'MT_pre__Port': []
          ,'MT_pre__Vertex': []
          ,'MT_pre__InitialPoint': []
          ,'MT_pre__EntryPoint': []
          ,'MT_pre__ExitPoint': []
          ,'MT_pre__Transition': []
          ,'MT_pre__StateMachine': []
          ,'MT_pre__State': []
          ,'MT_pre__Capsule': []
          ,'MT_pre__PackageContainer': []
          ,'MT_pre__Model_S': []
          ,'MT_pre__Package': []
          ,'MT_pre__CapsuleRole': []
          ,'MT_pre__PortConnector': []
          ,'MT_pre__Thread': []
          ,'MT_pre__PhysicalThread': []
          ,'MT_pre__LogicalThread': []
          ,'MT_pre__PortType': []
          ,'MT_pre__BASE0': []
          ,'MT_pre__CONJUGATE1': []
          ,'MT_pre__SignalType': []
          ,'MT_pre__OUT1': []
          ,'MT_pre__IN0': []
          ,'MT_pre__RoleType': []
          ,'MT_pre__FIXED0': []
          ,'MT_pre__OPTIONAL1': []
          ,'MT_pre__PLUGIN2': []
          ,'MT_pre__TransitionType': []
          ,'MT_pre__SIBLING0': []
          ,'MT_pre__IN1': []
          ,'MT_pre__OUT2': []
          ,'MT_pre__Def': []
          ,'MT_pre__Expr': []
          ,'MT_pre__Pattern': []
          ,'MT_pre__Proc': []
          ,'MT_pre__ProcDef': []
          ,'MT_pre__FuncDef': []
          ,'MT_pre__Name': []
          ,'MT_pre__PythonRef': []
          ,'MT_pre__Module': []
          ,'MT_pre__Null': []
          ,'MT_pre__Trigger_T': []
          ,'MT_pre__Listen': []
          ,'MT_pre__ConditionBranch': []
          ,'MT_pre__ListenBranch': []
          ,'MT_pre__Site': []
          ,'MT_pre__Model_T': []
          ,'MT_pre__MatchCase': []
          ,'MT_pre__Condition': []
          ,'MT_pre__New': []
          ,'MT_pre__Delay': []
          ,'MT_pre__Par': []
          ,'MT_pre__ParIndexed': []
          ,'MT_pre__Inst': []
          ,'MT_pre__LocalDef': []
          ,'MT_pre__Seq': []
          ,'MT_pre__ConditionSet': []
          ,'MT_pre__Match': []
          ,'MT_pre__Print': []
          ,'MT_pre__Attribute': []
          ,'MT_pre__Expression': []
          ,'MT_pre__Equation': []
          ,'MT_pre__Operation': []
          ,'MT_pre__Add': []
          ,'MT_pre__Subtract': []
          ,'MT_pre__Concat': []
          ,'MT_pre__Constant': []
          ,'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__paired_with': []
          ,'MT_pre__match_contains': [('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination')]
          ,'MT_pre__apply_contains': []
          ,'MT_pre__directLink_T': []
          ,'MT_pre__directLink_S': [('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__indirectLink_S': [('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__backward_link': [('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination')]
          ,'MT_pre__trace_link': [('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination')]
          ,'MT_pre__hasAttribute_S': [('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__hasAttribute_T': []
          ,'MT_pre__leftExpr': []
          ,'MT_pre__rightExpr': []
          ,'MT_pre__hasArgs': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': [('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination')] }
    self.CardinalityTable['MT_pre__Transition']={
          'MT_pre__MatchModel': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__MetaModelElement_S': []
          ,'MT_pre__MetaModelElement_T': []
          ,'MT_pre__Element': []
          ,'MT_pre__NamedElement': []
          ,'MT_pre__Trigger_S': []
          ,'MT_pre__Action': []
          ,'MT_pre__PortRef': []
          ,'MT_pre__PortConnectorRef': []
          ,'MT_pre__StateMachineElement': []
          ,'MT_pre__Protocol': []
          ,'MT_pre__Signal': []
          ,'MT_pre__Port': []
          ,'MT_pre__Vertex': []
          ,'MT_pre__InitialPoint': []
          ,'MT_pre__EntryPoint': []
          ,'MT_pre__ExitPoint': []
          ,'MT_pre__Transition': []
          ,'MT_pre__StateMachine': []
          ,'MT_pre__State': []
          ,'MT_pre__Capsule': []
          ,'MT_pre__PackageContainer': []
          ,'MT_pre__Model_S': []
          ,'MT_pre__Package': []
          ,'MT_pre__CapsuleRole': []
          ,'MT_pre__PortConnector': []
          ,'MT_pre__Thread': []
          ,'MT_pre__PhysicalThread': []
          ,'MT_pre__LogicalThread': []
          ,'MT_pre__PortType': []
          ,'MT_pre__BASE0': []
          ,'MT_pre__CONJUGATE1': []
          ,'MT_pre__SignalType': []
          ,'MT_pre__OUT1': []
          ,'MT_pre__IN0': []
          ,'MT_pre__RoleType': []
          ,'MT_pre__FIXED0': []
          ,'MT_pre__OPTIONAL1': []
          ,'MT_pre__PLUGIN2': []
          ,'MT_pre__TransitionType': []
          ,'MT_pre__SIBLING0': []
          ,'MT_pre__IN1': []
          ,'MT_pre__OUT2': []
          ,'MT_pre__Def': []
          ,'MT_pre__Expr': []
          ,'MT_pre__Pattern': []
          ,'MT_pre__Proc': []
          ,'MT_pre__ProcDef': []
          ,'MT_pre__FuncDef': []
          ,'MT_pre__Name': []
          ,'MT_pre__PythonRef': []
          ,'MT_pre__Module': []
          ,'MT_pre__Null': []
          ,'MT_pre__Trigger_T': []
          ,'MT_pre__Listen': []
          ,'MT_pre__ConditionBranch': []
          ,'MT_pre__ListenBranch': []
          ,'MT_pre__Site': []
          ,'MT_pre__Model_T': []
          ,'MT_pre__MatchCase': []
          ,'MT_pre__Condition': []
          ,'MT_pre__New': []
          ,'MT_pre__Delay': []
          ,'MT_pre__Par': []
          ,'MT_pre__ParIndexed': []
          ,'MT_pre__Inst': []
          ,'MT_pre__LocalDef': []
          ,'MT_pre__Seq': []
          ,'MT_pre__ConditionSet': []
          ,'MT_pre__Match': []
          ,'MT_pre__Print': []
          ,'MT_pre__Attribute': []
          ,'MT_pre__Expression': []
          ,'MT_pre__Equation': []
          ,'MT_pre__Operation': []
          ,'MT_pre__Add': []
          ,'MT_pre__Subtract': []
          ,'MT_pre__Concat': []
          ,'MT_pre__Constant': []
          ,'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__paired_with': []
          ,'MT_pre__match_contains': [('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination')]
          ,'MT_pre__apply_contains': []
          ,'MT_pre__directLink_T': []
          ,'MT_pre__directLink_S': [('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__indirectLink_S': [('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__backward_link': [('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination')]
          ,'MT_pre__trace_link': [('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination')]
          ,'MT_pre__hasAttribute_S': [('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__hasAttribute_T': []
          ,'MT_pre__leftExpr': []
          ,'MT_pre__rightExpr': []
          ,'MT_pre__hasArgs': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': [('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination')] }
    self.CardinalityTable['MT_pre__StateMachine']={
          'MT_pre__MatchModel': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__MetaModelElement_S': []
          ,'MT_pre__MetaModelElement_T': []
          ,'MT_pre__Element': []
          ,'MT_pre__NamedElement': []
          ,'MT_pre__Trigger_S': []
          ,'MT_pre__Action': []
          ,'MT_pre__PortRef': []
          ,'MT_pre__PortConnectorRef': []
          ,'MT_pre__StateMachineElement': []
          ,'MT_pre__Protocol': []
          ,'MT_pre__Signal': []
          ,'MT_pre__Port': []
          ,'MT_pre__Vertex': []
          ,'MT_pre__InitialPoint': []
          ,'MT_pre__EntryPoint': []
          ,'MT_pre__ExitPoint': []
          ,'MT_pre__Transition': []
          ,'MT_pre__StateMachine': []
          ,'MT_pre__State': []
          ,'MT_pre__Capsule': []
          ,'MT_pre__PackageContainer': []
          ,'MT_pre__Model_S': []
          ,'MT_pre__Package': []
          ,'MT_pre__CapsuleRole': []
          ,'MT_pre__PortConnector': []
          ,'MT_pre__Thread': []
          ,'MT_pre__PhysicalThread': []
          ,'MT_pre__LogicalThread': []
          ,'MT_pre__PortType': []
          ,'MT_pre__BASE0': []
          ,'MT_pre__CONJUGATE1': []
          ,'MT_pre__SignalType': []
          ,'MT_pre__OUT1': []
          ,'MT_pre__IN0': []
          ,'MT_pre__RoleType': []
          ,'MT_pre__FIXED0': []
          ,'MT_pre__OPTIONAL1': []
          ,'MT_pre__PLUGIN2': []
          ,'MT_pre__TransitionType': []
          ,'MT_pre__SIBLING0': []
          ,'MT_pre__IN1': []
          ,'MT_pre__OUT2': []
          ,'MT_pre__Def': []
          ,'MT_pre__Expr': []
          ,'MT_pre__Pattern': []
          ,'MT_pre__Proc': []
          ,'MT_pre__ProcDef': []
          ,'MT_pre__FuncDef': []
          ,'MT_pre__Name': []
          ,'MT_pre__PythonRef': []
          ,'MT_pre__Module': []
          ,'MT_pre__Null': []
          ,'MT_pre__Trigger_T': []
          ,'MT_pre__Listen': []
          ,'MT_pre__ConditionBranch': []
          ,'MT_pre__ListenBranch': []
          ,'MT_pre__Site': []
          ,'MT_pre__Model_T': []
          ,'MT_pre__MatchCase': []
          ,'MT_pre__Condition': []
          ,'MT_pre__New': []
          ,'MT_pre__Delay': []
          ,'MT_pre__Par': []
          ,'MT_pre__ParIndexed': []
          ,'MT_pre__Inst': []
          ,'MT_pre__LocalDef': []
          ,'MT_pre__Seq': []
          ,'MT_pre__ConditionSet': []
          ,'MT_pre__Match': []
          ,'MT_pre__Print': []
          ,'MT_pre__Attribute': []
          ,'MT_pre__Expression': []
          ,'MT_pre__Equation': []
          ,'MT_pre__Operation': []
          ,'MT_pre__Add': []
          ,'MT_pre__Subtract': []
          ,'MT_pre__Concat': []
          ,'MT_pre__Constant': []
          ,'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__paired_with': []
          ,'MT_pre__match_contains': [('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination')]
          ,'MT_pre__apply_contains': []
          ,'MT_pre__directLink_T': []
          ,'MT_pre__directLink_S': [('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__indirectLink_S': [('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__backward_link': [('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination')]
          ,'MT_pre__trace_link': [('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination')]
          ,'MT_pre__hasAttribute_S': [('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__hasAttribute_T': []
          ,'MT_pre__leftExpr': []
          ,'MT_pre__rightExpr': []
          ,'MT_pre__hasArgs': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': [('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination')] }
    self.CardinalityTable['MT_pre__State']={
          'MT_pre__MatchModel': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__MetaModelElement_S': []
          ,'MT_pre__MetaModelElement_T': []
          ,'MT_pre__Element': []
          ,'MT_pre__NamedElement': []
          ,'MT_pre__Trigger_S': []
          ,'MT_pre__Action': []
          ,'MT_pre__PortRef': []
          ,'MT_pre__PortConnectorRef': []
          ,'MT_pre__StateMachineElement': []
          ,'MT_pre__Protocol': []
          ,'MT_pre__Signal': []
          ,'MT_pre__Port': []
          ,'MT_pre__Vertex': []
          ,'MT_pre__InitialPoint': []
          ,'MT_pre__EntryPoint': []
          ,'MT_pre__ExitPoint': []
          ,'MT_pre__Transition': []
          ,'MT_pre__StateMachine': []
          ,'MT_pre__State': []
          ,'MT_pre__Capsule': []
          ,'MT_pre__PackageContainer': []
          ,'MT_pre__Model_S': []
          ,'MT_pre__Package': []
          ,'MT_pre__CapsuleRole': []
          ,'MT_pre__PortConnector': []
          ,'MT_pre__Thread': []
          ,'MT_pre__PhysicalThread': []
          ,'MT_pre__LogicalThread': []
          ,'MT_pre__PortType': []
          ,'MT_pre__BASE0': []
          ,'MT_pre__CONJUGATE1': []
          ,'MT_pre__SignalType': []
          ,'MT_pre__OUT1': []
          ,'MT_pre__IN0': []
          ,'MT_pre__RoleType': []
          ,'MT_pre__FIXED0': []
          ,'MT_pre__OPTIONAL1': []
          ,'MT_pre__PLUGIN2': []
          ,'MT_pre__TransitionType': []
          ,'MT_pre__SIBLING0': []
          ,'MT_pre__IN1': []
          ,'MT_pre__OUT2': []
          ,'MT_pre__Def': []
          ,'MT_pre__Expr': []
          ,'MT_pre__Pattern': []
          ,'MT_pre__Proc': []
          ,'MT_pre__ProcDef': []
          ,'MT_pre__FuncDef': []
          ,'MT_pre__Name': []
          ,'MT_pre__PythonRef': []
          ,'MT_pre__Module': []
          ,'MT_pre__Null': []
          ,'MT_pre__Trigger_T': []
          ,'MT_pre__Listen': []
          ,'MT_pre__ConditionBranch': []
          ,'MT_pre__ListenBranch': []
          ,'MT_pre__Site': []
          ,'MT_pre__Model_T': []
          ,'MT_pre__MatchCase': []
          ,'MT_pre__Condition': []
          ,'MT_pre__New': []
          ,'MT_pre__Delay': []
          ,'MT_pre__Par': []
          ,'MT_pre__ParIndexed': []
          ,'MT_pre__Inst': []
          ,'MT_pre__LocalDef': []
          ,'MT_pre__Seq': []
          ,'MT_pre__ConditionSet': []
          ,'MT_pre__Match': []
          ,'MT_pre__Print': []
          ,'MT_pre__Attribute': []
          ,'MT_pre__Expression': []
          ,'MT_pre__Equation': []
          ,'MT_pre__Operation': []
          ,'MT_pre__Add': []
          ,'MT_pre__Subtract': []
          ,'MT_pre__Concat': []
          ,'MT_pre__Constant': []
          ,'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__paired_with': []
          ,'MT_pre__match_contains': [('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination')]
          ,'MT_pre__apply_contains': []
          ,'MT_pre__directLink_T': []
          ,'MT_pre__directLink_S': [('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__indirectLink_S': [('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__backward_link': [('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination')]
          ,'MT_pre__trace_link': [('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination')]
          ,'MT_pre__hasAttribute_S': [('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__hasAttribute_T': []
          ,'MT_pre__leftExpr': []
          ,'MT_pre__rightExpr': []
          ,'MT_pre__hasArgs': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': [('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination')] }
    self.CardinalityTable['MT_pre__Capsule']={
          'MT_pre__MatchModel': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__MetaModelElement_S': []
          ,'MT_pre__MetaModelElement_T': []
          ,'MT_pre__Element': []
          ,'MT_pre__NamedElement': []
          ,'MT_pre__Trigger_S': []
          ,'MT_pre__Action': []
          ,'MT_pre__PortRef': []
          ,'MT_pre__PortConnectorRef': []
          ,'MT_pre__StateMachineElement': []
          ,'MT_pre__Protocol': []
          ,'MT_pre__Signal': []
          ,'MT_pre__Port': []
          ,'MT_pre__Vertex': []
          ,'MT_pre__InitialPoint': []
          ,'MT_pre__EntryPoint': []
          ,'MT_pre__ExitPoint': []
          ,'MT_pre__Transition': []
          ,'MT_pre__StateMachine': []
          ,'MT_pre__State': []
          ,'MT_pre__Capsule': []
          ,'MT_pre__PackageContainer': []
          ,'MT_pre__Model_S': []
          ,'MT_pre__Package': []
          ,'MT_pre__CapsuleRole': []
          ,'MT_pre__PortConnector': []
          ,'MT_pre__Thread': []
          ,'MT_pre__PhysicalThread': []
          ,'MT_pre__LogicalThread': []
          ,'MT_pre__PortType': []
          ,'MT_pre__BASE0': []
          ,'MT_pre__CONJUGATE1': []
          ,'MT_pre__SignalType': []
          ,'MT_pre__OUT1': []
          ,'MT_pre__IN0': []
          ,'MT_pre__RoleType': []
          ,'MT_pre__FIXED0': []
          ,'MT_pre__OPTIONAL1': []
          ,'MT_pre__PLUGIN2': []
          ,'MT_pre__TransitionType': []
          ,'MT_pre__SIBLING0': []
          ,'MT_pre__IN1': []
          ,'MT_pre__OUT2': []
          ,'MT_pre__Def': []
          ,'MT_pre__Expr': []
          ,'MT_pre__Pattern': []
          ,'MT_pre__Proc': []
          ,'MT_pre__ProcDef': []
          ,'MT_pre__FuncDef': []
          ,'MT_pre__Name': []
          ,'MT_pre__PythonRef': []
          ,'MT_pre__Module': []
          ,'MT_pre__Null': []
          ,'MT_pre__Trigger_T': []
          ,'MT_pre__Listen': []
          ,'MT_pre__ConditionBranch': []
          ,'MT_pre__ListenBranch': []
          ,'MT_pre__Site': []
          ,'MT_pre__Model_T': []
          ,'MT_pre__MatchCase': []
          ,'MT_pre__Condition': []
          ,'MT_pre__New': []
          ,'MT_pre__Delay': []
          ,'MT_pre__Par': []
          ,'MT_pre__ParIndexed': []
          ,'MT_pre__Inst': []
          ,'MT_pre__LocalDef': []
          ,'MT_pre__Seq': []
          ,'MT_pre__ConditionSet': []
          ,'MT_pre__Match': []
          ,'MT_pre__Print': []
          ,'MT_pre__Attribute': []
          ,'MT_pre__Expression': []
          ,'MT_pre__Equation': []
          ,'MT_pre__Operation': []
          ,'MT_pre__Add': []
          ,'MT_pre__Subtract': []
          ,'MT_pre__Concat': []
          ,'MT_pre__Constant': []
          ,'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__paired_with': []
          ,'MT_pre__match_contains': [('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination')]
          ,'MT_pre__apply_contains': []
          ,'MT_pre__directLink_T': []
          ,'MT_pre__directLink_S': [('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__indirectLink_S': [('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__backward_link': [('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination')]
          ,'MT_pre__trace_link': [('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination')]
          ,'MT_pre__hasAttribute_S': [('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__hasAttribute_T': []
          ,'MT_pre__leftExpr': []
          ,'MT_pre__rightExpr': []
          ,'MT_pre__hasArgs': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': [('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination')] }
    self.CardinalityTable['MT_pre__PackageContainer']={
          'MT_pre__MatchModel': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__MetaModelElement_S': []
          ,'MT_pre__MetaModelElement_T': []
          ,'MT_pre__Element': []
          ,'MT_pre__NamedElement': []
          ,'MT_pre__Trigger_S': []
          ,'MT_pre__Action': []
          ,'MT_pre__PortRef': []
          ,'MT_pre__PortConnectorRef': []
          ,'MT_pre__StateMachineElement': []
          ,'MT_pre__Protocol': []
          ,'MT_pre__Signal': []
          ,'MT_pre__Port': []
          ,'MT_pre__Vertex': []
          ,'MT_pre__InitialPoint': []
          ,'MT_pre__EntryPoint': []
          ,'MT_pre__ExitPoint': []
          ,'MT_pre__Transition': []
          ,'MT_pre__StateMachine': []
          ,'MT_pre__State': []
          ,'MT_pre__Capsule': []
          ,'MT_pre__PackageContainer': []
          ,'MT_pre__Model_S': []
          ,'MT_pre__Package': []
          ,'MT_pre__CapsuleRole': []
          ,'MT_pre__PortConnector': []
          ,'MT_pre__Thread': []
          ,'MT_pre__PhysicalThread': []
          ,'MT_pre__LogicalThread': []
          ,'MT_pre__PortType': []
          ,'MT_pre__BASE0': []
          ,'MT_pre__CONJUGATE1': []
          ,'MT_pre__SignalType': []
          ,'MT_pre__OUT1': []
          ,'MT_pre__IN0': []
          ,'MT_pre__RoleType': []
          ,'MT_pre__FIXED0': []
          ,'MT_pre__OPTIONAL1': []
          ,'MT_pre__PLUGIN2': []
          ,'MT_pre__TransitionType': []
          ,'MT_pre__SIBLING0': []
          ,'MT_pre__IN1': []
          ,'MT_pre__OUT2': []
          ,'MT_pre__Def': []
          ,'MT_pre__Expr': []
          ,'MT_pre__Pattern': []
          ,'MT_pre__Proc': []
          ,'MT_pre__ProcDef': []
          ,'MT_pre__FuncDef': []
          ,'MT_pre__Name': []
          ,'MT_pre__PythonRef': []
          ,'MT_pre__Module': []
          ,'MT_pre__Null': []
          ,'MT_pre__Trigger_T': []
          ,'MT_pre__Listen': []
          ,'MT_pre__ConditionBranch': []
          ,'MT_pre__ListenBranch': []
          ,'MT_pre__Site': []
          ,'MT_pre__Model_T': []
          ,'MT_pre__MatchCase': []
          ,'MT_pre__Condition': []
          ,'MT_pre__New': []
          ,'MT_pre__Delay': []
          ,'MT_pre__Par': []
          ,'MT_pre__ParIndexed': []
          ,'MT_pre__Inst': []
          ,'MT_pre__LocalDef': []
          ,'MT_pre__Seq': []
          ,'MT_pre__ConditionSet': []
          ,'MT_pre__Match': []
          ,'MT_pre__Print': []
          ,'MT_pre__Attribute': []
          ,'MT_pre__Expression': []
          ,'MT_pre__Equation': []
          ,'MT_pre__Operation': []
          ,'MT_pre__Add': []
          ,'MT_pre__Subtract': []
          ,'MT_pre__Concat': []
          ,'MT_pre__Constant': []
          ,'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__paired_with': []
          ,'MT_pre__match_contains': [('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination')]
          ,'MT_pre__apply_contains': []
          ,'MT_pre__directLink_T': []
          ,'MT_pre__directLink_S': [('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__indirectLink_S': [('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__backward_link': [('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination')]
          ,'MT_pre__trace_link': [('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination')]
          ,'MT_pre__hasAttribute_S': [('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__hasAttribute_T': []
          ,'MT_pre__leftExpr': []
          ,'MT_pre__rightExpr': []
          ,'MT_pre__hasArgs': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': [('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination')] }
    self.CardinalityTable['MT_pre__Model_S']={
          'MT_pre__MatchModel': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__MetaModelElement_S': []
          ,'MT_pre__MetaModelElement_T': []
          ,'MT_pre__Element': []
          ,'MT_pre__NamedElement': []
          ,'MT_pre__Trigger_S': []
          ,'MT_pre__Action': []
          ,'MT_pre__PortRef': []
          ,'MT_pre__PortConnectorRef': []
          ,'MT_pre__StateMachineElement': []
          ,'MT_pre__Protocol': []
          ,'MT_pre__Signal': []
          ,'MT_pre__Port': []
          ,'MT_pre__Vertex': []
          ,'MT_pre__InitialPoint': []
          ,'MT_pre__EntryPoint': []
          ,'MT_pre__ExitPoint': []
          ,'MT_pre__Transition': []
          ,'MT_pre__StateMachine': []
          ,'MT_pre__State': []
          ,'MT_pre__Capsule': []
          ,'MT_pre__PackageContainer': []
          ,'MT_pre__Model_S': []
          ,'MT_pre__Package': []
          ,'MT_pre__CapsuleRole': []
          ,'MT_pre__PortConnector': []
          ,'MT_pre__Thread': []
          ,'MT_pre__PhysicalThread': []
          ,'MT_pre__LogicalThread': []
          ,'MT_pre__PortType': []
          ,'MT_pre__BASE0': []
          ,'MT_pre__CONJUGATE1': []
          ,'MT_pre__SignalType': []
          ,'MT_pre__OUT1': []
          ,'MT_pre__IN0': []
          ,'MT_pre__RoleType': []
          ,'MT_pre__FIXED0': []
          ,'MT_pre__OPTIONAL1': []
          ,'MT_pre__PLUGIN2': []
          ,'MT_pre__TransitionType': []
          ,'MT_pre__SIBLING0': []
          ,'MT_pre__IN1': []
          ,'MT_pre__OUT2': []
          ,'MT_pre__Def': []
          ,'MT_pre__Expr': []
          ,'MT_pre__Pattern': []
          ,'MT_pre__Proc': []
          ,'MT_pre__ProcDef': []
          ,'MT_pre__FuncDef': []
          ,'MT_pre__Name': []
          ,'MT_pre__PythonRef': []
          ,'MT_pre__Module': []
          ,'MT_pre__Null': []
          ,'MT_pre__Trigger_T': []
          ,'MT_pre__Listen': []
          ,'MT_pre__ConditionBranch': []
          ,'MT_pre__ListenBranch': []
          ,'MT_pre__Site': []
          ,'MT_pre__Model_T': []
          ,'MT_pre__MatchCase': []
          ,'MT_pre__Condition': []
          ,'MT_pre__New': []
          ,'MT_pre__Delay': []
          ,'MT_pre__Par': []
          ,'MT_pre__ParIndexed': []
          ,'MT_pre__Inst': []
          ,'MT_pre__LocalDef': []
          ,'MT_pre__Seq': []
          ,'MT_pre__ConditionSet': []
          ,'MT_pre__Match': []
          ,'MT_pre__Print': []
          ,'MT_pre__Attribute': []
          ,'MT_pre__Expression': []
          ,'MT_pre__Equation': []
          ,'MT_pre__Operation': []
          ,'MT_pre__Add': []
          ,'MT_pre__Subtract': []
          ,'MT_pre__Concat': []
          ,'MT_pre__Constant': []
          ,'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__paired_with': []
          ,'MT_pre__match_contains': [('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination')]
          ,'MT_pre__apply_contains': []
          ,'MT_pre__directLink_T': []
          ,'MT_pre__directLink_S': [('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__indirectLink_S': [('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__backward_link': [('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination')]
          ,'MT_pre__trace_link': [('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination')]
          ,'MT_pre__hasAttribute_S': [('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__hasAttribute_T': []
          ,'MT_pre__leftExpr': []
          ,'MT_pre__rightExpr': []
          ,'MT_pre__hasArgs': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': [('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination')] }
    self.CardinalityTable['MT_pre__Package']={
          'MT_pre__MatchModel': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__MetaModelElement_S': []
          ,'MT_pre__MetaModelElement_T': []
          ,'MT_pre__Element': []
          ,'MT_pre__NamedElement': []
          ,'MT_pre__Trigger_S': []
          ,'MT_pre__Action': []
          ,'MT_pre__PortRef': []
          ,'MT_pre__PortConnectorRef': []
          ,'MT_pre__StateMachineElement': []
          ,'MT_pre__Protocol': []
          ,'MT_pre__Signal': []
          ,'MT_pre__Port': []
          ,'MT_pre__Vertex': []
          ,'MT_pre__InitialPoint': []
          ,'MT_pre__EntryPoint': []
          ,'MT_pre__ExitPoint': []
          ,'MT_pre__Transition': []
          ,'MT_pre__StateMachine': []
          ,'MT_pre__State': []
          ,'MT_pre__Capsule': []
          ,'MT_pre__PackageContainer': []
          ,'MT_pre__Model_S': []
          ,'MT_pre__Package': []
          ,'MT_pre__CapsuleRole': []
          ,'MT_pre__PortConnector': []
          ,'MT_pre__Thread': []
          ,'MT_pre__PhysicalThread': []
          ,'MT_pre__LogicalThread': []
          ,'MT_pre__PortType': []
          ,'MT_pre__BASE0': []
          ,'MT_pre__CONJUGATE1': []
          ,'MT_pre__SignalType': []
          ,'MT_pre__OUT1': []
          ,'MT_pre__IN0': []
          ,'MT_pre__RoleType': []
          ,'MT_pre__FIXED0': []
          ,'MT_pre__OPTIONAL1': []
          ,'MT_pre__PLUGIN2': []
          ,'MT_pre__TransitionType': []
          ,'MT_pre__SIBLING0': []
          ,'MT_pre__IN1': []
          ,'MT_pre__OUT2': []
          ,'MT_pre__Def': []
          ,'MT_pre__Expr': []
          ,'MT_pre__Pattern': []
          ,'MT_pre__Proc': []
          ,'MT_pre__ProcDef': []
          ,'MT_pre__FuncDef': []
          ,'MT_pre__Name': []
          ,'MT_pre__PythonRef': []
          ,'MT_pre__Module': []
          ,'MT_pre__Null': []
          ,'MT_pre__Trigger_T': []
          ,'MT_pre__Listen': []
          ,'MT_pre__ConditionBranch': []
          ,'MT_pre__ListenBranch': []
          ,'MT_pre__Site': []
          ,'MT_pre__Model_T': []
          ,'MT_pre__MatchCase': []
          ,'MT_pre__Condition': []
          ,'MT_pre__New': []
          ,'MT_pre__Delay': []
          ,'MT_pre__Par': []
          ,'MT_pre__ParIndexed': []
          ,'MT_pre__Inst': []
          ,'MT_pre__LocalDef': []
          ,'MT_pre__Seq': []
          ,'MT_pre__ConditionSet': []
          ,'MT_pre__Match': []
          ,'MT_pre__Print': []
          ,'MT_pre__Attribute': []
          ,'MT_pre__Expression': []
          ,'MT_pre__Equation': []
          ,'MT_pre__Operation': []
          ,'MT_pre__Add': []
          ,'MT_pre__Subtract': []
          ,'MT_pre__Concat': []
          ,'MT_pre__Constant': []
          ,'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__paired_with': []
          ,'MT_pre__match_contains': [('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination')]
          ,'MT_pre__apply_contains': []
          ,'MT_pre__directLink_T': []
          ,'MT_pre__directLink_S': [('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__indirectLink_S': [('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__backward_link': [('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination')]
          ,'MT_pre__trace_link': [('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination')]
          ,'MT_pre__hasAttribute_S': [('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__hasAttribute_T': []
          ,'MT_pre__leftExpr': []
          ,'MT_pre__rightExpr': []
          ,'MT_pre__hasArgs': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': [('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination')] }
    self.CardinalityTable['MT_pre__CapsuleRole']={
          'MT_pre__MatchModel': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__MetaModelElement_S': []
          ,'MT_pre__MetaModelElement_T': []
          ,'MT_pre__Element': []
          ,'MT_pre__NamedElement': []
          ,'MT_pre__Trigger_S': []
          ,'MT_pre__Action': []
          ,'MT_pre__PortRef': []
          ,'MT_pre__PortConnectorRef': []
          ,'MT_pre__StateMachineElement': []
          ,'MT_pre__Protocol': []
          ,'MT_pre__Signal': []
          ,'MT_pre__Port': []
          ,'MT_pre__Vertex': []
          ,'MT_pre__InitialPoint': []
          ,'MT_pre__EntryPoint': []
          ,'MT_pre__ExitPoint': []
          ,'MT_pre__Transition': []
          ,'MT_pre__StateMachine': []
          ,'MT_pre__State': []
          ,'MT_pre__Capsule': []
          ,'MT_pre__PackageContainer': []
          ,'MT_pre__Model_S': []
          ,'MT_pre__Package': []
          ,'MT_pre__CapsuleRole': []
          ,'MT_pre__PortConnector': []
          ,'MT_pre__Thread': []
          ,'MT_pre__PhysicalThread': []
          ,'MT_pre__LogicalThread': []
          ,'MT_pre__PortType': []
          ,'MT_pre__BASE0': []
          ,'MT_pre__CONJUGATE1': []
          ,'MT_pre__SignalType': []
          ,'MT_pre__OUT1': []
          ,'MT_pre__IN0': []
          ,'MT_pre__RoleType': []
          ,'MT_pre__FIXED0': []
          ,'MT_pre__OPTIONAL1': []
          ,'MT_pre__PLUGIN2': []
          ,'MT_pre__TransitionType': []
          ,'MT_pre__SIBLING0': []
          ,'MT_pre__IN1': []
          ,'MT_pre__OUT2': []
          ,'MT_pre__Def': []
          ,'MT_pre__Expr': []
          ,'MT_pre__Pattern': []
          ,'MT_pre__Proc': []
          ,'MT_pre__ProcDef': []
          ,'MT_pre__FuncDef': []
          ,'MT_pre__Name': []
          ,'MT_pre__PythonRef': []
          ,'MT_pre__Module': []
          ,'MT_pre__Null': []
          ,'MT_pre__Trigger_T': []
          ,'MT_pre__Listen': []
          ,'MT_pre__ConditionBranch': []
          ,'MT_pre__ListenBranch': []
          ,'MT_pre__Site': []
          ,'MT_pre__Model_T': []
          ,'MT_pre__MatchCase': []
          ,'MT_pre__Condition': []
          ,'MT_pre__New': []
          ,'MT_pre__Delay': []
          ,'MT_pre__Par': []
          ,'MT_pre__ParIndexed': []
          ,'MT_pre__Inst': []
          ,'MT_pre__LocalDef': []
          ,'MT_pre__Seq': []
          ,'MT_pre__ConditionSet': []
          ,'MT_pre__Match': []
          ,'MT_pre__Print': []
          ,'MT_pre__Attribute': []
          ,'MT_pre__Expression': []
          ,'MT_pre__Equation': []
          ,'MT_pre__Operation': []
          ,'MT_pre__Add': []
          ,'MT_pre__Subtract': []
          ,'MT_pre__Concat': []
          ,'MT_pre__Constant': []
          ,'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__paired_with': []
          ,'MT_pre__match_contains': [('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination')]
          ,'MT_pre__apply_contains': []
          ,'MT_pre__directLink_T': []
          ,'MT_pre__directLink_S': [('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__indirectLink_S': [('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__backward_link': [('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination')]
          ,'MT_pre__trace_link': [('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination')]
          ,'MT_pre__hasAttribute_S': [('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__hasAttribute_T': []
          ,'MT_pre__leftExpr': []
          ,'MT_pre__rightExpr': []
          ,'MT_pre__hasArgs': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': [('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination')] }
    self.CardinalityTable['MT_pre__PortConnector']={
          'MT_pre__MatchModel': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__MetaModelElement_S': []
          ,'MT_pre__MetaModelElement_T': []
          ,'MT_pre__Element': []
          ,'MT_pre__NamedElement': []
          ,'MT_pre__Trigger_S': []
          ,'MT_pre__Action': []
          ,'MT_pre__PortRef': []
          ,'MT_pre__PortConnectorRef': []
          ,'MT_pre__StateMachineElement': []
          ,'MT_pre__Protocol': []
          ,'MT_pre__Signal': []
          ,'MT_pre__Port': []
          ,'MT_pre__Vertex': []
          ,'MT_pre__InitialPoint': []
          ,'MT_pre__EntryPoint': []
          ,'MT_pre__ExitPoint': []
          ,'MT_pre__Transition': []
          ,'MT_pre__StateMachine': []
          ,'MT_pre__State': []
          ,'MT_pre__Capsule': []
          ,'MT_pre__PackageContainer': []
          ,'MT_pre__Model_S': []
          ,'MT_pre__Package': []
          ,'MT_pre__CapsuleRole': []
          ,'MT_pre__PortConnector': []
          ,'MT_pre__Thread': []
          ,'MT_pre__PhysicalThread': []
          ,'MT_pre__LogicalThread': []
          ,'MT_pre__PortType': []
          ,'MT_pre__BASE0': []
          ,'MT_pre__CONJUGATE1': []
          ,'MT_pre__SignalType': []
          ,'MT_pre__OUT1': []
          ,'MT_pre__IN0': []
          ,'MT_pre__RoleType': []
          ,'MT_pre__FIXED0': []
          ,'MT_pre__OPTIONAL1': []
          ,'MT_pre__PLUGIN2': []
          ,'MT_pre__TransitionType': []
          ,'MT_pre__SIBLING0': []
          ,'MT_pre__IN1': []
          ,'MT_pre__OUT2': []
          ,'MT_pre__Def': []
          ,'MT_pre__Expr': []
          ,'MT_pre__Pattern': []
          ,'MT_pre__Proc': []
          ,'MT_pre__ProcDef': []
          ,'MT_pre__FuncDef': []
          ,'MT_pre__Name': []
          ,'MT_pre__PythonRef': []
          ,'MT_pre__Module': []
          ,'MT_pre__Null': []
          ,'MT_pre__Trigger_T': []
          ,'MT_pre__Listen': []
          ,'MT_pre__ConditionBranch': []
          ,'MT_pre__ListenBranch': []
          ,'MT_pre__Site': []
          ,'MT_pre__Model_T': []
          ,'MT_pre__MatchCase': []
          ,'MT_pre__Condition': []
          ,'MT_pre__New': []
          ,'MT_pre__Delay': []
          ,'MT_pre__Par': []
          ,'MT_pre__ParIndexed': []
          ,'MT_pre__Inst': []
          ,'MT_pre__LocalDef': []
          ,'MT_pre__Seq': []
          ,'MT_pre__ConditionSet': []
          ,'MT_pre__Match': []
          ,'MT_pre__Print': []
          ,'MT_pre__Attribute': []
          ,'MT_pre__Expression': []
          ,'MT_pre__Equation': []
          ,'MT_pre__Operation': []
          ,'MT_pre__Add': []
          ,'MT_pre__Subtract': []
          ,'MT_pre__Concat': []
          ,'MT_pre__Constant': []
          ,'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__paired_with': []
          ,'MT_pre__match_contains': [('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination')]
          ,'MT_pre__apply_contains': []
          ,'MT_pre__directLink_T': []
          ,'MT_pre__directLink_S': [('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__indirectLink_S': [('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__backward_link': [('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination')]
          ,'MT_pre__trace_link': [('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination')]
          ,'MT_pre__hasAttribute_S': [('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__hasAttribute_T': []
          ,'MT_pre__leftExpr': []
          ,'MT_pre__rightExpr': []
          ,'MT_pre__hasArgs': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': [('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination')] }
    self.CardinalityTable['MT_pre__Thread']={
          'MT_pre__MatchModel': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__MetaModelElement_S': []
          ,'MT_pre__MetaModelElement_T': []
          ,'MT_pre__Element': []
          ,'MT_pre__NamedElement': []
          ,'MT_pre__Trigger_S': []
          ,'MT_pre__Action': []
          ,'MT_pre__PortRef': []
          ,'MT_pre__PortConnectorRef': []
          ,'MT_pre__StateMachineElement': []
          ,'MT_pre__Protocol': []
          ,'MT_pre__Signal': []
          ,'MT_pre__Port': []
          ,'MT_pre__Vertex': []
          ,'MT_pre__InitialPoint': []
          ,'MT_pre__EntryPoint': []
          ,'MT_pre__ExitPoint': []
          ,'MT_pre__Transition': []
          ,'MT_pre__StateMachine': []
          ,'MT_pre__State': []
          ,'MT_pre__Capsule': []
          ,'MT_pre__PackageContainer': []
          ,'MT_pre__Model_S': []
          ,'MT_pre__Package': []
          ,'MT_pre__CapsuleRole': []
          ,'MT_pre__PortConnector': []
          ,'MT_pre__Thread': []
          ,'MT_pre__PhysicalThread': []
          ,'MT_pre__LogicalThread': []
          ,'MT_pre__PortType': []
          ,'MT_pre__BASE0': []
          ,'MT_pre__CONJUGATE1': []
          ,'MT_pre__SignalType': []
          ,'MT_pre__OUT1': []
          ,'MT_pre__IN0': []
          ,'MT_pre__RoleType': []
          ,'MT_pre__FIXED0': []
          ,'MT_pre__OPTIONAL1': []
          ,'MT_pre__PLUGIN2': []
          ,'MT_pre__TransitionType': []
          ,'MT_pre__SIBLING0': []
          ,'MT_pre__IN1': []
          ,'MT_pre__OUT2': []
          ,'MT_pre__Def': []
          ,'MT_pre__Expr': []
          ,'MT_pre__Pattern': []
          ,'MT_pre__Proc': []
          ,'MT_pre__ProcDef': []
          ,'MT_pre__FuncDef': []
          ,'MT_pre__Name': []
          ,'MT_pre__PythonRef': []
          ,'MT_pre__Module': []
          ,'MT_pre__Null': []
          ,'MT_pre__Trigger_T': []
          ,'MT_pre__Listen': []
          ,'MT_pre__ConditionBranch': []
          ,'MT_pre__ListenBranch': []
          ,'MT_pre__Site': []
          ,'MT_pre__Model_T': []
          ,'MT_pre__MatchCase': []
          ,'MT_pre__Condition': []
          ,'MT_pre__New': []
          ,'MT_pre__Delay': []
          ,'MT_pre__Par': []
          ,'MT_pre__ParIndexed': []
          ,'MT_pre__Inst': []
          ,'MT_pre__LocalDef': []
          ,'MT_pre__Seq': []
          ,'MT_pre__ConditionSet': []
          ,'MT_pre__Match': []
          ,'MT_pre__Print': []
          ,'MT_pre__Attribute': []
          ,'MT_pre__Expression': []
          ,'MT_pre__Equation': []
          ,'MT_pre__Operation': []
          ,'MT_pre__Add': []
          ,'MT_pre__Subtract': []
          ,'MT_pre__Concat': []
          ,'MT_pre__Constant': []
          ,'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__paired_with': []
          ,'MT_pre__match_contains': [('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination')]
          ,'MT_pre__apply_contains': []
          ,'MT_pre__directLink_T': []
          ,'MT_pre__directLink_S': [('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__indirectLink_S': [('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__backward_link': [('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination')]
          ,'MT_pre__trace_link': [('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination')]
          ,'MT_pre__hasAttribute_S': [('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__hasAttribute_T': []
          ,'MT_pre__leftExpr': []
          ,'MT_pre__rightExpr': []
          ,'MT_pre__hasArgs': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': [('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination')] }
    self.CardinalityTable['MT_pre__PhysicalThread']={
          'MT_pre__MatchModel': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__MetaModelElement_S': []
          ,'MT_pre__MetaModelElement_T': []
          ,'MT_pre__Element': []
          ,'MT_pre__NamedElement': []
          ,'MT_pre__Trigger_S': []
          ,'MT_pre__Action': []
          ,'MT_pre__PortRef': []
          ,'MT_pre__PortConnectorRef': []
          ,'MT_pre__StateMachineElement': []
          ,'MT_pre__Protocol': []
          ,'MT_pre__Signal': []
          ,'MT_pre__Port': []
          ,'MT_pre__Vertex': []
          ,'MT_pre__InitialPoint': []
          ,'MT_pre__EntryPoint': []
          ,'MT_pre__ExitPoint': []
          ,'MT_pre__Transition': []
          ,'MT_pre__StateMachine': []
          ,'MT_pre__State': []
          ,'MT_pre__Capsule': []
          ,'MT_pre__PackageContainer': []
          ,'MT_pre__Model_S': []
          ,'MT_pre__Package': []
          ,'MT_pre__CapsuleRole': []
          ,'MT_pre__PortConnector': []
          ,'MT_pre__Thread': []
          ,'MT_pre__PhysicalThread': []
          ,'MT_pre__LogicalThread': []
          ,'MT_pre__PortType': []
          ,'MT_pre__BASE0': []
          ,'MT_pre__CONJUGATE1': []
          ,'MT_pre__SignalType': []
          ,'MT_pre__OUT1': []
          ,'MT_pre__IN0': []
          ,'MT_pre__RoleType': []
          ,'MT_pre__FIXED0': []
          ,'MT_pre__OPTIONAL1': []
          ,'MT_pre__PLUGIN2': []
          ,'MT_pre__TransitionType': []
          ,'MT_pre__SIBLING0': []
          ,'MT_pre__IN1': []
          ,'MT_pre__OUT2': []
          ,'MT_pre__Def': []
          ,'MT_pre__Expr': []
          ,'MT_pre__Pattern': []
          ,'MT_pre__Proc': []
          ,'MT_pre__ProcDef': []
          ,'MT_pre__FuncDef': []
          ,'MT_pre__Name': []
          ,'MT_pre__PythonRef': []
          ,'MT_pre__Module': []
          ,'MT_pre__Null': []
          ,'MT_pre__Trigger_T': []
          ,'MT_pre__Listen': []
          ,'MT_pre__ConditionBranch': []
          ,'MT_pre__ListenBranch': []
          ,'MT_pre__Site': []
          ,'MT_pre__Model_T': []
          ,'MT_pre__MatchCase': []
          ,'MT_pre__Condition': []
          ,'MT_pre__New': []
          ,'MT_pre__Delay': []
          ,'MT_pre__Par': []
          ,'MT_pre__ParIndexed': []
          ,'MT_pre__Inst': []
          ,'MT_pre__LocalDef': []
          ,'MT_pre__Seq': []
          ,'MT_pre__ConditionSet': []
          ,'MT_pre__Match': []
          ,'MT_pre__Print': []
          ,'MT_pre__Attribute': []
          ,'MT_pre__Expression': []
          ,'MT_pre__Equation': []
          ,'MT_pre__Operation': []
          ,'MT_pre__Add': []
          ,'MT_pre__Subtract': []
          ,'MT_pre__Concat': []
          ,'MT_pre__Constant': []
          ,'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__paired_with': []
          ,'MT_pre__match_contains': [('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination')]
          ,'MT_pre__apply_contains': []
          ,'MT_pre__directLink_T': []
          ,'MT_pre__directLink_S': [('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__indirectLink_S': [('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__backward_link': [('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination')]
          ,'MT_pre__trace_link': [('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination')]
          ,'MT_pre__hasAttribute_S': [('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__hasAttribute_T': []
          ,'MT_pre__leftExpr': []
          ,'MT_pre__rightExpr': []
          ,'MT_pre__hasArgs': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': [('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination')] }
    self.CardinalityTable['MT_pre__LogicalThread']={
          'MT_pre__MatchModel': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__MetaModelElement_S': []
          ,'MT_pre__MetaModelElement_T': []
          ,'MT_pre__Element': []
          ,'MT_pre__NamedElement': []
          ,'MT_pre__Trigger_S': []
          ,'MT_pre__Action': []
          ,'MT_pre__PortRef': []
          ,'MT_pre__PortConnectorRef': []
          ,'MT_pre__StateMachineElement': []
          ,'MT_pre__Protocol': []
          ,'MT_pre__Signal': []
          ,'MT_pre__Port': []
          ,'MT_pre__Vertex': []
          ,'MT_pre__InitialPoint': []
          ,'MT_pre__EntryPoint': []
          ,'MT_pre__ExitPoint': []
          ,'MT_pre__Transition': []
          ,'MT_pre__StateMachine': []
          ,'MT_pre__State': []
          ,'MT_pre__Capsule': []
          ,'MT_pre__PackageContainer': []
          ,'MT_pre__Model_S': []
          ,'MT_pre__Package': []
          ,'MT_pre__CapsuleRole': []
          ,'MT_pre__PortConnector': []
          ,'MT_pre__Thread': []
          ,'MT_pre__PhysicalThread': []
          ,'MT_pre__LogicalThread': []
          ,'MT_pre__PortType': []
          ,'MT_pre__BASE0': []
          ,'MT_pre__CONJUGATE1': []
          ,'MT_pre__SignalType': []
          ,'MT_pre__OUT1': []
          ,'MT_pre__IN0': []
          ,'MT_pre__RoleType': []
          ,'MT_pre__FIXED0': []
          ,'MT_pre__OPTIONAL1': []
          ,'MT_pre__PLUGIN2': []
          ,'MT_pre__TransitionType': []
          ,'MT_pre__SIBLING0': []
          ,'MT_pre__IN1': []
          ,'MT_pre__OUT2': []
          ,'MT_pre__Def': []
          ,'MT_pre__Expr': []
          ,'MT_pre__Pattern': []
          ,'MT_pre__Proc': []
          ,'MT_pre__ProcDef': []
          ,'MT_pre__FuncDef': []
          ,'MT_pre__Name': []
          ,'MT_pre__PythonRef': []
          ,'MT_pre__Module': []
          ,'MT_pre__Null': []
          ,'MT_pre__Trigger_T': []
          ,'MT_pre__Listen': []
          ,'MT_pre__ConditionBranch': []
          ,'MT_pre__ListenBranch': []
          ,'MT_pre__Site': []
          ,'MT_pre__Model_T': []
          ,'MT_pre__MatchCase': []
          ,'MT_pre__Condition': []
          ,'MT_pre__New': []
          ,'MT_pre__Delay': []
          ,'MT_pre__Par': []
          ,'MT_pre__ParIndexed': []
          ,'MT_pre__Inst': []
          ,'MT_pre__LocalDef': []
          ,'MT_pre__Seq': []
          ,'MT_pre__ConditionSet': []
          ,'MT_pre__Match': []
          ,'MT_pre__Print': []
          ,'MT_pre__Attribute': []
          ,'MT_pre__Expression': []
          ,'MT_pre__Equation': []
          ,'MT_pre__Operation': []
          ,'MT_pre__Add': []
          ,'MT_pre__Subtract': []
          ,'MT_pre__Concat': []
          ,'MT_pre__Constant': []
          ,'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__paired_with': []
          ,'MT_pre__match_contains': [('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination')]
          ,'MT_pre__apply_contains': []
          ,'MT_pre__directLink_T': []
          ,'MT_pre__directLink_S': [('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__indirectLink_S': [('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__backward_link': [('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination')]
          ,'MT_pre__trace_link': [('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination')]
          ,'MT_pre__hasAttribute_S': [('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__hasAttribute_T': []
          ,'MT_pre__leftExpr': []
          ,'MT_pre__rightExpr': []
          ,'MT_pre__hasArgs': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': [('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination')] }
    self.CardinalityTable['MT_pre__PortType']={
          'MT_pre__MatchModel': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__MetaModelElement_S': []
          ,'MT_pre__MetaModelElement_T': []
          ,'MT_pre__Element': []
          ,'MT_pre__NamedElement': []
          ,'MT_pre__Trigger_S': []
          ,'MT_pre__Action': []
          ,'MT_pre__PortRef': []
          ,'MT_pre__PortConnectorRef': []
          ,'MT_pre__StateMachineElement': []
          ,'MT_pre__Protocol': []
          ,'MT_pre__Signal': []
          ,'MT_pre__Port': []
          ,'MT_pre__Vertex': []
          ,'MT_pre__InitialPoint': []
          ,'MT_pre__EntryPoint': []
          ,'MT_pre__ExitPoint': []
          ,'MT_pre__Transition': []
          ,'MT_pre__StateMachine': []
          ,'MT_pre__State': []
          ,'MT_pre__Capsule': []
          ,'MT_pre__PackageContainer': []
          ,'MT_pre__Model_S': []
          ,'MT_pre__Package': []
          ,'MT_pre__CapsuleRole': []
          ,'MT_pre__PortConnector': []
          ,'MT_pre__Thread': []
          ,'MT_pre__PhysicalThread': []
          ,'MT_pre__LogicalThread': []
          ,'MT_pre__PortType': []
          ,'MT_pre__BASE0': []
          ,'MT_pre__CONJUGATE1': []
          ,'MT_pre__SignalType': []
          ,'MT_pre__OUT1': []
          ,'MT_pre__IN0': []
          ,'MT_pre__RoleType': []
          ,'MT_pre__FIXED0': []
          ,'MT_pre__OPTIONAL1': []
          ,'MT_pre__PLUGIN2': []
          ,'MT_pre__TransitionType': []
          ,'MT_pre__SIBLING0': []
          ,'MT_pre__IN1': []
          ,'MT_pre__OUT2': []
          ,'MT_pre__Def': []
          ,'MT_pre__Expr': []
          ,'MT_pre__Pattern': []
          ,'MT_pre__Proc': []
          ,'MT_pre__ProcDef': []
          ,'MT_pre__FuncDef': []
          ,'MT_pre__Name': []
          ,'MT_pre__PythonRef': []
          ,'MT_pre__Module': []
          ,'MT_pre__Null': []
          ,'MT_pre__Trigger_T': []
          ,'MT_pre__Listen': []
          ,'MT_pre__ConditionBranch': []
          ,'MT_pre__ListenBranch': []
          ,'MT_pre__Site': []
          ,'MT_pre__Model_T': []
          ,'MT_pre__MatchCase': []
          ,'MT_pre__Condition': []
          ,'MT_pre__New': []
          ,'MT_pre__Delay': []
          ,'MT_pre__Par': []
          ,'MT_pre__ParIndexed': []
          ,'MT_pre__Inst': []
          ,'MT_pre__LocalDef': []
          ,'MT_pre__Seq': []
          ,'MT_pre__ConditionSet': []
          ,'MT_pre__Match': []
          ,'MT_pre__Print': []
          ,'MT_pre__Attribute': []
          ,'MT_pre__Expression': []
          ,'MT_pre__Equation': []
          ,'MT_pre__Operation': []
          ,'MT_pre__Add': []
          ,'MT_pre__Subtract': []
          ,'MT_pre__Concat': []
          ,'MT_pre__Constant': []
          ,'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__paired_with': []
          ,'MT_pre__match_contains': [('0', 'N', 'Destination')]
          ,'MT_pre__apply_contains': []
          ,'MT_pre__directLink_T': []
          ,'MT_pre__directLink_S': [('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__indirectLink_S': [('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__backward_link': [('0', 'N', 'Destination')]
          ,'MT_pre__trace_link': [('0', 'N', 'Destination')]
          ,'MT_pre__hasAttribute_S': [('0', 'N', 'Source')]
          ,'MT_pre__hasAttribute_T': []
          ,'MT_pre__leftExpr': []
          ,'MT_pre__rightExpr': []
          ,'MT_pre__hasArgs': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': [('0', 'N', 'Destination'), ('0', 'N', 'Destination')] }
    self.CardinalityTable['MT_pre__BASE0']={
          'MT_pre__MatchModel': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__MetaModelElement_S': []
          ,'MT_pre__MetaModelElement_T': []
          ,'MT_pre__Element': []
          ,'MT_pre__NamedElement': []
          ,'MT_pre__Trigger_S': []
          ,'MT_pre__Action': []
          ,'MT_pre__PortRef': []
          ,'MT_pre__PortConnectorRef': []
          ,'MT_pre__StateMachineElement': []
          ,'MT_pre__Protocol': []
          ,'MT_pre__Signal': []
          ,'MT_pre__Port': []
          ,'MT_pre__Vertex': []
          ,'MT_pre__InitialPoint': []
          ,'MT_pre__EntryPoint': []
          ,'MT_pre__ExitPoint': []
          ,'MT_pre__Transition': []
          ,'MT_pre__StateMachine': []
          ,'MT_pre__State': []
          ,'MT_pre__Capsule': []
          ,'MT_pre__PackageContainer': []
          ,'MT_pre__Model_S': []
          ,'MT_pre__Package': []
          ,'MT_pre__CapsuleRole': []
          ,'MT_pre__PortConnector': []
          ,'MT_pre__Thread': []
          ,'MT_pre__PhysicalThread': []
          ,'MT_pre__LogicalThread': []
          ,'MT_pre__PortType': []
          ,'MT_pre__BASE0': []
          ,'MT_pre__CONJUGATE1': []
          ,'MT_pre__SignalType': []
          ,'MT_pre__OUT1': []
          ,'MT_pre__IN0': []
          ,'MT_pre__RoleType': []
          ,'MT_pre__FIXED0': []
          ,'MT_pre__OPTIONAL1': []
          ,'MT_pre__PLUGIN2': []
          ,'MT_pre__TransitionType': []
          ,'MT_pre__SIBLING0': []
          ,'MT_pre__IN1': []
          ,'MT_pre__OUT2': []
          ,'MT_pre__Def': []
          ,'MT_pre__Expr': []
          ,'MT_pre__Pattern': []
          ,'MT_pre__Proc': []
          ,'MT_pre__ProcDef': []
          ,'MT_pre__FuncDef': []
          ,'MT_pre__Name': []
          ,'MT_pre__PythonRef': []
          ,'MT_pre__Module': []
          ,'MT_pre__Null': []
          ,'MT_pre__Trigger_T': []
          ,'MT_pre__Listen': []
          ,'MT_pre__ConditionBranch': []
          ,'MT_pre__ListenBranch': []
          ,'MT_pre__Site': []
          ,'MT_pre__Model_T': []
          ,'MT_pre__MatchCase': []
          ,'MT_pre__Condition': []
          ,'MT_pre__New': []
          ,'MT_pre__Delay': []
          ,'MT_pre__Par': []
          ,'MT_pre__ParIndexed': []
          ,'MT_pre__Inst': []
          ,'MT_pre__LocalDef': []
          ,'MT_pre__Seq': []
          ,'MT_pre__ConditionSet': []
          ,'MT_pre__Match': []
          ,'MT_pre__Print': []
          ,'MT_pre__Attribute': []
          ,'MT_pre__Expression': []
          ,'MT_pre__Equation': []
          ,'MT_pre__Operation': []
          ,'MT_pre__Add': []
          ,'MT_pre__Subtract': []
          ,'MT_pre__Concat': []
          ,'MT_pre__Constant': []
          ,'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__paired_with': []
          ,'MT_pre__match_contains': [('0', 'N', 'Destination'), ('0', 'N', 'Destination')]
          ,'MT_pre__apply_contains': []
          ,'MT_pre__directLink_T': []
          ,'MT_pre__directLink_S': [('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__indirectLink_S': [('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__backward_link': [('0', 'N', 'Destination'), ('0', 'N', 'Destination')]
          ,'MT_pre__trace_link': [('0', 'N', 'Destination'), ('0', 'N', 'Destination')]
          ,'MT_pre__hasAttribute_S': [('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__hasAttribute_T': []
          ,'MT_pre__leftExpr': []
          ,'MT_pre__rightExpr': []
          ,'MT_pre__hasArgs': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': [('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination')] }
    self.CardinalityTable['MT_pre__CONJUGATE1']={
          'MT_pre__MatchModel': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__MetaModelElement_S': []
          ,'MT_pre__MetaModelElement_T': []
          ,'MT_pre__Element': []
          ,'MT_pre__NamedElement': []
          ,'MT_pre__Trigger_S': []
          ,'MT_pre__Action': []
          ,'MT_pre__PortRef': []
          ,'MT_pre__PortConnectorRef': []
          ,'MT_pre__StateMachineElement': []
          ,'MT_pre__Protocol': []
          ,'MT_pre__Signal': []
          ,'MT_pre__Port': []
          ,'MT_pre__Vertex': []
          ,'MT_pre__InitialPoint': []
          ,'MT_pre__EntryPoint': []
          ,'MT_pre__ExitPoint': []
          ,'MT_pre__Transition': []
          ,'MT_pre__StateMachine': []
          ,'MT_pre__State': []
          ,'MT_pre__Capsule': []
          ,'MT_pre__PackageContainer': []
          ,'MT_pre__Model_S': []
          ,'MT_pre__Package': []
          ,'MT_pre__CapsuleRole': []
          ,'MT_pre__PortConnector': []
          ,'MT_pre__Thread': []
          ,'MT_pre__PhysicalThread': []
          ,'MT_pre__LogicalThread': []
          ,'MT_pre__PortType': []
          ,'MT_pre__BASE0': []
          ,'MT_pre__CONJUGATE1': []
          ,'MT_pre__SignalType': []
          ,'MT_pre__OUT1': []
          ,'MT_pre__IN0': []
          ,'MT_pre__RoleType': []
          ,'MT_pre__FIXED0': []
          ,'MT_pre__OPTIONAL1': []
          ,'MT_pre__PLUGIN2': []
          ,'MT_pre__TransitionType': []
          ,'MT_pre__SIBLING0': []
          ,'MT_pre__IN1': []
          ,'MT_pre__OUT2': []
          ,'MT_pre__Def': []
          ,'MT_pre__Expr': []
          ,'MT_pre__Pattern': []
          ,'MT_pre__Proc': []
          ,'MT_pre__ProcDef': []
          ,'MT_pre__FuncDef': []
          ,'MT_pre__Name': []
          ,'MT_pre__PythonRef': []
          ,'MT_pre__Module': []
          ,'MT_pre__Null': []
          ,'MT_pre__Trigger_T': []
          ,'MT_pre__Listen': []
          ,'MT_pre__ConditionBranch': []
          ,'MT_pre__ListenBranch': []
          ,'MT_pre__Site': []
          ,'MT_pre__Model_T': []
          ,'MT_pre__MatchCase': []
          ,'MT_pre__Condition': []
          ,'MT_pre__New': []
          ,'MT_pre__Delay': []
          ,'MT_pre__Par': []
          ,'MT_pre__ParIndexed': []
          ,'MT_pre__Inst': []
          ,'MT_pre__LocalDef': []
          ,'MT_pre__Seq': []
          ,'MT_pre__ConditionSet': []
          ,'MT_pre__Match': []
          ,'MT_pre__Print': []
          ,'MT_pre__Attribute': []
          ,'MT_pre__Expression': []
          ,'MT_pre__Equation': []
          ,'MT_pre__Operation': []
          ,'MT_pre__Add': []
          ,'MT_pre__Subtract': []
          ,'MT_pre__Concat': []
          ,'MT_pre__Constant': []
          ,'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__paired_with': []
          ,'MT_pre__match_contains': [('0', 'N', 'Destination'), ('0', 'N', 'Destination')]
          ,'MT_pre__apply_contains': []
          ,'MT_pre__directLink_T': []
          ,'MT_pre__directLink_S': [('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__indirectLink_S': [('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__backward_link': [('0', 'N', 'Destination'), ('0', 'N', 'Destination')]
          ,'MT_pre__trace_link': [('0', 'N', 'Destination'), ('0', 'N', 'Destination')]
          ,'MT_pre__hasAttribute_S': [('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__hasAttribute_T': []
          ,'MT_pre__leftExpr': []
          ,'MT_pre__rightExpr': []
          ,'MT_pre__hasArgs': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': [('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination')] }
    self.CardinalityTable['MT_pre__SignalType']={
          'MT_pre__MatchModel': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__MetaModelElement_S': []
          ,'MT_pre__MetaModelElement_T': []
          ,'MT_pre__Element': []
          ,'MT_pre__NamedElement': []
          ,'MT_pre__Trigger_S': []
          ,'MT_pre__Action': []
          ,'MT_pre__PortRef': []
          ,'MT_pre__PortConnectorRef': []
          ,'MT_pre__StateMachineElement': []
          ,'MT_pre__Protocol': []
          ,'MT_pre__Signal': []
          ,'MT_pre__Port': []
          ,'MT_pre__Vertex': []
          ,'MT_pre__InitialPoint': []
          ,'MT_pre__EntryPoint': []
          ,'MT_pre__ExitPoint': []
          ,'MT_pre__Transition': []
          ,'MT_pre__StateMachine': []
          ,'MT_pre__State': []
          ,'MT_pre__Capsule': []
          ,'MT_pre__PackageContainer': []
          ,'MT_pre__Model_S': []
          ,'MT_pre__Package': []
          ,'MT_pre__CapsuleRole': []
          ,'MT_pre__PortConnector': []
          ,'MT_pre__Thread': []
          ,'MT_pre__PhysicalThread': []
          ,'MT_pre__LogicalThread': []
          ,'MT_pre__PortType': []
          ,'MT_pre__BASE0': []
          ,'MT_pre__CONJUGATE1': []
          ,'MT_pre__SignalType': []
          ,'MT_pre__OUT1': []
          ,'MT_pre__IN0': []
          ,'MT_pre__RoleType': []
          ,'MT_pre__FIXED0': []
          ,'MT_pre__OPTIONAL1': []
          ,'MT_pre__PLUGIN2': []
          ,'MT_pre__TransitionType': []
          ,'MT_pre__SIBLING0': []
          ,'MT_pre__IN1': []
          ,'MT_pre__OUT2': []
          ,'MT_pre__Def': []
          ,'MT_pre__Expr': []
          ,'MT_pre__Pattern': []
          ,'MT_pre__Proc': []
          ,'MT_pre__ProcDef': []
          ,'MT_pre__FuncDef': []
          ,'MT_pre__Name': []
          ,'MT_pre__PythonRef': []
          ,'MT_pre__Module': []
          ,'MT_pre__Null': []
          ,'MT_pre__Trigger_T': []
          ,'MT_pre__Listen': []
          ,'MT_pre__ConditionBranch': []
          ,'MT_pre__ListenBranch': []
          ,'MT_pre__Site': []
          ,'MT_pre__Model_T': []
          ,'MT_pre__MatchCase': []
          ,'MT_pre__Condition': []
          ,'MT_pre__New': []
          ,'MT_pre__Delay': []
          ,'MT_pre__Par': []
          ,'MT_pre__ParIndexed': []
          ,'MT_pre__Inst': []
          ,'MT_pre__LocalDef': []
          ,'MT_pre__Seq': []
          ,'MT_pre__ConditionSet': []
          ,'MT_pre__Match': []
          ,'MT_pre__Print': []
          ,'MT_pre__Attribute': []
          ,'MT_pre__Expression': []
          ,'MT_pre__Equation': []
          ,'MT_pre__Operation': []
          ,'MT_pre__Add': []
          ,'MT_pre__Subtract': []
          ,'MT_pre__Concat': []
          ,'MT_pre__Constant': []
          ,'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__paired_with': []
          ,'MT_pre__match_contains': [('0', 'N', 'Destination')]
          ,'MT_pre__apply_contains': []
          ,'MT_pre__directLink_T': []
          ,'MT_pre__directLink_S': [('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__indirectLink_S': [('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__backward_link': [('0', 'N', 'Destination')]
          ,'MT_pre__trace_link': [('0', 'N', 'Destination')]
          ,'MT_pre__hasAttribute_S': [('0', 'N', 'Source')]
          ,'MT_pre__hasAttribute_T': []
          ,'MT_pre__leftExpr': []
          ,'MT_pre__rightExpr': []
          ,'MT_pre__hasArgs': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': [('0', 'N', 'Destination'), ('0', 'N', 'Destination')] }
    self.CardinalityTable['MT_pre__OUT1']={
          'MT_pre__MatchModel': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__MetaModelElement_S': []
          ,'MT_pre__MetaModelElement_T': []
          ,'MT_pre__Element': []
          ,'MT_pre__NamedElement': []
          ,'MT_pre__Trigger_S': []
          ,'MT_pre__Action': []
          ,'MT_pre__PortRef': []
          ,'MT_pre__PortConnectorRef': []
          ,'MT_pre__StateMachineElement': []
          ,'MT_pre__Protocol': []
          ,'MT_pre__Signal': []
          ,'MT_pre__Port': []
          ,'MT_pre__Vertex': []
          ,'MT_pre__InitialPoint': []
          ,'MT_pre__EntryPoint': []
          ,'MT_pre__ExitPoint': []
          ,'MT_pre__Transition': []
          ,'MT_pre__StateMachine': []
          ,'MT_pre__State': []
          ,'MT_pre__Capsule': []
          ,'MT_pre__PackageContainer': []
          ,'MT_pre__Model_S': []
          ,'MT_pre__Package': []
          ,'MT_pre__CapsuleRole': []
          ,'MT_pre__PortConnector': []
          ,'MT_pre__Thread': []
          ,'MT_pre__PhysicalThread': []
          ,'MT_pre__LogicalThread': []
          ,'MT_pre__PortType': []
          ,'MT_pre__BASE0': []
          ,'MT_pre__CONJUGATE1': []
          ,'MT_pre__SignalType': []
          ,'MT_pre__OUT1': []
          ,'MT_pre__IN0': []
          ,'MT_pre__RoleType': []
          ,'MT_pre__FIXED0': []
          ,'MT_pre__OPTIONAL1': []
          ,'MT_pre__PLUGIN2': []
          ,'MT_pre__TransitionType': []
          ,'MT_pre__SIBLING0': []
          ,'MT_pre__IN1': []
          ,'MT_pre__OUT2': []
          ,'MT_pre__Def': []
          ,'MT_pre__Expr': []
          ,'MT_pre__Pattern': []
          ,'MT_pre__Proc': []
          ,'MT_pre__ProcDef': []
          ,'MT_pre__FuncDef': []
          ,'MT_pre__Name': []
          ,'MT_pre__PythonRef': []
          ,'MT_pre__Module': []
          ,'MT_pre__Null': []
          ,'MT_pre__Trigger_T': []
          ,'MT_pre__Listen': []
          ,'MT_pre__ConditionBranch': []
          ,'MT_pre__ListenBranch': []
          ,'MT_pre__Site': []
          ,'MT_pre__Model_T': []
          ,'MT_pre__MatchCase': []
          ,'MT_pre__Condition': []
          ,'MT_pre__New': []
          ,'MT_pre__Delay': []
          ,'MT_pre__Par': []
          ,'MT_pre__ParIndexed': []
          ,'MT_pre__Inst': []
          ,'MT_pre__LocalDef': []
          ,'MT_pre__Seq': []
          ,'MT_pre__ConditionSet': []
          ,'MT_pre__Match': []
          ,'MT_pre__Print': []
          ,'MT_pre__Attribute': []
          ,'MT_pre__Expression': []
          ,'MT_pre__Equation': []
          ,'MT_pre__Operation': []
          ,'MT_pre__Add': []
          ,'MT_pre__Subtract': []
          ,'MT_pre__Concat': []
          ,'MT_pre__Constant': []
          ,'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__paired_with': []
          ,'MT_pre__match_contains': [('0', 'N', 'Destination'), ('0', 'N', 'Destination')]
          ,'MT_pre__apply_contains': []
          ,'MT_pre__directLink_T': []
          ,'MT_pre__directLink_S': [('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__indirectLink_S': [('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__backward_link': [('0', 'N', 'Destination'), ('0', 'N', 'Destination')]
          ,'MT_pre__trace_link': [('0', 'N', 'Destination'), ('0', 'N', 'Destination')]
          ,'MT_pre__hasAttribute_S': [('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__hasAttribute_T': []
          ,'MT_pre__leftExpr': []
          ,'MT_pre__rightExpr': []
          ,'MT_pre__hasArgs': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': [('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination')] }
    self.CardinalityTable['MT_pre__IN0']={
          'MT_pre__MatchModel': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__MetaModelElement_S': []
          ,'MT_pre__MetaModelElement_T': []
          ,'MT_pre__Element': []
          ,'MT_pre__NamedElement': []
          ,'MT_pre__Trigger_S': []
          ,'MT_pre__Action': []
          ,'MT_pre__PortRef': []
          ,'MT_pre__PortConnectorRef': []
          ,'MT_pre__StateMachineElement': []
          ,'MT_pre__Protocol': []
          ,'MT_pre__Signal': []
          ,'MT_pre__Port': []
          ,'MT_pre__Vertex': []
          ,'MT_pre__InitialPoint': []
          ,'MT_pre__EntryPoint': []
          ,'MT_pre__ExitPoint': []
          ,'MT_pre__Transition': []
          ,'MT_pre__StateMachine': []
          ,'MT_pre__State': []
          ,'MT_pre__Capsule': []
          ,'MT_pre__PackageContainer': []
          ,'MT_pre__Model_S': []
          ,'MT_pre__Package': []
          ,'MT_pre__CapsuleRole': []
          ,'MT_pre__PortConnector': []
          ,'MT_pre__Thread': []
          ,'MT_pre__PhysicalThread': []
          ,'MT_pre__LogicalThread': []
          ,'MT_pre__PortType': []
          ,'MT_pre__BASE0': []
          ,'MT_pre__CONJUGATE1': []
          ,'MT_pre__SignalType': []
          ,'MT_pre__OUT1': []
          ,'MT_pre__IN0': []
          ,'MT_pre__RoleType': []
          ,'MT_pre__FIXED0': []
          ,'MT_pre__OPTIONAL1': []
          ,'MT_pre__PLUGIN2': []
          ,'MT_pre__TransitionType': []
          ,'MT_pre__SIBLING0': []
          ,'MT_pre__IN1': []
          ,'MT_pre__OUT2': []
          ,'MT_pre__Def': []
          ,'MT_pre__Expr': []
          ,'MT_pre__Pattern': []
          ,'MT_pre__Proc': []
          ,'MT_pre__ProcDef': []
          ,'MT_pre__FuncDef': []
          ,'MT_pre__Name': []
          ,'MT_pre__PythonRef': []
          ,'MT_pre__Module': []
          ,'MT_pre__Null': []
          ,'MT_pre__Trigger_T': []
          ,'MT_pre__Listen': []
          ,'MT_pre__ConditionBranch': []
          ,'MT_pre__ListenBranch': []
          ,'MT_pre__Site': []
          ,'MT_pre__Model_T': []
          ,'MT_pre__MatchCase': []
          ,'MT_pre__Condition': []
          ,'MT_pre__New': []
          ,'MT_pre__Delay': []
          ,'MT_pre__Par': []
          ,'MT_pre__ParIndexed': []
          ,'MT_pre__Inst': []
          ,'MT_pre__LocalDef': []
          ,'MT_pre__Seq': []
          ,'MT_pre__ConditionSet': []
          ,'MT_pre__Match': []
          ,'MT_pre__Print': []
          ,'MT_pre__Attribute': []
          ,'MT_pre__Expression': []
          ,'MT_pre__Equation': []
          ,'MT_pre__Operation': []
          ,'MT_pre__Add': []
          ,'MT_pre__Subtract': []
          ,'MT_pre__Concat': []
          ,'MT_pre__Constant': []
          ,'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__paired_with': []
          ,'MT_pre__match_contains': [('0', 'N', 'Destination'), ('0', 'N', 'Destination')]
          ,'MT_pre__apply_contains': []
          ,'MT_pre__directLink_T': []
          ,'MT_pre__directLink_S': [('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__indirectLink_S': [('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__backward_link': [('0', 'N', 'Destination'), ('0', 'N', 'Destination')]
          ,'MT_pre__trace_link': [('0', 'N', 'Destination'), ('0', 'N', 'Destination')]
          ,'MT_pre__hasAttribute_S': [('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__hasAttribute_T': []
          ,'MT_pre__leftExpr': []
          ,'MT_pre__rightExpr': []
          ,'MT_pre__hasArgs': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': [('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination')] }
    self.CardinalityTable['MT_pre__RoleType']={
          'MT_pre__MatchModel': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__MetaModelElement_S': []
          ,'MT_pre__MetaModelElement_T': []
          ,'MT_pre__Element': []
          ,'MT_pre__NamedElement': []
          ,'MT_pre__Trigger_S': []
          ,'MT_pre__Action': []
          ,'MT_pre__PortRef': []
          ,'MT_pre__PortConnectorRef': []
          ,'MT_pre__StateMachineElement': []
          ,'MT_pre__Protocol': []
          ,'MT_pre__Signal': []
          ,'MT_pre__Port': []
          ,'MT_pre__Vertex': []
          ,'MT_pre__InitialPoint': []
          ,'MT_pre__EntryPoint': []
          ,'MT_pre__ExitPoint': []
          ,'MT_pre__Transition': []
          ,'MT_pre__StateMachine': []
          ,'MT_pre__State': []
          ,'MT_pre__Capsule': []
          ,'MT_pre__PackageContainer': []
          ,'MT_pre__Model_S': []
          ,'MT_pre__Package': []
          ,'MT_pre__CapsuleRole': []
          ,'MT_pre__PortConnector': []
          ,'MT_pre__Thread': []
          ,'MT_pre__PhysicalThread': []
          ,'MT_pre__LogicalThread': []
          ,'MT_pre__PortType': []
          ,'MT_pre__BASE0': []
          ,'MT_pre__CONJUGATE1': []
          ,'MT_pre__SignalType': []
          ,'MT_pre__OUT1': []
          ,'MT_pre__IN0': []
          ,'MT_pre__RoleType': []
          ,'MT_pre__FIXED0': []
          ,'MT_pre__OPTIONAL1': []
          ,'MT_pre__PLUGIN2': []
          ,'MT_pre__TransitionType': []
          ,'MT_pre__SIBLING0': []
          ,'MT_pre__IN1': []
          ,'MT_pre__OUT2': []
          ,'MT_pre__Def': []
          ,'MT_pre__Expr': []
          ,'MT_pre__Pattern': []
          ,'MT_pre__Proc': []
          ,'MT_pre__ProcDef': []
          ,'MT_pre__FuncDef': []
          ,'MT_pre__Name': []
          ,'MT_pre__PythonRef': []
          ,'MT_pre__Module': []
          ,'MT_pre__Null': []
          ,'MT_pre__Trigger_T': []
          ,'MT_pre__Listen': []
          ,'MT_pre__ConditionBranch': []
          ,'MT_pre__ListenBranch': []
          ,'MT_pre__Site': []
          ,'MT_pre__Model_T': []
          ,'MT_pre__MatchCase': []
          ,'MT_pre__Condition': []
          ,'MT_pre__New': []
          ,'MT_pre__Delay': []
          ,'MT_pre__Par': []
          ,'MT_pre__ParIndexed': []
          ,'MT_pre__Inst': []
          ,'MT_pre__LocalDef': []
          ,'MT_pre__Seq': []
          ,'MT_pre__ConditionSet': []
          ,'MT_pre__Match': []
          ,'MT_pre__Print': []
          ,'MT_pre__Attribute': []
          ,'MT_pre__Expression': []
          ,'MT_pre__Equation': []
          ,'MT_pre__Operation': []
          ,'MT_pre__Add': []
          ,'MT_pre__Subtract': []
          ,'MT_pre__Concat': []
          ,'MT_pre__Constant': []
          ,'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__paired_with': []
          ,'MT_pre__match_contains': [('0', 'N', 'Destination')]
          ,'MT_pre__apply_contains': []
          ,'MT_pre__directLink_T': []
          ,'MT_pre__directLink_S': [('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__indirectLink_S': [('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__backward_link': [('0', 'N', 'Destination')]
          ,'MT_pre__trace_link': [('0', 'N', 'Destination')]
          ,'MT_pre__hasAttribute_S': [('0', 'N', 'Source')]
          ,'MT_pre__hasAttribute_T': []
          ,'MT_pre__leftExpr': []
          ,'MT_pre__rightExpr': []
          ,'MT_pre__hasArgs': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': [('0', 'N', 'Destination'), ('0', 'N', 'Destination')] }
    self.CardinalityTable['MT_pre__FIXED0']={
          'MT_pre__MatchModel': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__MetaModelElement_S': []
          ,'MT_pre__MetaModelElement_T': []
          ,'MT_pre__Element': []
          ,'MT_pre__NamedElement': []
          ,'MT_pre__Trigger_S': []
          ,'MT_pre__Action': []
          ,'MT_pre__PortRef': []
          ,'MT_pre__PortConnectorRef': []
          ,'MT_pre__StateMachineElement': []
          ,'MT_pre__Protocol': []
          ,'MT_pre__Signal': []
          ,'MT_pre__Port': []
          ,'MT_pre__Vertex': []
          ,'MT_pre__InitialPoint': []
          ,'MT_pre__EntryPoint': []
          ,'MT_pre__ExitPoint': []
          ,'MT_pre__Transition': []
          ,'MT_pre__StateMachine': []
          ,'MT_pre__State': []
          ,'MT_pre__Capsule': []
          ,'MT_pre__PackageContainer': []
          ,'MT_pre__Model_S': []
          ,'MT_pre__Package': []
          ,'MT_pre__CapsuleRole': []
          ,'MT_pre__PortConnector': []
          ,'MT_pre__Thread': []
          ,'MT_pre__PhysicalThread': []
          ,'MT_pre__LogicalThread': []
          ,'MT_pre__PortType': []
          ,'MT_pre__BASE0': []
          ,'MT_pre__CONJUGATE1': []
          ,'MT_pre__SignalType': []
          ,'MT_pre__OUT1': []
          ,'MT_pre__IN0': []
          ,'MT_pre__RoleType': []
          ,'MT_pre__FIXED0': []
          ,'MT_pre__OPTIONAL1': []
          ,'MT_pre__PLUGIN2': []
          ,'MT_pre__TransitionType': []
          ,'MT_pre__SIBLING0': []
          ,'MT_pre__IN1': []
          ,'MT_pre__OUT2': []
          ,'MT_pre__Def': []
          ,'MT_pre__Expr': []
          ,'MT_pre__Pattern': []
          ,'MT_pre__Proc': []
          ,'MT_pre__ProcDef': []
          ,'MT_pre__FuncDef': []
          ,'MT_pre__Name': []
          ,'MT_pre__PythonRef': []
          ,'MT_pre__Module': []
          ,'MT_pre__Null': []
          ,'MT_pre__Trigger_T': []
          ,'MT_pre__Listen': []
          ,'MT_pre__ConditionBranch': []
          ,'MT_pre__ListenBranch': []
          ,'MT_pre__Site': []
          ,'MT_pre__Model_T': []
          ,'MT_pre__MatchCase': []
          ,'MT_pre__Condition': []
          ,'MT_pre__New': []
          ,'MT_pre__Delay': []
          ,'MT_pre__Par': []
          ,'MT_pre__ParIndexed': []
          ,'MT_pre__Inst': []
          ,'MT_pre__LocalDef': []
          ,'MT_pre__Seq': []
          ,'MT_pre__ConditionSet': []
          ,'MT_pre__Match': []
          ,'MT_pre__Print': []
          ,'MT_pre__Attribute': []
          ,'MT_pre__Expression': []
          ,'MT_pre__Equation': []
          ,'MT_pre__Operation': []
          ,'MT_pre__Add': []
          ,'MT_pre__Subtract': []
          ,'MT_pre__Concat': []
          ,'MT_pre__Constant': []
          ,'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__paired_with': []
          ,'MT_pre__match_contains': [('0', 'N', 'Destination'), ('0', 'N', 'Destination')]
          ,'MT_pre__apply_contains': []
          ,'MT_pre__directLink_T': []
          ,'MT_pre__directLink_S': [('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__indirectLink_S': [('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__backward_link': [('0', 'N', 'Destination'), ('0', 'N', 'Destination')]
          ,'MT_pre__trace_link': [('0', 'N', 'Destination'), ('0', 'N', 'Destination')]
          ,'MT_pre__hasAttribute_S': [('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__hasAttribute_T': []
          ,'MT_pre__leftExpr': []
          ,'MT_pre__rightExpr': []
          ,'MT_pre__hasArgs': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': [('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination')] }
    self.CardinalityTable['MT_pre__OPTIONAL1']={
          'MT_pre__MatchModel': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__MetaModelElement_S': []
          ,'MT_pre__MetaModelElement_T': []
          ,'MT_pre__Element': []
          ,'MT_pre__NamedElement': []
          ,'MT_pre__Trigger_S': []
          ,'MT_pre__Action': []
          ,'MT_pre__PortRef': []
          ,'MT_pre__PortConnectorRef': []
          ,'MT_pre__StateMachineElement': []
          ,'MT_pre__Protocol': []
          ,'MT_pre__Signal': []
          ,'MT_pre__Port': []
          ,'MT_pre__Vertex': []
          ,'MT_pre__InitialPoint': []
          ,'MT_pre__EntryPoint': []
          ,'MT_pre__ExitPoint': []
          ,'MT_pre__Transition': []
          ,'MT_pre__StateMachine': []
          ,'MT_pre__State': []
          ,'MT_pre__Capsule': []
          ,'MT_pre__PackageContainer': []
          ,'MT_pre__Model_S': []
          ,'MT_pre__Package': []
          ,'MT_pre__CapsuleRole': []
          ,'MT_pre__PortConnector': []
          ,'MT_pre__Thread': []
          ,'MT_pre__PhysicalThread': []
          ,'MT_pre__LogicalThread': []
          ,'MT_pre__PortType': []
          ,'MT_pre__BASE0': []
          ,'MT_pre__CONJUGATE1': []
          ,'MT_pre__SignalType': []
          ,'MT_pre__OUT1': []
          ,'MT_pre__IN0': []
          ,'MT_pre__RoleType': []
          ,'MT_pre__FIXED0': []
          ,'MT_pre__OPTIONAL1': []
          ,'MT_pre__PLUGIN2': []
          ,'MT_pre__TransitionType': []
          ,'MT_pre__SIBLING0': []
          ,'MT_pre__IN1': []
          ,'MT_pre__OUT2': []
          ,'MT_pre__Def': []
          ,'MT_pre__Expr': []
          ,'MT_pre__Pattern': []
          ,'MT_pre__Proc': []
          ,'MT_pre__ProcDef': []
          ,'MT_pre__FuncDef': []
          ,'MT_pre__Name': []
          ,'MT_pre__PythonRef': []
          ,'MT_pre__Module': []
          ,'MT_pre__Null': []
          ,'MT_pre__Trigger_T': []
          ,'MT_pre__Listen': []
          ,'MT_pre__ConditionBranch': []
          ,'MT_pre__ListenBranch': []
          ,'MT_pre__Site': []
          ,'MT_pre__Model_T': []
          ,'MT_pre__MatchCase': []
          ,'MT_pre__Condition': []
          ,'MT_pre__New': []
          ,'MT_pre__Delay': []
          ,'MT_pre__Par': []
          ,'MT_pre__ParIndexed': []
          ,'MT_pre__Inst': []
          ,'MT_pre__LocalDef': []
          ,'MT_pre__Seq': []
          ,'MT_pre__ConditionSet': []
          ,'MT_pre__Match': []
          ,'MT_pre__Print': []
          ,'MT_pre__Attribute': []
          ,'MT_pre__Expression': []
          ,'MT_pre__Equation': []
          ,'MT_pre__Operation': []
          ,'MT_pre__Add': []
          ,'MT_pre__Subtract': []
          ,'MT_pre__Concat': []
          ,'MT_pre__Constant': []
          ,'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__paired_with': []
          ,'MT_pre__match_contains': [('0', 'N', 'Destination'), ('0', 'N', 'Destination')]
          ,'MT_pre__apply_contains': []
          ,'MT_pre__directLink_T': []
          ,'MT_pre__directLink_S': [('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__indirectLink_S': [('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__backward_link': [('0', 'N', 'Destination'), ('0', 'N', 'Destination')]
          ,'MT_pre__trace_link': [('0', 'N', 'Destination'), ('0', 'N', 'Destination')]
          ,'MT_pre__hasAttribute_S': [('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__hasAttribute_T': []
          ,'MT_pre__leftExpr': []
          ,'MT_pre__rightExpr': []
          ,'MT_pre__hasArgs': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': [('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination')] }
    self.CardinalityTable['MT_pre__PLUGIN2']={
          'MT_pre__MatchModel': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__MetaModelElement_S': []
          ,'MT_pre__MetaModelElement_T': []
          ,'MT_pre__Element': []
          ,'MT_pre__NamedElement': []
          ,'MT_pre__Trigger_S': []
          ,'MT_pre__Action': []
          ,'MT_pre__PortRef': []
          ,'MT_pre__PortConnectorRef': []
          ,'MT_pre__StateMachineElement': []
          ,'MT_pre__Protocol': []
          ,'MT_pre__Signal': []
          ,'MT_pre__Port': []
          ,'MT_pre__Vertex': []
          ,'MT_pre__InitialPoint': []
          ,'MT_pre__EntryPoint': []
          ,'MT_pre__ExitPoint': []
          ,'MT_pre__Transition': []
          ,'MT_pre__StateMachine': []
          ,'MT_pre__State': []
          ,'MT_pre__Capsule': []
          ,'MT_pre__PackageContainer': []
          ,'MT_pre__Model_S': []
          ,'MT_pre__Package': []
          ,'MT_pre__CapsuleRole': []
          ,'MT_pre__PortConnector': []
          ,'MT_pre__Thread': []
          ,'MT_pre__PhysicalThread': []
          ,'MT_pre__LogicalThread': []
          ,'MT_pre__PortType': []
          ,'MT_pre__BASE0': []
          ,'MT_pre__CONJUGATE1': []
          ,'MT_pre__SignalType': []
          ,'MT_pre__OUT1': []
          ,'MT_pre__IN0': []
          ,'MT_pre__RoleType': []
          ,'MT_pre__FIXED0': []
          ,'MT_pre__OPTIONAL1': []
          ,'MT_pre__PLUGIN2': []
          ,'MT_pre__TransitionType': []
          ,'MT_pre__SIBLING0': []
          ,'MT_pre__IN1': []
          ,'MT_pre__OUT2': []
          ,'MT_pre__Def': []
          ,'MT_pre__Expr': []
          ,'MT_pre__Pattern': []
          ,'MT_pre__Proc': []
          ,'MT_pre__ProcDef': []
          ,'MT_pre__FuncDef': []
          ,'MT_pre__Name': []
          ,'MT_pre__PythonRef': []
          ,'MT_pre__Module': []
          ,'MT_pre__Null': []
          ,'MT_pre__Trigger_T': []
          ,'MT_pre__Listen': []
          ,'MT_pre__ConditionBranch': []
          ,'MT_pre__ListenBranch': []
          ,'MT_pre__Site': []
          ,'MT_pre__Model_T': []
          ,'MT_pre__MatchCase': []
          ,'MT_pre__Condition': []
          ,'MT_pre__New': []
          ,'MT_pre__Delay': []
          ,'MT_pre__Par': []
          ,'MT_pre__ParIndexed': []
          ,'MT_pre__Inst': []
          ,'MT_pre__LocalDef': []
          ,'MT_pre__Seq': []
          ,'MT_pre__ConditionSet': []
          ,'MT_pre__Match': []
          ,'MT_pre__Print': []
          ,'MT_pre__Attribute': []
          ,'MT_pre__Expression': []
          ,'MT_pre__Equation': []
          ,'MT_pre__Operation': []
          ,'MT_pre__Add': []
          ,'MT_pre__Subtract': []
          ,'MT_pre__Concat': []
          ,'MT_pre__Constant': []
          ,'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__paired_with': []
          ,'MT_pre__match_contains': [('0', 'N', 'Destination'), ('0', 'N', 'Destination')]
          ,'MT_pre__apply_contains': []
          ,'MT_pre__directLink_T': []
          ,'MT_pre__directLink_S': [('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__indirectLink_S': [('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__backward_link': [('0', 'N', 'Destination'), ('0', 'N', 'Destination')]
          ,'MT_pre__trace_link': [('0', 'N', 'Destination'), ('0', 'N', 'Destination')]
          ,'MT_pre__hasAttribute_S': [('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__hasAttribute_T': []
          ,'MT_pre__leftExpr': []
          ,'MT_pre__rightExpr': []
          ,'MT_pre__hasArgs': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': [('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination')] }
    self.CardinalityTable['MT_pre__TransitionType']={
          'MT_pre__MatchModel': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__MetaModelElement_S': []
          ,'MT_pre__MetaModelElement_T': []
          ,'MT_pre__Element': []
          ,'MT_pre__NamedElement': []
          ,'MT_pre__Trigger_S': []
          ,'MT_pre__Action': []
          ,'MT_pre__PortRef': []
          ,'MT_pre__PortConnectorRef': []
          ,'MT_pre__StateMachineElement': []
          ,'MT_pre__Protocol': []
          ,'MT_pre__Signal': []
          ,'MT_pre__Port': []
          ,'MT_pre__Vertex': []
          ,'MT_pre__InitialPoint': []
          ,'MT_pre__EntryPoint': []
          ,'MT_pre__ExitPoint': []
          ,'MT_pre__Transition': []
          ,'MT_pre__StateMachine': []
          ,'MT_pre__State': []
          ,'MT_pre__Capsule': []
          ,'MT_pre__PackageContainer': []
          ,'MT_pre__Model_S': []
          ,'MT_pre__Package': []
          ,'MT_pre__CapsuleRole': []
          ,'MT_pre__PortConnector': []
          ,'MT_pre__Thread': []
          ,'MT_pre__PhysicalThread': []
          ,'MT_pre__LogicalThread': []
          ,'MT_pre__PortType': []
          ,'MT_pre__BASE0': []
          ,'MT_pre__CONJUGATE1': []
          ,'MT_pre__SignalType': []
          ,'MT_pre__OUT1': []
          ,'MT_pre__IN0': []
          ,'MT_pre__RoleType': []
          ,'MT_pre__FIXED0': []
          ,'MT_pre__OPTIONAL1': []
          ,'MT_pre__PLUGIN2': []
          ,'MT_pre__TransitionType': []
          ,'MT_pre__SIBLING0': []
          ,'MT_pre__IN1': []
          ,'MT_pre__OUT2': []
          ,'MT_pre__Def': []
          ,'MT_pre__Expr': []
          ,'MT_pre__Pattern': []
          ,'MT_pre__Proc': []
          ,'MT_pre__ProcDef': []
          ,'MT_pre__FuncDef': []
          ,'MT_pre__Name': []
          ,'MT_pre__PythonRef': []
          ,'MT_pre__Module': []
          ,'MT_pre__Null': []
          ,'MT_pre__Trigger_T': []
          ,'MT_pre__Listen': []
          ,'MT_pre__ConditionBranch': []
          ,'MT_pre__ListenBranch': []
          ,'MT_pre__Site': []
          ,'MT_pre__Model_T': []
          ,'MT_pre__MatchCase': []
          ,'MT_pre__Condition': []
          ,'MT_pre__New': []
          ,'MT_pre__Delay': []
          ,'MT_pre__Par': []
          ,'MT_pre__ParIndexed': []
          ,'MT_pre__Inst': []
          ,'MT_pre__LocalDef': []
          ,'MT_pre__Seq': []
          ,'MT_pre__ConditionSet': []
          ,'MT_pre__Match': []
          ,'MT_pre__Print': []
          ,'MT_pre__Attribute': []
          ,'MT_pre__Expression': []
          ,'MT_pre__Equation': []
          ,'MT_pre__Operation': []
          ,'MT_pre__Add': []
          ,'MT_pre__Subtract': []
          ,'MT_pre__Concat': []
          ,'MT_pre__Constant': []
          ,'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__paired_with': []
          ,'MT_pre__match_contains': [('0', 'N', 'Destination')]
          ,'MT_pre__apply_contains': []
          ,'MT_pre__directLink_T': []
          ,'MT_pre__directLink_S': [('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__indirectLink_S': [('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__backward_link': [('0', 'N', 'Destination')]
          ,'MT_pre__trace_link': [('0', 'N', 'Destination')]
          ,'MT_pre__hasAttribute_S': [('0', 'N', 'Source')]
          ,'MT_pre__hasAttribute_T': []
          ,'MT_pre__leftExpr': []
          ,'MT_pre__rightExpr': []
          ,'MT_pre__hasArgs': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': [('0', 'N', 'Destination'), ('0', 'N', 'Destination')] }
    self.CardinalityTable['MT_pre__SIBLING0']={
          'MT_pre__MatchModel': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__MetaModelElement_S': []
          ,'MT_pre__MetaModelElement_T': []
          ,'MT_pre__Element': []
          ,'MT_pre__NamedElement': []
          ,'MT_pre__Trigger_S': []
          ,'MT_pre__Action': []
          ,'MT_pre__PortRef': []
          ,'MT_pre__PortConnectorRef': []
          ,'MT_pre__StateMachineElement': []
          ,'MT_pre__Protocol': []
          ,'MT_pre__Signal': []
          ,'MT_pre__Port': []
          ,'MT_pre__Vertex': []
          ,'MT_pre__InitialPoint': []
          ,'MT_pre__EntryPoint': []
          ,'MT_pre__ExitPoint': []
          ,'MT_pre__Transition': []
          ,'MT_pre__StateMachine': []
          ,'MT_pre__State': []
          ,'MT_pre__Capsule': []
          ,'MT_pre__PackageContainer': []
          ,'MT_pre__Model_S': []
          ,'MT_pre__Package': []
          ,'MT_pre__CapsuleRole': []
          ,'MT_pre__PortConnector': []
          ,'MT_pre__Thread': []
          ,'MT_pre__PhysicalThread': []
          ,'MT_pre__LogicalThread': []
          ,'MT_pre__PortType': []
          ,'MT_pre__BASE0': []
          ,'MT_pre__CONJUGATE1': []
          ,'MT_pre__SignalType': []
          ,'MT_pre__OUT1': []
          ,'MT_pre__IN0': []
          ,'MT_pre__RoleType': []
          ,'MT_pre__FIXED0': []
          ,'MT_pre__OPTIONAL1': []
          ,'MT_pre__PLUGIN2': []
          ,'MT_pre__TransitionType': []
          ,'MT_pre__SIBLING0': []
          ,'MT_pre__IN1': []
          ,'MT_pre__OUT2': []
          ,'MT_pre__Def': []
          ,'MT_pre__Expr': []
          ,'MT_pre__Pattern': []
          ,'MT_pre__Proc': []
          ,'MT_pre__ProcDef': []
          ,'MT_pre__FuncDef': []
          ,'MT_pre__Name': []
          ,'MT_pre__PythonRef': []
          ,'MT_pre__Module': []
          ,'MT_pre__Null': []
          ,'MT_pre__Trigger_T': []
          ,'MT_pre__Listen': []
          ,'MT_pre__ConditionBranch': []
          ,'MT_pre__ListenBranch': []
          ,'MT_pre__Site': []
          ,'MT_pre__Model_T': []
          ,'MT_pre__MatchCase': []
          ,'MT_pre__Condition': []
          ,'MT_pre__New': []
          ,'MT_pre__Delay': []
          ,'MT_pre__Par': []
          ,'MT_pre__ParIndexed': []
          ,'MT_pre__Inst': []
          ,'MT_pre__LocalDef': []
          ,'MT_pre__Seq': []
          ,'MT_pre__ConditionSet': []
          ,'MT_pre__Match': []
          ,'MT_pre__Print': []
          ,'MT_pre__Attribute': []
          ,'MT_pre__Expression': []
          ,'MT_pre__Equation': []
          ,'MT_pre__Operation': []
          ,'MT_pre__Add': []
          ,'MT_pre__Subtract': []
          ,'MT_pre__Concat': []
          ,'MT_pre__Constant': []
          ,'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__paired_with': []
          ,'MT_pre__match_contains': [('0', 'N', 'Destination'), ('0', 'N', 'Destination')]
          ,'MT_pre__apply_contains': []
          ,'MT_pre__directLink_T': []
          ,'MT_pre__directLink_S': [('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__indirectLink_S': [('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__backward_link': [('0', 'N', 'Destination'), ('0', 'N', 'Destination')]
          ,'MT_pre__trace_link': [('0', 'N', 'Destination'), ('0', 'N', 'Destination')]
          ,'MT_pre__hasAttribute_S': [('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__hasAttribute_T': []
          ,'MT_pre__leftExpr': []
          ,'MT_pre__rightExpr': []
          ,'MT_pre__hasArgs': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': [('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination')] }
    self.CardinalityTable['MT_pre__IN1']={
          'MT_pre__MatchModel': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__MetaModelElement_S': []
          ,'MT_pre__MetaModelElement_T': []
          ,'MT_pre__Element': []
          ,'MT_pre__NamedElement': []
          ,'MT_pre__Trigger_S': []
          ,'MT_pre__Action': []
          ,'MT_pre__PortRef': []
          ,'MT_pre__PortConnectorRef': []
          ,'MT_pre__StateMachineElement': []
          ,'MT_pre__Protocol': []
          ,'MT_pre__Signal': []
          ,'MT_pre__Port': []
          ,'MT_pre__Vertex': []
          ,'MT_pre__InitialPoint': []
          ,'MT_pre__EntryPoint': []
          ,'MT_pre__ExitPoint': []
          ,'MT_pre__Transition': []
          ,'MT_pre__StateMachine': []
          ,'MT_pre__State': []
          ,'MT_pre__Capsule': []
          ,'MT_pre__PackageContainer': []
          ,'MT_pre__Model_S': []
          ,'MT_pre__Package': []
          ,'MT_pre__CapsuleRole': []
          ,'MT_pre__PortConnector': []
          ,'MT_pre__Thread': []
          ,'MT_pre__PhysicalThread': []
          ,'MT_pre__LogicalThread': []
          ,'MT_pre__PortType': []
          ,'MT_pre__BASE0': []
          ,'MT_pre__CONJUGATE1': []
          ,'MT_pre__SignalType': []
          ,'MT_pre__OUT1': []
          ,'MT_pre__IN0': []
          ,'MT_pre__RoleType': []
          ,'MT_pre__FIXED0': []
          ,'MT_pre__OPTIONAL1': []
          ,'MT_pre__PLUGIN2': []
          ,'MT_pre__TransitionType': []
          ,'MT_pre__SIBLING0': []
          ,'MT_pre__IN1': []
          ,'MT_pre__OUT2': []
          ,'MT_pre__Def': []
          ,'MT_pre__Expr': []
          ,'MT_pre__Pattern': []
          ,'MT_pre__Proc': []
          ,'MT_pre__ProcDef': []
          ,'MT_pre__FuncDef': []
          ,'MT_pre__Name': []
          ,'MT_pre__PythonRef': []
          ,'MT_pre__Module': []
          ,'MT_pre__Null': []
          ,'MT_pre__Trigger_T': []
          ,'MT_pre__Listen': []
          ,'MT_pre__ConditionBranch': []
          ,'MT_pre__ListenBranch': []
          ,'MT_pre__Site': []
          ,'MT_pre__Model_T': []
          ,'MT_pre__MatchCase': []
          ,'MT_pre__Condition': []
          ,'MT_pre__New': []
          ,'MT_pre__Delay': []
          ,'MT_pre__Par': []
          ,'MT_pre__ParIndexed': []
          ,'MT_pre__Inst': []
          ,'MT_pre__LocalDef': []
          ,'MT_pre__Seq': []
          ,'MT_pre__ConditionSet': []
          ,'MT_pre__Match': []
          ,'MT_pre__Print': []
          ,'MT_pre__Attribute': []
          ,'MT_pre__Expression': []
          ,'MT_pre__Equation': []
          ,'MT_pre__Operation': []
          ,'MT_pre__Add': []
          ,'MT_pre__Subtract': []
          ,'MT_pre__Concat': []
          ,'MT_pre__Constant': []
          ,'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__paired_with': []
          ,'MT_pre__match_contains': [('0', 'N', 'Destination'), ('0', 'N', 'Destination')]
          ,'MT_pre__apply_contains': []
          ,'MT_pre__directLink_T': []
          ,'MT_pre__directLink_S': [('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__indirectLink_S': [('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__backward_link': [('0', 'N', 'Destination'), ('0', 'N', 'Destination')]
          ,'MT_pre__trace_link': [('0', 'N', 'Destination'), ('0', 'N', 'Destination')]
          ,'MT_pre__hasAttribute_S': [('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__hasAttribute_T': []
          ,'MT_pre__leftExpr': []
          ,'MT_pre__rightExpr': []
          ,'MT_pre__hasArgs': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': [('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination')] }
    self.CardinalityTable['MT_pre__OUT2']={
          'MT_pre__MatchModel': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__MetaModelElement_S': []
          ,'MT_pre__MetaModelElement_T': []
          ,'MT_pre__Element': []
          ,'MT_pre__NamedElement': []
          ,'MT_pre__Trigger_S': []
          ,'MT_pre__Action': []
          ,'MT_pre__PortRef': []
          ,'MT_pre__PortConnectorRef': []
          ,'MT_pre__StateMachineElement': []
          ,'MT_pre__Protocol': []
          ,'MT_pre__Signal': []
          ,'MT_pre__Port': []
          ,'MT_pre__Vertex': []
          ,'MT_pre__InitialPoint': []
          ,'MT_pre__EntryPoint': []
          ,'MT_pre__ExitPoint': []
          ,'MT_pre__Transition': []
          ,'MT_pre__StateMachine': []
          ,'MT_pre__State': []
          ,'MT_pre__Capsule': []
          ,'MT_pre__PackageContainer': []
          ,'MT_pre__Model_S': []
          ,'MT_pre__Package': []
          ,'MT_pre__CapsuleRole': []
          ,'MT_pre__PortConnector': []
          ,'MT_pre__Thread': []
          ,'MT_pre__PhysicalThread': []
          ,'MT_pre__LogicalThread': []
          ,'MT_pre__PortType': []
          ,'MT_pre__BASE0': []
          ,'MT_pre__CONJUGATE1': []
          ,'MT_pre__SignalType': []
          ,'MT_pre__OUT1': []
          ,'MT_pre__IN0': []
          ,'MT_pre__RoleType': []
          ,'MT_pre__FIXED0': []
          ,'MT_pre__OPTIONAL1': []
          ,'MT_pre__PLUGIN2': []
          ,'MT_pre__TransitionType': []
          ,'MT_pre__SIBLING0': []
          ,'MT_pre__IN1': []
          ,'MT_pre__OUT2': []
          ,'MT_pre__Def': []
          ,'MT_pre__Expr': []
          ,'MT_pre__Pattern': []
          ,'MT_pre__Proc': []
          ,'MT_pre__ProcDef': []
          ,'MT_pre__FuncDef': []
          ,'MT_pre__Name': []
          ,'MT_pre__PythonRef': []
          ,'MT_pre__Module': []
          ,'MT_pre__Null': []
          ,'MT_pre__Trigger_T': []
          ,'MT_pre__Listen': []
          ,'MT_pre__ConditionBranch': []
          ,'MT_pre__ListenBranch': []
          ,'MT_pre__Site': []
          ,'MT_pre__Model_T': []
          ,'MT_pre__MatchCase': []
          ,'MT_pre__Condition': []
          ,'MT_pre__New': []
          ,'MT_pre__Delay': []
          ,'MT_pre__Par': []
          ,'MT_pre__ParIndexed': []
          ,'MT_pre__Inst': []
          ,'MT_pre__LocalDef': []
          ,'MT_pre__Seq': []
          ,'MT_pre__ConditionSet': []
          ,'MT_pre__Match': []
          ,'MT_pre__Print': []
          ,'MT_pre__Attribute': []
          ,'MT_pre__Expression': []
          ,'MT_pre__Equation': []
          ,'MT_pre__Operation': []
          ,'MT_pre__Add': []
          ,'MT_pre__Subtract': []
          ,'MT_pre__Concat': []
          ,'MT_pre__Constant': []
          ,'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__paired_with': []
          ,'MT_pre__match_contains': [('0', 'N', 'Destination'), ('0', 'N', 'Destination')]
          ,'MT_pre__apply_contains': []
          ,'MT_pre__directLink_T': []
          ,'MT_pre__directLink_S': [('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__indirectLink_S': [('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__backward_link': [('0', 'N', 'Destination'), ('0', 'N', 'Destination')]
          ,'MT_pre__trace_link': [('0', 'N', 'Destination'), ('0', 'N', 'Destination')]
          ,'MT_pre__hasAttribute_S': [('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__hasAttribute_T': []
          ,'MT_pre__leftExpr': []
          ,'MT_pre__rightExpr': []
          ,'MT_pre__hasArgs': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': [('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination')] }
    self.CardinalityTable['MT_pre__Def']={
          'MT_pre__MatchModel': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__MetaModelElement_S': []
          ,'MT_pre__MetaModelElement_T': []
          ,'MT_pre__Element': []
          ,'MT_pre__NamedElement': []
          ,'MT_pre__Trigger_S': []
          ,'MT_pre__Action': []
          ,'MT_pre__PortRef': []
          ,'MT_pre__PortConnectorRef': []
          ,'MT_pre__StateMachineElement': []
          ,'MT_pre__Protocol': []
          ,'MT_pre__Signal': []
          ,'MT_pre__Port': []
          ,'MT_pre__Vertex': []
          ,'MT_pre__InitialPoint': []
          ,'MT_pre__EntryPoint': []
          ,'MT_pre__ExitPoint': []
          ,'MT_pre__Transition': []
          ,'MT_pre__StateMachine': []
          ,'MT_pre__State': []
          ,'MT_pre__Capsule': []
          ,'MT_pre__PackageContainer': []
          ,'MT_pre__Model_S': []
          ,'MT_pre__Package': []
          ,'MT_pre__CapsuleRole': []
          ,'MT_pre__PortConnector': []
          ,'MT_pre__Thread': []
          ,'MT_pre__PhysicalThread': []
          ,'MT_pre__LogicalThread': []
          ,'MT_pre__PortType': []
          ,'MT_pre__BASE0': []
          ,'MT_pre__CONJUGATE1': []
          ,'MT_pre__SignalType': []
          ,'MT_pre__OUT1': []
          ,'MT_pre__IN0': []
          ,'MT_pre__RoleType': []
          ,'MT_pre__FIXED0': []
          ,'MT_pre__OPTIONAL1': []
          ,'MT_pre__PLUGIN2': []
          ,'MT_pre__TransitionType': []
          ,'MT_pre__SIBLING0': []
          ,'MT_pre__IN1': []
          ,'MT_pre__OUT2': []
          ,'MT_pre__Def': []
          ,'MT_pre__Expr': []
          ,'MT_pre__Pattern': []
          ,'MT_pre__Proc': []
          ,'MT_pre__ProcDef': []
          ,'MT_pre__FuncDef': []
          ,'MT_pre__Name': []
          ,'MT_pre__PythonRef': []
          ,'MT_pre__Module': []
          ,'MT_pre__Null': []
          ,'MT_pre__Trigger_T': []
          ,'MT_pre__Listen': []
          ,'MT_pre__ConditionBranch': []
          ,'MT_pre__ListenBranch': []
          ,'MT_pre__Site': []
          ,'MT_pre__Model_T': []
          ,'MT_pre__MatchCase': []
          ,'MT_pre__Condition': []
          ,'MT_pre__New': []
          ,'MT_pre__Delay': []
          ,'MT_pre__Par': []
          ,'MT_pre__ParIndexed': []
          ,'MT_pre__Inst': []
          ,'MT_pre__LocalDef': []
          ,'MT_pre__Seq': []
          ,'MT_pre__ConditionSet': []
          ,'MT_pre__Match': []
          ,'MT_pre__Print': []
          ,'MT_pre__Attribute': []
          ,'MT_pre__Expression': []
          ,'MT_pre__Equation': []
          ,'MT_pre__Operation': []
          ,'MT_pre__Add': []
          ,'MT_pre__Subtract': []
          ,'MT_pre__Concat': []
          ,'MT_pre__Constant': []
          ,'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__paired_with': []
          ,'MT_pre__match_contains': []
          ,'MT_pre__apply_contains': [('0', 'N', 'Destination')]
          ,'MT_pre__directLink_T': [('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__directLink_S': []
          ,'MT_pre__indirectLink_S': []
          ,'MT_pre__backward_link': [('0', 'N', 'Source')]
          ,'MT_pre__trace_link': [('0', 'N', 'Source')]
          ,'MT_pre__hasAttribute_S': []
          ,'MT_pre__hasAttribute_T': [('0', 'N', 'Source')]
          ,'MT_pre__leftExpr': []
          ,'MT_pre__rightExpr': []
          ,'MT_pre__hasArgs': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': [('0', 'N', 'Destination'), ('0', 'N', 'Destination')] }
    self.CardinalityTable['MT_pre__Expr']={
          'MT_pre__MatchModel': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__MetaModelElement_S': []
          ,'MT_pre__MetaModelElement_T': []
          ,'MT_pre__Element': []
          ,'MT_pre__NamedElement': []
          ,'MT_pre__Trigger_S': []
          ,'MT_pre__Action': []
          ,'MT_pre__PortRef': []
          ,'MT_pre__PortConnectorRef': []
          ,'MT_pre__StateMachineElement': []
          ,'MT_pre__Protocol': []
          ,'MT_pre__Signal': []
          ,'MT_pre__Port': []
          ,'MT_pre__Vertex': []
          ,'MT_pre__InitialPoint': []
          ,'MT_pre__EntryPoint': []
          ,'MT_pre__ExitPoint': []
          ,'MT_pre__Transition': []
          ,'MT_pre__StateMachine': []
          ,'MT_pre__State': []
          ,'MT_pre__Capsule': []
          ,'MT_pre__PackageContainer': []
          ,'MT_pre__Model_S': []
          ,'MT_pre__Package': []
          ,'MT_pre__CapsuleRole': []
          ,'MT_pre__PortConnector': []
          ,'MT_pre__Thread': []
          ,'MT_pre__PhysicalThread': []
          ,'MT_pre__LogicalThread': []
          ,'MT_pre__PortType': []
          ,'MT_pre__BASE0': []
          ,'MT_pre__CONJUGATE1': []
          ,'MT_pre__SignalType': []
          ,'MT_pre__OUT1': []
          ,'MT_pre__IN0': []
          ,'MT_pre__RoleType': []
          ,'MT_pre__FIXED0': []
          ,'MT_pre__OPTIONAL1': []
          ,'MT_pre__PLUGIN2': []
          ,'MT_pre__TransitionType': []
          ,'MT_pre__SIBLING0': []
          ,'MT_pre__IN1': []
          ,'MT_pre__OUT2': []
          ,'MT_pre__Def': []
          ,'MT_pre__Expr': []
          ,'MT_pre__Pattern': []
          ,'MT_pre__Proc': []
          ,'MT_pre__ProcDef': []
          ,'MT_pre__FuncDef': []
          ,'MT_pre__Name': []
          ,'MT_pre__PythonRef': []
          ,'MT_pre__Module': []
          ,'MT_pre__Null': []
          ,'MT_pre__Trigger_T': []
          ,'MT_pre__Listen': []
          ,'MT_pre__ConditionBranch': []
          ,'MT_pre__ListenBranch': []
          ,'MT_pre__Site': []
          ,'MT_pre__Model_T': []
          ,'MT_pre__MatchCase': []
          ,'MT_pre__Condition': []
          ,'MT_pre__New': []
          ,'MT_pre__Delay': []
          ,'MT_pre__Par': []
          ,'MT_pre__ParIndexed': []
          ,'MT_pre__Inst': []
          ,'MT_pre__LocalDef': []
          ,'MT_pre__Seq': []
          ,'MT_pre__ConditionSet': []
          ,'MT_pre__Match': []
          ,'MT_pre__Print': []
          ,'MT_pre__Attribute': []
          ,'MT_pre__Expression': []
          ,'MT_pre__Equation': []
          ,'MT_pre__Operation': []
          ,'MT_pre__Add': []
          ,'MT_pre__Subtract': []
          ,'MT_pre__Concat': []
          ,'MT_pre__Constant': []
          ,'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__paired_with': []
          ,'MT_pre__match_contains': []
          ,'MT_pre__apply_contains': [('0', 'N', 'Destination')]
          ,'MT_pre__directLink_T': [('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__directLink_S': []
          ,'MT_pre__indirectLink_S': []
          ,'MT_pre__backward_link': [('0', 'N', 'Source')]
          ,'MT_pre__trace_link': [('0', 'N', 'Source')]
          ,'MT_pre__hasAttribute_S': []
          ,'MT_pre__hasAttribute_T': [('0', 'N', 'Source')]
          ,'MT_pre__leftExpr': []
          ,'MT_pre__rightExpr': []
          ,'MT_pre__hasArgs': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': [('0', 'N', 'Destination'), ('0', 'N', 'Destination')] }
    self.CardinalityTable['MT_pre__Pattern']={
          'MT_pre__MatchModel': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__MetaModelElement_S': []
          ,'MT_pre__MetaModelElement_T': []
          ,'MT_pre__Element': []
          ,'MT_pre__NamedElement': []
          ,'MT_pre__Trigger_S': []
          ,'MT_pre__Action': []
          ,'MT_pre__PortRef': []
          ,'MT_pre__PortConnectorRef': []
          ,'MT_pre__StateMachineElement': []
          ,'MT_pre__Protocol': []
          ,'MT_pre__Signal': []
          ,'MT_pre__Port': []
          ,'MT_pre__Vertex': []
          ,'MT_pre__InitialPoint': []
          ,'MT_pre__EntryPoint': []
          ,'MT_pre__ExitPoint': []
          ,'MT_pre__Transition': []
          ,'MT_pre__StateMachine': []
          ,'MT_pre__State': []
          ,'MT_pre__Capsule': []
          ,'MT_pre__PackageContainer': []
          ,'MT_pre__Model_S': []
          ,'MT_pre__Package': []
          ,'MT_pre__CapsuleRole': []
          ,'MT_pre__PortConnector': []
          ,'MT_pre__Thread': []
          ,'MT_pre__PhysicalThread': []
          ,'MT_pre__LogicalThread': []
          ,'MT_pre__PortType': []
          ,'MT_pre__BASE0': []
          ,'MT_pre__CONJUGATE1': []
          ,'MT_pre__SignalType': []
          ,'MT_pre__OUT1': []
          ,'MT_pre__IN0': []
          ,'MT_pre__RoleType': []
          ,'MT_pre__FIXED0': []
          ,'MT_pre__OPTIONAL1': []
          ,'MT_pre__PLUGIN2': []
          ,'MT_pre__TransitionType': []
          ,'MT_pre__SIBLING0': []
          ,'MT_pre__IN1': []
          ,'MT_pre__OUT2': []
          ,'MT_pre__Def': []
          ,'MT_pre__Expr': []
          ,'MT_pre__Pattern': []
          ,'MT_pre__Proc': []
          ,'MT_pre__ProcDef': []
          ,'MT_pre__FuncDef': []
          ,'MT_pre__Name': []
          ,'MT_pre__PythonRef': []
          ,'MT_pre__Module': []
          ,'MT_pre__Null': []
          ,'MT_pre__Trigger_T': []
          ,'MT_pre__Listen': []
          ,'MT_pre__ConditionBranch': []
          ,'MT_pre__ListenBranch': []
          ,'MT_pre__Site': []
          ,'MT_pre__Model_T': []
          ,'MT_pre__MatchCase': []
          ,'MT_pre__Condition': []
          ,'MT_pre__New': []
          ,'MT_pre__Delay': []
          ,'MT_pre__Par': []
          ,'MT_pre__ParIndexed': []
          ,'MT_pre__Inst': []
          ,'MT_pre__LocalDef': []
          ,'MT_pre__Seq': []
          ,'MT_pre__ConditionSet': []
          ,'MT_pre__Match': []
          ,'MT_pre__Print': []
          ,'MT_pre__Attribute': []
          ,'MT_pre__Expression': []
          ,'MT_pre__Equation': []
          ,'MT_pre__Operation': []
          ,'MT_pre__Add': []
          ,'MT_pre__Subtract': []
          ,'MT_pre__Concat': []
          ,'MT_pre__Constant': []
          ,'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__paired_with': []
          ,'MT_pre__match_contains': []
          ,'MT_pre__apply_contains': [('0', 'N', 'Destination')]
          ,'MT_pre__directLink_T': [('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__directLink_S': []
          ,'MT_pre__indirectLink_S': []
          ,'MT_pre__backward_link': [('0', 'N', 'Source')]
          ,'MT_pre__trace_link': [('0', 'N', 'Source')]
          ,'MT_pre__hasAttribute_S': []
          ,'MT_pre__hasAttribute_T': [('0', 'N', 'Source')]
          ,'MT_pre__leftExpr': []
          ,'MT_pre__rightExpr': []
          ,'MT_pre__hasArgs': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': [('0', 'N', 'Destination'), ('0', 'N', 'Destination')] }
    self.CardinalityTable['MT_pre__Proc']={
          'MT_pre__MatchModel': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__MetaModelElement_S': []
          ,'MT_pre__MetaModelElement_T': []
          ,'MT_pre__Element': []
          ,'MT_pre__NamedElement': []
          ,'MT_pre__Trigger_S': []
          ,'MT_pre__Action': []
          ,'MT_pre__PortRef': []
          ,'MT_pre__PortConnectorRef': []
          ,'MT_pre__StateMachineElement': []
          ,'MT_pre__Protocol': []
          ,'MT_pre__Signal': []
          ,'MT_pre__Port': []
          ,'MT_pre__Vertex': []
          ,'MT_pre__InitialPoint': []
          ,'MT_pre__EntryPoint': []
          ,'MT_pre__ExitPoint': []
          ,'MT_pre__Transition': []
          ,'MT_pre__StateMachine': []
          ,'MT_pre__State': []
          ,'MT_pre__Capsule': []
          ,'MT_pre__PackageContainer': []
          ,'MT_pre__Model_S': []
          ,'MT_pre__Package': []
          ,'MT_pre__CapsuleRole': []
          ,'MT_pre__PortConnector': []
          ,'MT_pre__Thread': []
          ,'MT_pre__PhysicalThread': []
          ,'MT_pre__LogicalThread': []
          ,'MT_pre__PortType': []
          ,'MT_pre__BASE0': []
          ,'MT_pre__CONJUGATE1': []
          ,'MT_pre__SignalType': []
          ,'MT_pre__OUT1': []
          ,'MT_pre__IN0': []
          ,'MT_pre__RoleType': []
          ,'MT_pre__FIXED0': []
          ,'MT_pre__OPTIONAL1': []
          ,'MT_pre__PLUGIN2': []
          ,'MT_pre__TransitionType': []
          ,'MT_pre__SIBLING0': []
          ,'MT_pre__IN1': []
          ,'MT_pre__OUT2': []
          ,'MT_pre__Def': []
          ,'MT_pre__Expr': []
          ,'MT_pre__Pattern': []
          ,'MT_pre__Proc': []
          ,'MT_pre__ProcDef': []
          ,'MT_pre__FuncDef': []
          ,'MT_pre__Name': []
          ,'MT_pre__PythonRef': []
          ,'MT_pre__Module': []
          ,'MT_pre__Null': []
          ,'MT_pre__Trigger_T': []
          ,'MT_pre__Listen': []
          ,'MT_pre__ConditionBranch': []
          ,'MT_pre__ListenBranch': []
          ,'MT_pre__Site': []
          ,'MT_pre__Model_T': []
          ,'MT_pre__MatchCase': []
          ,'MT_pre__Condition': []
          ,'MT_pre__New': []
          ,'MT_pre__Delay': []
          ,'MT_pre__Par': []
          ,'MT_pre__ParIndexed': []
          ,'MT_pre__Inst': []
          ,'MT_pre__LocalDef': []
          ,'MT_pre__Seq': []
          ,'MT_pre__ConditionSet': []
          ,'MT_pre__Match': []
          ,'MT_pre__Print': []
          ,'MT_pre__Attribute': []
          ,'MT_pre__Expression': []
          ,'MT_pre__Equation': []
          ,'MT_pre__Operation': []
          ,'MT_pre__Add': []
          ,'MT_pre__Subtract': []
          ,'MT_pre__Concat': []
          ,'MT_pre__Constant': []
          ,'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__paired_with': []
          ,'MT_pre__match_contains': []
          ,'MT_pre__apply_contains': [('0', 'N', 'Destination')]
          ,'MT_pre__directLink_T': [('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__directLink_S': []
          ,'MT_pre__indirectLink_S': []
          ,'MT_pre__backward_link': [('0', 'N', 'Source')]
          ,'MT_pre__trace_link': [('0', 'N', 'Source')]
          ,'MT_pre__hasAttribute_S': []
          ,'MT_pre__hasAttribute_T': [('0', 'N', 'Source')]
          ,'MT_pre__leftExpr': []
          ,'MT_pre__rightExpr': []
          ,'MT_pre__hasArgs': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': [('0', 'N', 'Destination'), ('0', 'N', 'Destination')] }
    self.CardinalityTable['MT_pre__ProcDef']={
          'MT_pre__MatchModel': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__MetaModelElement_S': []
          ,'MT_pre__MetaModelElement_T': []
          ,'MT_pre__Element': []
          ,'MT_pre__NamedElement': []
          ,'MT_pre__Trigger_S': []
          ,'MT_pre__Action': []
          ,'MT_pre__PortRef': []
          ,'MT_pre__PortConnectorRef': []
          ,'MT_pre__StateMachineElement': []
          ,'MT_pre__Protocol': []
          ,'MT_pre__Signal': []
          ,'MT_pre__Port': []
          ,'MT_pre__Vertex': []
          ,'MT_pre__InitialPoint': []
          ,'MT_pre__EntryPoint': []
          ,'MT_pre__ExitPoint': []
          ,'MT_pre__Transition': []
          ,'MT_pre__StateMachine': []
          ,'MT_pre__State': []
          ,'MT_pre__Capsule': []
          ,'MT_pre__PackageContainer': []
          ,'MT_pre__Model_S': []
          ,'MT_pre__Package': []
          ,'MT_pre__CapsuleRole': []
          ,'MT_pre__PortConnector': []
          ,'MT_pre__Thread': []
          ,'MT_pre__PhysicalThread': []
          ,'MT_pre__LogicalThread': []
          ,'MT_pre__PortType': []
          ,'MT_pre__BASE0': []
          ,'MT_pre__CONJUGATE1': []
          ,'MT_pre__SignalType': []
          ,'MT_pre__OUT1': []
          ,'MT_pre__IN0': []
          ,'MT_pre__RoleType': []
          ,'MT_pre__FIXED0': []
          ,'MT_pre__OPTIONAL1': []
          ,'MT_pre__PLUGIN2': []
          ,'MT_pre__TransitionType': []
          ,'MT_pre__SIBLING0': []
          ,'MT_pre__IN1': []
          ,'MT_pre__OUT2': []
          ,'MT_pre__Def': []
          ,'MT_pre__Expr': []
          ,'MT_pre__Pattern': []
          ,'MT_pre__Proc': []
          ,'MT_pre__ProcDef': []
          ,'MT_pre__FuncDef': []
          ,'MT_pre__Name': []
          ,'MT_pre__PythonRef': []
          ,'MT_pre__Module': []
          ,'MT_pre__Null': []
          ,'MT_pre__Trigger_T': []
          ,'MT_pre__Listen': []
          ,'MT_pre__ConditionBranch': []
          ,'MT_pre__ListenBranch': []
          ,'MT_pre__Site': []
          ,'MT_pre__Model_T': []
          ,'MT_pre__MatchCase': []
          ,'MT_pre__Condition': []
          ,'MT_pre__New': []
          ,'MT_pre__Delay': []
          ,'MT_pre__Par': []
          ,'MT_pre__ParIndexed': []
          ,'MT_pre__Inst': []
          ,'MT_pre__LocalDef': []
          ,'MT_pre__Seq': []
          ,'MT_pre__ConditionSet': []
          ,'MT_pre__Match': []
          ,'MT_pre__Print': []
          ,'MT_pre__Attribute': []
          ,'MT_pre__Expression': []
          ,'MT_pre__Equation': []
          ,'MT_pre__Operation': []
          ,'MT_pre__Add': []
          ,'MT_pre__Subtract': []
          ,'MT_pre__Concat': []
          ,'MT_pre__Constant': []
          ,'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__paired_with': []
          ,'MT_pre__match_contains': []
          ,'MT_pre__apply_contains': [('0', 'N', 'Destination'), ('0', 'N', 'Destination')]
          ,'MT_pre__directLink_T': [('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__directLink_S': []
          ,'MT_pre__indirectLink_S': []
          ,'MT_pre__backward_link': [('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__trace_link': [('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__hasAttribute_S': []
          ,'MT_pre__hasAttribute_T': [('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__leftExpr': []
          ,'MT_pre__rightExpr': []
          ,'MT_pre__hasArgs': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': [('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination')] }
    self.CardinalityTable['MT_pre__FuncDef']={
          'MT_pre__MatchModel': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__MetaModelElement_S': []
          ,'MT_pre__MetaModelElement_T': []
          ,'MT_pre__Element': []
          ,'MT_pre__NamedElement': []
          ,'MT_pre__Trigger_S': []
          ,'MT_pre__Action': []
          ,'MT_pre__PortRef': []
          ,'MT_pre__PortConnectorRef': []
          ,'MT_pre__StateMachineElement': []
          ,'MT_pre__Protocol': []
          ,'MT_pre__Signal': []
          ,'MT_pre__Port': []
          ,'MT_pre__Vertex': []
          ,'MT_pre__InitialPoint': []
          ,'MT_pre__EntryPoint': []
          ,'MT_pre__ExitPoint': []
          ,'MT_pre__Transition': []
          ,'MT_pre__StateMachine': []
          ,'MT_pre__State': []
          ,'MT_pre__Capsule': []
          ,'MT_pre__PackageContainer': []
          ,'MT_pre__Model_S': []
          ,'MT_pre__Package': []
          ,'MT_pre__CapsuleRole': []
          ,'MT_pre__PortConnector': []
          ,'MT_pre__Thread': []
          ,'MT_pre__PhysicalThread': []
          ,'MT_pre__LogicalThread': []
          ,'MT_pre__PortType': []
          ,'MT_pre__BASE0': []
          ,'MT_pre__CONJUGATE1': []
          ,'MT_pre__SignalType': []
          ,'MT_pre__OUT1': []
          ,'MT_pre__IN0': []
          ,'MT_pre__RoleType': []
          ,'MT_pre__FIXED0': []
          ,'MT_pre__OPTIONAL1': []
          ,'MT_pre__PLUGIN2': []
          ,'MT_pre__TransitionType': []
          ,'MT_pre__SIBLING0': []
          ,'MT_pre__IN1': []
          ,'MT_pre__OUT2': []
          ,'MT_pre__Def': []
          ,'MT_pre__Expr': []
          ,'MT_pre__Pattern': []
          ,'MT_pre__Proc': []
          ,'MT_pre__ProcDef': []
          ,'MT_pre__FuncDef': []
          ,'MT_pre__Name': []
          ,'MT_pre__PythonRef': []
          ,'MT_pre__Module': []
          ,'MT_pre__Null': []
          ,'MT_pre__Trigger_T': []
          ,'MT_pre__Listen': []
          ,'MT_pre__ConditionBranch': []
          ,'MT_pre__ListenBranch': []
          ,'MT_pre__Site': []
          ,'MT_pre__Model_T': []
          ,'MT_pre__MatchCase': []
          ,'MT_pre__Condition': []
          ,'MT_pre__New': []
          ,'MT_pre__Delay': []
          ,'MT_pre__Par': []
          ,'MT_pre__ParIndexed': []
          ,'MT_pre__Inst': []
          ,'MT_pre__LocalDef': []
          ,'MT_pre__Seq': []
          ,'MT_pre__ConditionSet': []
          ,'MT_pre__Match': []
          ,'MT_pre__Print': []
          ,'MT_pre__Attribute': []
          ,'MT_pre__Expression': []
          ,'MT_pre__Equation': []
          ,'MT_pre__Operation': []
          ,'MT_pre__Add': []
          ,'MT_pre__Subtract': []
          ,'MT_pre__Concat': []
          ,'MT_pre__Constant': []
          ,'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__paired_with': []
          ,'MT_pre__match_contains': []
          ,'MT_pre__apply_contains': [('0', 'N', 'Destination'), ('0', 'N', 'Destination')]
          ,'MT_pre__directLink_T': [('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__directLink_S': []
          ,'MT_pre__indirectLink_S': []
          ,'MT_pre__backward_link': [('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__trace_link': [('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__hasAttribute_S': []
          ,'MT_pre__hasAttribute_T': [('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__leftExpr': []
          ,'MT_pre__rightExpr': []
          ,'MT_pre__hasArgs': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': [('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination')] }
    self.CardinalityTable['MT_pre__Name']={
          'MT_pre__MatchModel': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__MetaModelElement_S': []
          ,'MT_pre__MetaModelElement_T': []
          ,'MT_pre__Element': []
          ,'MT_pre__NamedElement': []
          ,'MT_pre__Trigger_S': []
          ,'MT_pre__Action': []
          ,'MT_pre__PortRef': []
          ,'MT_pre__PortConnectorRef': []
          ,'MT_pre__StateMachineElement': []
          ,'MT_pre__Protocol': []
          ,'MT_pre__Signal': []
          ,'MT_pre__Port': []
          ,'MT_pre__Vertex': []
          ,'MT_pre__InitialPoint': []
          ,'MT_pre__EntryPoint': []
          ,'MT_pre__ExitPoint': []
          ,'MT_pre__Transition': []
          ,'MT_pre__StateMachine': []
          ,'MT_pre__State': []
          ,'MT_pre__Capsule': []
          ,'MT_pre__PackageContainer': []
          ,'MT_pre__Model_S': []
          ,'MT_pre__Package': []
          ,'MT_pre__CapsuleRole': []
          ,'MT_pre__PortConnector': []
          ,'MT_pre__Thread': []
          ,'MT_pre__PhysicalThread': []
          ,'MT_pre__LogicalThread': []
          ,'MT_pre__PortType': []
          ,'MT_pre__BASE0': []
          ,'MT_pre__CONJUGATE1': []
          ,'MT_pre__SignalType': []
          ,'MT_pre__OUT1': []
          ,'MT_pre__IN0': []
          ,'MT_pre__RoleType': []
          ,'MT_pre__FIXED0': []
          ,'MT_pre__OPTIONAL1': []
          ,'MT_pre__PLUGIN2': []
          ,'MT_pre__TransitionType': []
          ,'MT_pre__SIBLING0': []
          ,'MT_pre__IN1': []
          ,'MT_pre__OUT2': []
          ,'MT_pre__Def': []
          ,'MT_pre__Expr': []
          ,'MT_pre__Pattern': []
          ,'MT_pre__Proc': []
          ,'MT_pre__ProcDef': []
          ,'MT_pre__FuncDef': []
          ,'MT_pre__Name': []
          ,'MT_pre__PythonRef': []
          ,'MT_pre__Module': []
          ,'MT_pre__Null': []
          ,'MT_pre__Trigger_T': []
          ,'MT_pre__Listen': []
          ,'MT_pre__ConditionBranch': []
          ,'MT_pre__ListenBranch': []
          ,'MT_pre__Site': []
          ,'MT_pre__Model_T': []
          ,'MT_pre__MatchCase': []
          ,'MT_pre__Condition': []
          ,'MT_pre__New': []
          ,'MT_pre__Delay': []
          ,'MT_pre__Par': []
          ,'MT_pre__ParIndexed': []
          ,'MT_pre__Inst': []
          ,'MT_pre__LocalDef': []
          ,'MT_pre__Seq': []
          ,'MT_pre__ConditionSet': []
          ,'MT_pre__Match': []
          ,'MT_pre__Print': []
          ,'MT_pre__Attribute': []
          ,'MT_pre__Expression': []
          ,'MT_pre__Equation': []
          ,'MT_pre__Operation': []
          ,'MT_pre__Add': []
          ,'MT_pre__Subtract': []
          ,'MT_pre__Concat': []
          ,'MT_pre__Constant': []
          ,'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__paired_with': []
          ,'MT_pre__match_contains': []
          ,'MT_pre__apply_contains': [('0', 'N', 'Destination')]
          ,'MT_pre__directLink_T': [('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__directLink_S': []
          ,'MT_pre__indirectLink_S': []
          ,'MT_pre__backward_link': [('0', 'N', 'Source')]
          ,'MT_pre__trace_link': [('0', 'N', 'Source')]
          ,'MT_pre__hasAttribute_S': []
          ,'MT_pre__hasAttribute_T': [('0', 'N', 'Source')]
          ,'MT_pre__leftExpr': []
          ,'MT_pre__rightExpr': []
          ,'MT_pre__hasArgs': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': [('0', 'N', 'Destination'), ('0', 'N', 'Destination')] }
    self.CardinalityTable['MT_pre__PythonRef']={
          'MT_pre__MatchModel': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__MetaModelElement_S': []
          ,'MT_pre__MetaModelElement_T': []
          ,'MT_pre__Element': []
          ,'MT_pre__NamedElement': []
          ,'MT_pre__Trigger_S': []
          ,'MT_pre__Action': []
          ,'MT_pre__PortRef': []
          ,'MT_pre__PortConnectorRef': []
          ,'MT_pre__StateMachineElement': []
          ,'MT_pre__Protocol': []
          ,'MT_pre__Signal': []
          ,'MT_pre__Port': []
          ,'MT_pre__Vertex': []
          ,'MT_pre__InitialPoint': []
          ,'MT_pre__EntryPoint': []
          ,'MT_pre__ExitPoint': []
          ,'MT_pre__Transition': []
          ,'MT_pre__StateMachine': []
          ,'MT_pre__State': []
          ,'MT_pre__Capsule': []
          ,'MT_pre__PackageContainer': []
          ,'MT_pre__Model_S': []
          ,'MT_pre__Package': []
          ,'MT_pre__CapsuleRole': []
          ,'MT_pre__PortConnector': []
          ,'MT_pre__Thread': []
          ,'MT_pre__PhysicalThread': []
          ,'MT_pre__LogicalThread': []
          ,'MT_pre__PortType': []
          ,'MT_pre__BASE0': []
          ,'MT_pre__CONJUGATE1': []
          ,'MT_pre__SignalType': []
          ,'MT_pre__OUT1': []
          ,'MT_pre__IN0': []
          ,'MT_pre__RoleType': []
          ,'MT_pre__FIXED0': []
          ,'MT_pre__OPTIONAL1': []
          ,'MT_pre__PLUGIN2': []
          ,'MT_pre__TransitionType': []
          ,'MT_pre__SIBLING0': []
          ,'MT_pre__IN1': []
          ,'MT_pre__OUT2': []
          ,'MT_pre__Def': []
          ,'MT_pre__Expr': []
          ,'MT_pre__Pattern': []
          ,'MT_pre__Proc': []
          ,'MT_pre__ProcDef': []
          ,'MT_pre__FuncDef': []
          ,'MT_pre__Name': []
          ,'MT_pre__PythonRef': []
          ,'MT_pre__Module': []
          ,'MT_pre__Null': []
          ,'MT_pre__Trigger_T': []
          ,'MT_pre__Listen': []
          ,'MT_pre__ConditionBranch': []
          ,'MT_pre__ListenBranch': []
          ,'MT_pre__Site': []
          ,'MT_pre__Model_T': []
          ,'MT_pre__MatchCase': []
          ,'MT_pre__Condition': []
          ,'MT_pre__New': []
          ,'MT_pre__Delay': []
          ,'MT_pre__Par': []
          ,'MT_pre__ParIndexed': []
          ,'MT_pre__Inst': []
          ,'MT_pre__LocalDef': []
          ,'MT_pre__Seq': []
          ,'MT_pre__ConditionSet': []
          ,'MT_pre__Match': []
          ,'MT_pre__Print': []
          ,'MT_pre__Attribute': []
          ,'MT_pre__Expression': []
          ,'MT_pre__Equation': []
          ,'MT_pre__Operation': []
          ,'MT_pre__Add': []
          ,'MT_pre__Subtract': []
          ,'MT_pre__Concat': []
          ,'MT_pre__Constant': []
          ,'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__paired_with': []
          ,'MT_pre__match_contains': []
          ,'MT_pre__apply_contains': [('0', 'N', 'Destination'), ('0', 'N', 'Destination')]
          ,'MT_pre__directLink_T': [('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__directLink_S': []
          ,'MT_pre__indirectLink_S': []
          ,'MT_pre__backward_link': [('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__trace_link': [('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__hasAttribute_S': []
          ,'MT_pre__hasAttribute_T': [('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__leftExpr': []
          ,'MT_pre__rightExpr': []
          ,'MT_pre__hasArgs': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': [('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination')] }
    self.CardinalityTable['MT_pre__Module']={
          'MT_pre__MatchModel': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__MetaModelElement_S': []
          ,'MT_pre__MetaModelElement_T': []
          ,'MT_pre__Element': []
          ,'MT_pre__NamedElement': []
          ,'MT_pre__Trigger_S': []
          ,'MT_pre__Action': []
          ,'MT_pre__PortRef': []
          ,'MT_pre__PortConnectorRef': []
          ,'MT_pre__StateMachineElement': []
          ,'MT_pre__Protocol': []
          ,'MT_pre__Signal': []
          ,'MT_pre__Port': []
          ,'MT_pre__Vertex': []
          ,'MT_pre__InitialPoint': []
          ,'MT_pre__EntryPoint': []
          ,'MT_pre__ExitPoint': []
          ,'MT_pre__Transition': []
          ,'MT_pre__StateMachine': []
          ,'MT_pre__State': []
          ,'MT_pre__Capsule': []
          ,'MT_pre__PackageContainer': []
          ,'MT_pre__Model_S': []
          ,'MT_pre__Package': []
          ,'MT_pre__CapsuleRole': []
          ,'MT_pre__PortConnector': []
          ,'MT_pre__Thread': []
          ,'MT_pre__PhysicalThread': []
          ,'MT_pre__LogicalThread': []
          ,'MT_pre__PortType': []
          ,'MT_pre__BASE0': []
          ,'MT_pre__CONJUGATE1': []
          ,'MT_pre__SignalType': []
          ,'MT_pre__OUT1': []
          ,'MT_pre__IN0': []
          ,'MT_pre__RoleType': []
          ,'MT_pre__FIXED0': []
          ,'MT_pre__OPTIONAL1': []
          ,'MT_pre__PLUGIN2': []
          ,'MT_pre__TransitionType': []
          ,'MT_pre__SIBLING0': []
          ,'MT_pre__IN1': []
          ,'MT_pre__OUT2': []
          ,'MT_pre__Def': []
          ,'MT_pre__Expr': []
          ,'MT_pre__Pattern': []
          ,'MT_pre__Proc': []
          ,'MT_pre__ProcDef': []
          ,'MT_pre__FuncDef': []
          ,'MT_pre__Name': []
          ,'MT_pre__PythonRef': []
          ,'MT_pre__Module': []
          ,'MT_pre__Null': []
          ,'MT_pre__Trigger_T': []
          ,'MT_pre__Listen': []
          ,'MT_pre__ConditionBranch': []
          ,'MT_pre__ListenBranch': []
          ,'MT_pre__Site': []
          ,'MT_pre__Model_T': []
          ,'MT_pre__MatchCase': []
          ,'MT_pre__Condition': []
          ,'MT_pre__New': []
          ,'MT_pre__Delay': []
          ,'MT_pre__Par': []
          ,'MT_pre__ParIndexed': []
          ,'MT_pre__Inst': []
          ,'MT_pre__LocalDef': []
          ,'MT_pre__Seq': []
          ,'MT_pre__ConditionSet': []
          ,'MT_pre__Match': []
          ,'MT_pre__Print': []
          ,'MT_pre__Attribute': []
          ,'MT_pre__Expression': []
          ,'MT_pre__Equation': []
          ,'MT_pre__Operation': []
          ,'MT_pre__Add': []
          ,'MT_pre__Subtract': []
          ,'MT_pre__Concat': []
          ,'MT_pre__Constant': []
          ,'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__paired_with': []
          ,'MT_pre__match_contains': []
          ,'MT_pre__apply_contains': [('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination')]
          ,'MT_pre__directLink_T': [('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__directLink_S': []
          ,'MT_pre__indirectLink_S': []
          ,'MT_pre__backward_link': [('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__trace_link': [('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__hasAttribute_S': []
          ,'MT_pre__hasAttribute_T': [('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__leftExpr': []
          ,'MT_pre__rightExpr': []
          ,'MT_pre__hasArgs': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': [('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination')] }
    self.CardinalityTable['MT_pre__Null']={
          'MT_pre__MatchModel': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__MetaModelElement_S': []
          ,'MT_pre__MetaModelElement_T': []
          ,'MT_pre__Element': []
          ,'MT_pre__NamedElement': []
          ,'MT_pre__Trigger_S': []
          ,'MT_pre__Action': []
          ,'MT_pre__PortRef': []
          ,'MT_pre__PortConnectorRef': []
          ,'MT_pre__StateMachineElement': []
          ,'MT_pre__Protocol': []
          ,'MT_pre__Signal': []
          ,'MT_pre__Port': []
          ,'MT_pre__Vertex': []
          ,'MT_pre__InitialPoint': []
          ,'MT_pre__EntryPoint': []
          ,'MT_pre__ExitPoint': []
          ,'MT_pre__Transition': []
          ,'MT_pre__StateMachine': []
          ,'MT_pre__State': []
          ,'MT_pre__Capsule': []
          ,'MT_pre__PackageContainer': []
          ,'MT_pre__Model_S': []
          ,'MT_pre__Package': []
          ,'MT_pre__CapsuleRole': []
          ,'MT_pre__PortConnector': []
          ,'MT_pre__Thread': []
          ,'MT_pre__PhysicalThread': []
          ,'MT_pre__LogicalThread': []
          ,'MT_pre__PortType': []
          ,'MT_pre__BASE0': []
          ,'MT_pre__CONJUGATE1': []
          ,'MT_pre__SignalType': []
          ,'MT_pre__OUT1': []
          ,'MT_pre__IN0': []
          ,'MT_pre__RoleType': []
          ,'MT_pre__FIXED0': []
          ,'MT_pre__OPTIONAL1': []
          ,'MT_pre__PLUGIN2': []
          ,'MT_pre__TransitionType': []
          ,'MT_pre__SIBLING0': []
          ,'MT_pre__IN1': []
          ,'MT_pre__OUT2': []
          ,'MT_pre__Def': []
          ,'MT_pre__Expr': []
          ,'MT_pre__Pattern': []
          ,'MT_pre__Proc': []
          ,'MT_pre__ProcDef': []
          ,'MT_pre__FuncDef': []
          ,'MT_pre__Name': []
          ,'MT_pre__PythonRef': []
          ,'MT_pre__Module': []
          ,'MT_pre__Null': []
          ,'MT_pre__Trigger_T': []
          ,'MT_pre__Listen': []
          ,'MT_pre__ConditionBranch': []
          ,'MT_pre__ListenBranch': []
          ,'MT_pre__Site': []
          ,'MT_pre__Model_T': []
          ,'MT_pre__MatchCase': []
          ,'MT_pre__Condition': []
          ,'MT_pre__New': []
          ,'MT_pre__Delay': []
          ,'MT_pre__Par': []
          ,'MT_pre__ParIndexed': []
          ,'MT_pre__Inst': []
          ,'MT_pre__LocalDef': []
          ,'MT_pre__Seq': []
          ,'MT_pre__ConditionSet': []
          ,'MT_pre__Match': []
          ,'MT_pre__Print': []
          ,'MT_pre__Attribute': []
          ,'MT_pre__Expression': []
          ,'MT_pre__Equation': []
          ,'MT_pre__Operation': []
          ,'MT_pre__Add': []
          ,'MT_pre__Subtract': []
          ,'MT_pre__Concat': []
          ,'MT_pre__Constant': []
          ,'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__paired_with': []
          ,'MT_pre__match_contains': []
          ,'MT_pre__apply_contains': [('0', 'N', 'Destination'), ('0', 'N', 'Destination')]
          ,'MT_pre__directLink_T': [('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__directLink_S': []
          ,'MT_pre__indirectLink_S': []
          ,'MT_pre__backward_link': [('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__trace_link': [('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__hasAttribute_S': []
          ,'MT_pre__hasAttribute_T': [('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__leftExpr': []
          ,'MT_pre__rightExpr': []
          ,'MT_pre__hasArgs': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': [('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination')] }
    self.CardinalityTable['MT_pre__Trigger_T']={
          'MT_pre__MatchModel': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__MetaModelElement_S': []
          ,'MT_pre__MetaModelElement_T': []
          ,'MT_pre__Element': []
          ,'MT_pre__NamedElement': []
          ,'MT_pre__Trigger_S': []
          ,'MT_pre__Action': []
          ,'MT_pre__PortRef': []
          ,'MT_pre__PortConnectorRef': []
          ,'MT_pre__StateMachineElement': []
          ,'MT_pre__Protocol': []
          ,'MT_pre__Signal': []
          ,'MT_pre__Port': []
          ,'MT_pre__Vertex': []
          ,'MT_pre__InitialPoint': []
          ,'MT_pre__EntryPoint': []
          ,'MT_pre__ExitPoint': []
          ,'MT_pre__Transition': []
          ,'MT_pre__StateMachine': []
          ,'MT_pre__State': []
          ,'MT_pre__Capsule': []
          ,'MT_pre__PackageContainer': []
          ,'MT_pre__Model_S': []
          ,'MT_pre__Package': []
          ,'MT_pre__CapsuleRole': []
          ,'MT_pre__PortConnector': []
          ,'MT_pre__Thread': []
          ,'MT_pre__PhysicalThread': []
          ,'MT_pre__LogicalThread': []
          ,'MT_pre__PortType': []
          ,'MT_pre__BASE0': []
          ,'MT_pre__CONJUGATE1': []
          ,'MT_pre__SignalType': []
          ,'MT_pre__OUT1': []
          ,'MT_pre__IN0': []
          ,'MT_pre__RoleType': []
          ,'MT_pre__FIXED0': []
          ,'MT_pre__OPTIONAL1': []
          ,'MT_pre__PLUGIN2': []
          ,'MT_pre__TransitionType': []
          ,'MT_pre__SIBLING0': []
          ,'MT_pre__IN1': []
          ,'MT_pre__OUT2': []
          ,'MT_pre__Def': []
          ,'MT_pre__Expr': []
          ,'MT_pre__Pattern': []
          ,'MT_pre__Proc': []
          ,'MT_pre__ProcDef': []
          ,'MT_pre__FuncDef': []
          ,'MT_pre__Name': []
          ,'MT_pre__PythonRef': []
          ,'MT_pre__Module': []
          ,'MT_pre__Null': []
          ,'MT_pre__Trigger_T': []
          ,'MT_pre__Listen': []
          ,'MT_pre__ConditionBranch': []
          ,'MT_pre__ListenBranch': []
          ,'MT_pre__Site': []
          ,'MT_pre__Model_T': []
          ,'MT_pre__MatchCase': []
          ,'MT_pre__Condition': []
          ,'MT_pre__New': []
          ,'MT_pre__Delay': []
          ,'MT_pre__Par': []
          ,'MT_pre__ParIndexed': []
          ,'MT_pre__Inst': []
          ,'MT_pre__LocalDef': []
          ,'MT_pre__Seq': []
          ,'MT_pre__ConditionSet': []
          ,'MT_pre__Match': []
          ,'MT_pre__Print': []
          ,'MT_pre__Attribute': []
          ,'MT_pre__Expression': []
          ,'MT_pre__Equation': []
          ,'MT_pre__Operation': []
          ,'MT_pre__Add': []
          ,'MT_pre__Subtract': []
          ,'MT_pre__Concat': []
          ,'MT_pre__Constant': []
          ,'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__paired_with': []
          ,'MT_pre__match_contains': []
          ,'MT_pre__apply_contains': [('0', 'N', 'Destination'), ('0', 'N', 'Destination')]
          ,'MT_pre__directLink_T': [('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__directLink_S': []
          ,'MT_pre__indirectLink_S': []
          ,'MT_pre__backward_link': [('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__trace_link': [('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__hasAttribute_S': []
          ,'MT_pre__hasAttribute_T': [('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__leftExpr': []
          ,'MT_pre__rightExpr': []
          ,'MT_pre__hasArgs': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': [('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination')] }
    self.CardinalityTable['MT_pre__Listen']={
          'MT_pre__MatchModel': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__MetaModelElement_S': []
          ,'MT_pre__MetaModelElement_T': []
          ,'MT_pre__Element': []
          ,'MT_pre__NamedElement': []
          ,'MT_pre__Trigger_S': []
          ,'MT_pre__Action': []
          ,'MT_pre__PortRef': []
          ,'MT_pre__PortConnectorRef': []
          ,'MT_pre__StateMachineElement': []
          ,'MT_pre__Protocol': []
          ,'MT_pre__Signal': []
          ,'MT_pre__Port': []
          ,'MT_pre__Vertex': []
          ,'MT_pre__InitialPoint': []
          ,'MT_pre__EntryPoint': []
          ,'MT_pre__ExitPoint': []
          ,'MT_pre__Transition': []
          ,'MT_pre__StateMachine': []
          ,'MT_pre__State': []
          ,'MT_pre__Capsule': []
          ,'MT_pre__PackageContainer': []
          ,'MT_pre__Model_S': []
          ,'MT_pre__Package': []
          ,'MT_pre__CapsuleRole': []
          ,'MT_pre__PortConnector': []
          ,'MT_pre__Thread': []
          ,'MT_pre__PhysicalThread': []
          ,'MT_pre__LogicalThread': []
          ,'MT_pre__PortType': []
          ,'MT_pre__BASE0': []
          ,'MT_pre__CONJUGATE1': []
          ,'MT_pre__SignalType': []
          ,'MT_pre__OUT1': []
          ,'MT_pre__IN0': []
          ,'MT_pre__RoleType': []
          ,'MT_pre__FIXED0': []
          ,'MT_pre__OPTIONAL1': []
          ,'MT_pre__PLUGIN2': []
          ,'MT_pre__TransitionType': []
          ,'MT_pre__SIBLING0': []
          ,'MT_pre__IN1': []
          ,'MT_pre__OUT2': []
          ,'MT_pre__Def': []
          ,'MT_pre__Expr': []
          ,'MT_pre__Pattern': []
          ,'MT_pre__Proc': []
          ,'MT_pre__ProcDef': []
          ,'MT_pre__FuncDef': []
          ,'MT_pre__Name': []
          ,'MT_pre__PythonRef': []
          ,'MT_pre__Module': []
          ,'MT_pre__Null': []
          ,'MT_pre__Trigger_T': []
          ,'MT_pre__Listen': []
          ,'MT_pre__ConditionBranch': []
          ,'MT_pre__ListenBranch': []
          ,'MT_pre__Site': []
          ,'MT_pre__Model_T': []
          ,'MT_pre__MatchCase': []
          ,'MT_pre__Condition': []
          ,'MT_pre__New': []
          ,'MT_pre__Delay': []
          ,'MT_pre__Par': []
          ,'MT_pre__ParIndexed': []
          ,'MT_pre__Inst': []
          ,'MT_pre__LocalDef': []
          ,'MT_pre__Seq': []
          ,'MT_pre__ConditionSet': []
          ,'MT_pre__Match': []
          ,'MT_pre__Print': []
          ,'MT_pre__Attribute': []
          ,'MT_pre__Expression': []
          ,'MT_pre__Equation': []
          ,'MT_pre__Operation': []
          ,'MT_pre__Add': []
          ,'MT_pre__Subtract': []
          ,'MT_pre__Concat': []
          ,'MT_pre__Constant': []
          ,'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__paired_with': []
          ,'MT_pre__match_contains': []
          ,'MT_pre__apply_contains': [('0', 'N', 'Destination'), ('0', 'N', 'Destination')]
          ,'MT_pre__directLink_T': [('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__directLink_S': []
          ,'MT_pre__indirectLink_S': []
          ,'MT_pre__backward_link': [('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__trace_link': [('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__hasAttribute_S': []
          ,'MT_pre__hasAttribute_T': [('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__leftExpr': []
          ,'MT_pre__rightExpr': []
          ,'MT_pre__hasArgs': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': [('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination')] }
    self.CardinalityTable['MT_pre__ConditionBranch']={
          'MT_pre__MatchModel': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__MetaModelElement_S': []
          ,'MT_pre__MetaModelElement_T': []
          ,'MT_pre__Element': []
          ,'MT_pre__NamedElement': []
          ,'MT_pre__Trigger_S': []
          ,'MT_pre__Action': []
          ,'MT_pre__PortRef': []
          ,'MT_pre__PortConnectorRef': []
          ,'MT_pre__StateMachineElement': []
          ,'MT_pre__Protocol': []
          ,'MT_pre__Signal': []
          ,'MT_pre__Port': []
          ,'MT_pre__Vertex': []
          ,'MT_pre__InitialPoint': []
          ,'MT_pre__EntryPoint': []
          ,'MT_pre__ExitPoint': []
          ,'MT_pre__Transition': []
          ,'MT_pre__StateMachine': []
          ,'MT_pre__State': []
          ,'MT_pre__Capsule': []
          ,'MT_pre__PackageContainer': []
          ,'MT_pre__Model_S': []
          ,'MT_pre__Package': []
          ,'MT_pre__CapsuleRole': []
          ,'MT_pre__PortConnector': []
          ,'MT_pre__Thread': []
          ,'MT_pre__PhysicalThread': []
          ,'MT_pre__LogicalThread': []
          ,'MT_pre__PortType': []
          ,'MT_pre__BASE0': []
          ,'MT_pre__CONJUGATE1': []
          ,'MT_pre__SignalType': []
          ,'MT_pre__OUT1': []
          ,'MT_pre__IN0': []
          ,'MT_pre__RoleType': []
          ,'MT_pre__FIXED0': []
          ,'MT_pre__OPTIONAL1': []
          ,'MT_pre__PLUGIN2': []
          ,'MT_pre__TransitionType': []
          ,'MT_pre__SIBLING0': []
          ,'MT_pre__IN1': []
          ,'MT_pre__OUT2': []
          ,'MT_pre__Def': []
          ,'MT_pre__Expr': []
          ,'MT_pre__Pattern': []
          ,'MT_pre__Proc': []
          ,'MT_pre__ProcDef': []
          ,'MT_pre__FuncDef': []
          ,'MT_pre__Name': []
          ,'MT_pre__PythonRef': []
          ,'MT_pre__Module': []
          ,'MT_pre__Null': []
          ,'MT_pre__Trigger_T': []
          ,'MT_pre__Listen': []
          ,'MT_pre__ConditionBranch': []
          ,'MT_pre__ListenBranch': []
          ,'MT_pre__Site': []
          ,'MT_pre__Model_T': []
          ,'MT_pre__MatchCase': []
          ,'MT_pre__Condition': []
          ,'MT_pre__New': []
          ,'MT_pre__Delay': []
          ,'MT_pre__Par': []
          ,'MT_pre__ParIndexed': []
          ,'MT_pre__Inst': []
          ,'MT_pre__LocalDef': []
          ,'MT_pre__Seq': []
          ,'MT_pre__ConditionSet': []
          ,'MT_pre__Match': []
          ,'MT_pre__Print': []
          ,'MT_pre__Attribute': []
          ,'MT_pre__Expression': []
          ,'MT_pre__Equation': []
          ,'MT_pre__Operation': []
          ,'MT_pre__Add': []
          ,'MT_pre__Subtract': []
          ,'MT_pre__Concat': []
          ,'MT_pre__Constant': []
          ,'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__paired_with': []
          ,'MT_pre__match_contains': []
          ,'MT_pre__apply_contains': [('0', 'N', 'Destination')]
          ,'MT_pre__directLink_T': [('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__directLink_S': []
          ,'MT_pre__indirectLink_S': []
          ,'MT_pre__backward_link': [('0', 'N', 'Source')]
          ,'MT_pre__trace_link': [('0', 'N', 'Source')]
          ,'MT_pre__hasAttribute_S': []
          ,'MT_pre__hasAttribute_T': [('0', 'N', 'Source')]
          ,'MT_pre__leftExpr': []
          ,'MT_pre__rightExpr': []
          ,'MT_pre__hasArgs': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': [('0', 'N', 'Destination'), ('0', 'N', 'Destination')] }
    self.CardinalityTable['MT_pre__ListenBranch']={
          'MT_pre__MatchModel': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__MetaModelElement_S': []
          ,'MT_pre__MetaModelElement_T': []
          ,'MT_pre__Element': []
          ,'MT_pre__NamedElement': []
          ,'MT_pre__Trigger_S': []
          ,'MT_pre__Action': []
          ,'MT_pre__PortRef': []
          ,'MT_pre__PortConnectorRef': []
          ,'MT_pre__StateMachineElement': []
          ,'MT_pre__Protocol': []
          ,'MT_pre__Signal': []
          ,'MT_pre__Port': []
          ,'MT_pre__Vertex': []
          ,'MT_pre__InitialPoint': []
          ,'MT_pre__EntryPoint': []
          ,'MT_pre__ExitPoint': []
          ,'MT_pre__Transition': []
          ,'MT_pre__StateMachine': []
          ,'MT_pre__State': []
          ,'MT_pre__Capsule': []
          ,'MT_pre__PackageContainer': []
          ,'MT_pre__Model_S': []
          ,'MT_pre__Package': []
          ,'MT_pre__CapsuleRole': []
          ,'MT_pre__PortConnector': []
          ,'MT_pre__Thread': []
          ,'MT_pre__PhysicalThread': []
          ,'MT_pre__LogicalThread': []
          ,'MT_pre__PortType': []
          ,'MT_pre__BASE0': []
          ,'MT_pre__CONJUGATE1': []
          ,'MT_pre__SignalType': []
          ,'MT_pre__OUT1': []
          ,'MT_pre__IN0': []
          ,'MT_pre__RoleType': []
          ,'MT_pre__FIXED0': []
          ,'MT_pre__OPTIONAL1': []
          ,'MT_pre__PLUGIN2': []
          ,'MT_pre__TransitionType': []
          ,'MT_pre__SIBLING0': []
          ,'MT_pre__IN1': []
          ,'MT_pre__OUT2': []
          ,'MT_pre__Def': []
          ,'MT_pre__Expr': []
          ,'MT_pre__Pattern': []
          ,'MT_pre__Proc': []
          ,'MT_pre__ProcDef': []
          ,'MT_pre__FuncDef': []
          ,'MT_pre__Name': []
          ,'MT_pre__PythonRef': []
          ,'MT_pre__Module': []
          ,'MT_pre__Null': []
          ,'MT_pre__Trigger_T': []
          ,'MT_pre__Listen': []
          ,'MT_pre__ConditionBranch': []
          ,'MT_pre__ListenBranch': []
          ,'MT_pre__Site': []
          ,'MT_pre__Model_T': []
          ,'MT_pre__MatchCase': []
          ,'MT_pre__Condition': []
          ,'MT_pre__New': []
          ,'MT_pre__Delay': []
          ,'MT_pre__Par': []
          ,'MT_pre__ParIndexed': []
          ,'MT_pre__Inst': []
          ,'MT_pre__LocalDef': []
          ,'MT_pre__Seq': []
          ,'MT_pre__ConditionSet': []
          ,'MT_pre__Match': []
          ,'MT_pre__Print': []
          ,'MT_pre__Attribute': []
          ,'MT_pre__Expression': []
          ,'MT_pre__Equation': []
          ,'MT_pre__Operation': []
          ,'MT_pre__Add': []
          ,'MT_pre__Subtract': []
          ,'MT_pre__Concat': []
          ,'MT_pre__Constant': []
          ,'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__paired_with': []
          ,'MT_pre__match_contains': []
          ,'MT_pre__apply_contains': [('0', 'N', 'Destination')]
          ,'MT_pre__directLink_T': [('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__directLink_S': []
          ,'MT_pre__indirectLink_S': []
          ,'MT_pre__backward_link': [('0', 'N', 'Source')]
          ,'MT_pre__trace_link': [('0', 'N', 'Source')]
          ,'MT_pre__hasAttribute_S': []
          ,'MT_pre__hasAttribute_T': [('0', 'N', 'Source')]
          ,'MT_pre__leftExpr': []
          ,'MT_pre__rightExpr': []
          ,'MT_pre__hasArgs': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': [('0', 'N', 'Destination'), ('0', 'N', 'Destination')] }
    self.CardinalityTable['MT_pre__Site']={
          'MT_pre__MatchModel': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__MetaModelElement_S': []
          ,'MT_pre__MetaModelElement_T': []
          ,'MT_pre__Element': []
          ,'MT_pre__NamedElement': []
          ,'MT_pre__Trigger_S': []
          ,'MT_pre__Action': []
          ,'MT_pre__PortRef': []
          ,'MT_pre__PortConnectorRef': []
          ,'MT_pre__StateMachineElement': []
          ,'MT_pre__Protocol': []
          ,'MT_pre__Signal': []
          ,'MT_pre__Port': []
          ,'MT_pre__Vertex': []
          ,'MT_pre__InitialPoint': []
          ,'MT_pre__EntryPoint': []
          ,'MT_pre__ExitPoint': []
          ,'MT_pre__Transition': []
          ,'MT_pre__StateMachine': []
          ,'MT_pre__State': []
          ,'MT_pre__Capsule': []
          ,'MT_pre__PackageContainer': []
          ,'MT_pre__Model_S': []
          ,'MT_pre__Package': []
          ,'MT_pre__CapsuleRole': []
          ,'MT_pre__PortConnector': []
          ,'MT_pre__Thread': []
          ,'MT_pre__PhysicalThread': []
          ,'MT_pre__LogicalThread': []
          ,'MT_pre__PortType': []
          ,'MT_pre__BASE0': []
          ,'MT_pre__CONJUGATE1': []
          ,'MT_pre__SignalType': []
          ,'MT_pre__OUT1': []
          ,'MT_pre__IN0': []
          ,'MT_pre__RoleType': []
          ,'MT_pre__FIXED0': []
          ,'MT_pre__OPTIONAL1': []
          ,'MT_pre__PLUGIN2': []
          ,'MT_pre__TransitionType': []
          ,'MT_pre__SIBLING0': []
          ,'MT_pre__IN1': []
          ,'MT_pre__OUT2': []
          ,'MT_pre__Def': []
          ,'MT_pre__Expr': []
          ,'MT_pre__Pattern': []
          ,'MT_pre__Proc': []
          ,'MT_pre__ProcDef': []
          ,'MT_pre__FuncDef': []
          ,'MT_pre__Name': []
          ,'MT_pre__PythonRef': []
          ,'MT_pre__Module': []
          ,'MT_pre__Null': []
          ,'MT_pre__Trigger_T': []
          ,'MT_pre__Listen': []
          ,'MT_pre__ConditionBranch': []
          ,'MT_pre__ListenBranch': []
          ,'MT_pre__Site': []
          ,'MT_pre__Model_T': []
          ,'MT_pre__MatchCase': []
          ,'MT_pre__Condition': []
          ,'MT_pre__New': []
          ,'MT_pre__Delay': []
          ,'MT_pre__Par': []
          ,'MT_pre__ParIndexed': []
          ,'MT_pre__Inst': []
          ,'MT_pre__LocalDef': []
          ,'MT_pre__Seq': []
          ,'MT_pre__ConditionSet': []
          ,'MT_pre__Match': []
          ,'MT_pre__Print': []
          ,'MT_pre__Attribute': []
          ,'MT_pre__Expression': []
          ,'MT_pre__Equation': []
          ,'MT_pre__Operation': []
          ,'MT_pre__Add': []
          ,'MT_pre__Subtract': []
          ,'MT_pre__Concat': []
          ,'MT_pre__Constant': []
          ,'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__paired_with': []
          ,'MT_pre__match_contains': []
          ,'MT_pre__apply_contains': [('0', 'N', 'Destination')]
          ,'MT_pre__directLink_T': [('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__directLink_S': []
          ,'MT_pre__indirectLink_S': []
          ,'MT_pre__backward_link': [('0', 'N', 'Source')]
          ,'MT_pre__trace_link': [('0', 'N', 'Source')]
          ,'MT_pre__hasAttribute_S': []
          ,'MT_pre__hasAttribute_T': [('0', 'N', 'Source')]
          ,'MT_pre__leftExpr': []
          ,'MT_pre__rightExpr': []
          ,'MT_pre__hasArgs': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': [('0', 'N', 'Destination'), ('0', 'N', 'Destination')] }
    self.CardinalityTable['MT_pre__Model_T']={
          'MT_pre__MatchModel': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__MetaModelElement_S': []
          ,'MT_pre__MetaModelElement_T': []
          ,'MT_pre__Element': []
          ,'MT_pre__NamedElement': []
          ,'MT_pre__Trigger_S': []
          ,'MT_pre__Action': []
          ,'MT_pre__PortRef': []
          ,'MT_pre__PortConnectorRef': []
          ,'MT_pre__StateMachineElement': []
          ,'MT_pre__Protocol': []
          ,'MT_pre__Signal': []
          ,'MT_pre__Port': []
          ,'MT_pre__Vertex': []
          ,'MT_pre__InitialPoint': []
          ,'MT_pre__EntryPoint': []
          ,'MT_pre__ExitPoint': []
          ,'MT_pre__Transition': []
          ,'MT_pre__StateMachine': []
          ,'MT_pre__State': []
          ,'MT_pre__Capsule': []
          ,'MT_pre__PackageContainer': []
          ,'MT_pre__Model_S': []
          ,'MT_pre__Package': []
          ,'MT_pre__CapsuleRole': []
          ,'MT_pre__PortConnector': []
          ,'MT_pre__Thread': []
          ,'MT_pre__PhysicalThread': []
          ,'MT_pre__LogicalThread': []
          ,'MT_pre__PortType': []
          ,'MT_pre__BASE0': []
          ,'MT_pre__CONJUGATE1': []
          ,'MT_pre__SignalType': []
          ,'MT_pre__OUT1': []
          ,'MT_pre__IN0': []
          ,'MT_pre__RoleType': []
          ,'MT_pre__FIXED0': []
          ,'MT_pre__OPTIONAL1': []
          ,'MT_pre__PLUGIN2': []
          ,'MT_pre__TransitionType': []
          ,'MT_pre__SIBLING0': []
          ,'MT_pre__IN1': []
          ,'MT_pre__OUT2': []
          ,'MT_pre__Def': []
          ,'MT_pre__Expr': []
          ,'MT_pre__Pattern': []
          ,'MT_pre__Proc': []
          ,'MT_pre__ProcDef': []
          ,'MT_pre__FuncDef': []
          ,'MT_pre__Name': []
          ,'MT_pre__PythonRef': []
          ,'MT_pre__Module': []
          ,'MT_pre__Null': []
          ,'MT_pre__Trigger_T': []
          ,'MT_pre__Listen': []
          ,'MT_pre__ConditionBranch': []
          ,'MT_pre__ListenBranch': []
          ,'MT_pre__Site': []
          ,'MT_pre__Model_T': []
          ,'MT_pre__MatchCase': []
          ,'MT_pre__Condition': []
          ,'MT_pre__New': []
          ,'MT_pre__Delay': []
          ,'MT_pre__Par': []
          ,'MT_pre__ParIndexed': []
          ,'MT_pre__Inst': []
          ,'MT_pre__LocalDef': []
          ,'MT_pre__Seq': []
          ,'MT_pre__ConditionSet': []
          ,'MT_pre__Match': []
          ,'MT_pre__Print': []
          ,'MT_pre__Attribute': []
          ,'MT_pre__Expression': []
          ,'MT_pre__Equation': []
          ,'MT_pre__Operation': []
          ,'MT_pre__Add': []
          ,'MT_pre__Subtract': []
          ,'MT_pre__Concat': []
          ,'MT_pre__Constant': []
          ,'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__paired_with': []
          ,'MT_pre__match_contains': []
          ,'MT_pre__apply_contains': [('0', 'N', 'Destination')]
          ,'MT_pre__directLink_T': [('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__directLink_S': []
          ,'MT_pre__indirectLink_S': []
          ,'MT_pre__backward_link': [('0', 'N', 'Source')]
          ,'MT_pre__trace_link': [('0', 'N', 'Source')]
          ,'MT_pre__hasAttribute_S': []
          ,'MT_pre__hasAttribute_T': [('0', 'N', 'Source')]
          ,'MT_pre__leftExpr': []
          ,'MT_pre__rightExpr': []
          ,'MT_pre__hasArgs': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': [('0', 'N', 'Destination'), ('0', 'N', 'Destination')] }
    self.CardinalityTable['MT_pre__MatchCase']={
          'MT_pre__MatchModel': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__MetaModelElement_S': []
          ,'MT_pre__MetaModelElement_T': []
          ,'MT_pre__Element': []
          ,'MT_pre__NamedElement': []
          ,'MT_pre__Trigger_S': []
          ,'MT_pre__Action': []
          ,'MT_pre__PortRef': []
          ,'MT_pre__PortConnectorRef': []
          ,'MT_pre__StateMachineElement': []
          ,'MT_pre__Protocol': []
          ,'MT_pre__Signal': []
          ,'MT_pre__Port': []
          ,'MT_pre__Vertex': []
          ,'MT_pre__InitialPoint': []
          ,'MT_pre__EntryPoint': []
          ,'MT_pre__ExitPoint': []
          ,'MT_pre__Transition': []
          ,'MT_pre__StateMachine': []
          ,'MT_pre__State': []
          ,'MT_pre__Capsule': []
          ,'MT_pre__PackageContainer': []
          ,'MT_pre__Model_S': []
          ,'MT_pre__Package': []
          ,'MT_pre__CapsuleRole': []
          ,'MT_pre__PortConnector': []
          ,'MT_pre__Thread': []
          ,'MT_pre__PhysicalThread': []
          ,'MT_pre__LogicalThread': []
          ,'MT_pre__PortType': []
          ,'MT_pre__BASE0': []
          ,'MT_pre__CONJUGATE1': []
          ,'MT_pre__SignalType': []
          ,'MT_pre__OUT1': []
          ,'MT_pre__IN0': []
          ,'MT_pre__RoleType': []
          ,'MT_pre__FIXED0': []
          ,'MT_pre__OPTIONAL1': []
          ,'MT_pre__PLUGIN2': []
          ,'MT_pre__TransitionType': []
          ,'MT_pre__SIBLING0': []
          ,'MT_pre__IN1': []
          ,'MT_pre__OUT2': []
          ,'MT_pre__Def': []
          ,'MT_pre__Expr': []
          ,'MT_pre__Pattern': []
          ,'MT_pre__Proc': []
          ,'MT_pre__ProcDef': []
          ,'MT_pre__FuncDef': []
          ,'MT_pre__Name': []
          ,'MT_pre__PythonRef': []
          ,'MT_pre__Module': []
          ,'MT_pre__Null': []
          ,'MT_pre__Trigger_T': []
          ,'MT_pre__Listen': []
          ,'MT_pre__ConditionBranch': []
          ,'MT_pre__ListenBranch': []
          ,'MT_pre__Site': []
          ,'MT_pre__Model_T': []
          ,'MT_pre__MatchCase': []
          ,'MT_pre__Condition': []
          ,'MT_pre__New': []
          ,'MT_pre__Delay': []
          ,'MT_pre__Par': []
          ,'MT_pre__ParIndexed': []
          ,'MT_pre__Inst': []
          ,'MT_pre__LocalDef': []
          ,'MT_pre__Seq': []
          ,'MT_pre__ConditionSet': []
          ,'MT_pre__Match': []
          ,'MT_pre__Print': []
          ,'MT_pre__Attribute': []
          ,'MT_pre__Expression': []
          ,'MT_pre__Equation': []
          ,'MT_pre__Operation': []
          ,'MT_pre__Add': []
          ,'MT_pre__Subtract': []
          ,'MT_pre__Concat': []
          ,'MT_pre__Constant': []
          ,'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__paired_with': []
          ,'MT_pre__match_contains': []
          ,'MT_pre__apply_contains': [('0', 'N', 'Destination')]
          ,'MT_pre__directLink_T': [('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__directLink_S': []
          ,'MT_pre__indirectLink_S': []
          ,'MT_pre__backward_link': [('0', 'N', 'Source')]
          ,'MT_pre__trace_link': [('0', 'N', 'Source')]
          ,'MT_pre__hasAttribute_S': []
          ,'MT_pre__hasAttribute_T': [('0', 'N', 'Source')]
          ,'MT_pre__leftExpr': []
          ,'MT_pre__rightExpr': []
          ,'MT_pre__hasArgs': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': [('0', 'N', 'Destination'), ('0', 'N', 'Destination')] }
    self.CardinalityTable['MT_pre__Condition']={
          'MT_pre__MatchModel': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__MetaModelElement_S': []
          ,'MT_pre__MetaModelElement_T': []
          ,'MT_pre__Element': []
          ,'MT_pre__NamedElement': []
          ,'MT_pre__Trigger_S': []
          ,'MT_pre__Action': []
          ,'MT_pre__PortRef': []
          ,'MT_pre__PortConnectorRef': []
          ,'MT_pre__StateMachineElement': []
          ,'MT_pre__Protocol': []
          ,'MT_pre__Signal': []
          ,'MT_pre__Port': []
          ,'MT_pre__Vertex': []
          ,'MT_pre__InitialPoint': []
          ,'MT_pre__EntryPoint': []
          ,'MT_pre__ExitPoint': []
          ,'MT_pre__Transition': []
          ,'MT_pre__StateMachine': []
          ,'MT_pre__State': []
          ,'MT_pre__Capsule': []
          ,'MT_pre__PackageContainer': []
          ,'MT_pre__Model_S': []
          ,'MT_pre__Package': []
          ,'MT_pre__CapsuleRole': []
          ,'MT_pre__PortConnector': []
          ,'MT_pre__Thread': []
          ,'MT_pre__PhysicalThread': []
          ,'MT_pre__LogicalThread': []
          ,'MT_pre__PortType': []
          ,'MT_pre__BASE0': []
          ,'MT_pre__CONJUGATE1': []
          ,'MT_pre__SignalType': []
          ,'MT_pre__OUT1': []
          ,'MT_pre__IN0': []
          ,'MT_pre__RoleType': []
          ,'MT_pre__FIXED0': []
          ,'MT_pre__OPTIONAL1': []
          ,'MT_pre__PLUGIN2': []
          ,'MT_pre__TransitionType': []
          ,'MT_pre__SIBLING0': []
          ,'MT_pre__IN1': []
          ,'MT_pre__OUT2': []
          ,'MT_pre__Def': []
          ,'MT_pre__Expr': []
          ,'MT_pre__Pattern': []
          ,'MT_pre__Proc': []
          ,'MT_pre__ProcDef': []
          ,'MT_pre__FuncDef': []
          ,'MT_pre__Name': []
          ,'MT_pre__PythonRef': []
          ,'MT_pre__Module': []
          ,'MT_pre__Null': []
          ,'MT_pre__Trigger_T': []
          ,'MT_pre__Listen': []
          ,'MT_pre__ConditionBranch': []
          ,'MT_pre__ListenBranch': []
          ,'MT_pre__Site': []
          ,'MT_pre__Model_T': []
          ,'MT_pre__MatchCase': []
          ,'MT_pre__Condition': []
          ,'MT_pre__New': []
          ,'MT_pre__Delay': []
          ,'MT_pre__Par': []
          ,'MT_pre__ParIndexed': []
          ,'MT_pre__Inst': []
          ,'MT_pre__LocalDef': []
          ,'MT_pre__Seq': []
          ,'MT_pre__ConditionSet': []
          ,'MT_pre__Match': []
          ,'MT_pre__Print': []
          ,'MT_pre__Attribute': []
          ,'MT_pre__Expression': []
          ,'MT_pre__Equation': []
          ,'MT_pre__Operation': []
          ,'MT_pre__Add': []
          ,'MT_pre__Subtract': []
          ,'MT_pre__Concat': []
          ,'MT_pre__Constant': []
          ,'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__paired_with': []
          ,'MT_pre__match_contains': []
          ,'MT_pre__apply_contains': [('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination')]
          ,'MT_pre__directLink_T': [('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__directLink_S': []
          ,'MT_pre__indirectLink_S': []
          ,'MT_pre__backward_link': [('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__trace_link': [('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__hasAttribute_S': []
          ,'MT_pre__hasAttribute_T': [('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__leftExpr': []
          ,'MT_pre__rightExpr': []
          ,'MT_pre__hasArgs': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': [('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination')] }
    self.CardinalityTable['MT_pre__New']={
          'MT_pre__MatchModel': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__MetaModelElement_S': []
          ,'MT_pre__MetaModelElement_T': []
          ,'MT_pre__Element': []
          ,'MT_pre__NamedElement': []
          ,'MT_pre__Trigger_S': []
          ,'MT_pre__Action': []
          ,'MT_pre__PortRef': []
          ,'MT_pre__PortConnectorRef': []
          ,'MT_pre__StateMachineElement': []
          ,'MT_pre__Protocol': []
          ,'MT_pre__Signal': []
          ,'MT_pre__Port': []
          ,'MT_pre__Vertex': []
          ,'MT_pre__InitialPoint': []
          ,'MT_pre__EntryPoint': []
          ,'MT_pre__ExitPoint': []
          ,'MT_pre__Transition': []
          ,'MT_pre__StateMachine': []
          ,'MT_pre__State': []
          ,'MT_pre__Capsule': []
          ,'MT_pre__PackageContainer': []
          ,'MT_pre__Model_S': []
          ,'MT_pre__Package': []
          ,'MT_pre__CapsuleRole': []
          ,'MT_pre__PortConnector': []
          ,'MT_pre__Thread': []
          ,'MT_pre__PhysicalThread': []
          ,'MT_pre__LogicalThread': []
          ,'MT_pre__PortType': []
          ,'MT_pre__BASE0': []
          ,'MT_pre__CONJUGATE1': []
          ,'MT_pre__SignalType': []
          ,'MT_pre__OUT1': []
          ,'MT_pre__IN0': []
          ,'MT_pre__RoleType': []
          ,'MT_pre__FIXED0': []
          ,'MT_pre__OPTIONAL1': []
          ,'MT_pre__PLUGIN2': []
          ,'MT_pre__TransitionType': []
          ,'MT_pre__SIBLING0': []
          ,'MT_pre__IN1': []
          ,'MT_pre__OUT2': []
          ,'MT_pre__Def': []
          ,'MT_pre__Expr': []
          ,'MT_pre__Pattern': []
          ,'MT_pre__Proc': []
          ,'MT_pre__ProcDef': []
          ,'MT_pre__FuncDef': []
          ,'MT_pre__Name': []
          ,'MT_pre__PythonRef': []
          ,'MT_pre__Module': []
          ,'MT_pre__Null': []
          ,'MT_pre__Trigger_T': []
          ,'MT_pre__Listen': []
          ,'MT_pre__ConditionBranch': []
          ,'MT_pre__ListenBranch': []
          ,'MT_pre__Site': []
          ,'MT_pre__Model_T': []
          ,'MT_pre__MatchCase': []
          ,'MT_pre__Condition': []
          ,'MT_pre__New': []
          ,'MT_pre__Delay': []
          ,'MT_pre__Par': []
          ,'MT_pre__ParIndexed': []
          ,'MT_pre__Inst': []
          ,'MT_pre__LocalDef': []
          ,'MT_pre__Seq': []
          ,'MT_pre__ConditionSet': []
          ,'MT_pre__Match': []
          ,'MT_pre__Print': []
          ,'MT_pre__Attribute': []
          ,'MT_pre__Expression': []
          ,'MT_pre__Equation': []
          ,'MT_pre__Operation': []
          ,'MT_pre__Add': []
          ,'MT_pre__Subtract': []
          ,'MT_pre__Concat': []
          ,'MT_pre__Constant': []
          ,'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__paired_with': []
          ,'MT_pre__match_contains': []
          ,'MT_pre__apply_contains': [('0', 'N', 'Destination'), ('0', 'N', 'Destination')]
          ,'MT_pre__directLink_T': [('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__directLink_S': []
          ,'MT_pre__indirectLink_S': []
          ,'MT_pre__backward_link': [('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__trace_link': [('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__hasAttribute_S': []
          ,'MT_pre__hasAttribute_T': [('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__leftExpr': []
          ,'MT_pre__rightExpr': []
          ,'MT_pre__hasArgs': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': [('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination')] }
    self.CardinalityTable['MT_pre__Delay']={
          'MT_pre__MatchModel': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__MetaModelElement_S': []
          ,'MT_pre__MetaModelElement_T': []
          ,'MT_pre__Element': []
          ,'MT_pre__NamedElement': []
          ,'MT_pre__Trigger_S': []
          ,'MT_pre__Action': []
          ,'MT_pre__PortRef': []
          ,'MT_pre__PortConnectorRef': []
          ,'MT_pre__StateMachineElement': []
          ,'MT_pre__Protocol': []
          ,'MT_pre__Signal': []
          ,'MT_pre__Port': []
          ,'MT_pre__Vertex': []
          ,'MT_pre__InitialPoint': []
          ,'MT_pre__EntryPoint': []
          ,'MT_pre__ExitPoint': []
          ,'MT_pre__Transition': []
          ,'MT_pre__StateMachine': []
          ,'MT_pre__State': []
          ,'MT_pre__Capsule': []
          ,'MT_pre__PackageContainer': []
          ,'MT_pre__Model_S': []
          ,'MT_pre__Package': []
          ,'MT_pre__CapsuleRole': []
          ,'MT_pre__PortConnector': []
          ,'MT_pre__Thread': []
          ,'MT_pre__PhysicalThread': []
          ,'MT_pre__LogicalThread': []
          ,'MT_pre__PortType': []
          ,'MT_pre__BASE0': []
          ,'MT_pre__CONJUGATE1': []
          ,'MT_pre__SignalType': []
          ,'MT_pre__OUT1': []
          ,'MT_pre__IN0': []
          ,'MT_pre__RoleType': []
          ,'MT_pre__FIXED0': []
          ,'MT_pre__OPTIONAL1': []
          ,'MT_pre__PLUGIN2': []
          ,'MT_pre__TransitionType': []
          ,'MT_pre__SIBLING0': []
          ,'MT_pre__IN1': []
          ,'MT_pre__OUT2': []
          ,'MT_pre__Def': []
          ,'MT_pre__Expr': []
          ,'MT_pre__Pattern': []
          ,'MT_pre__Proc': []
          ,'MT_pre__ProcDef': []
          ,'MT_pre__FuncDef': []
          ,'MT_pre__Name': []
          ,'MT_pre__PythonRef': []
          ,'MT_pre__Module': []
          ,'MT_pre__Null': []
          ,'MT_pre__Trigger_T': []
          ,'MT_pre__Listen': []
          ,'MT_pre__ConditionBranch': []
          ,'MT_pre__ListenBranch': []
          ,'MT_pre__Site': []
          ,'MT_pre__Model_T': []
          ,'MT_pre__MatchCase': []
          ,'MT_pre__Condition': []
          ,'MT_pre__New': []
          ,'MT_pre__Delay': []
          ,'MT_pre__Par': []
          ,'MT_pre__ParIndexed': []
          ,'MT_pre__Inst': []
          ,'MT_pre__LocalDef': []
          ,'MT_pre__Seq': []
          ,'MT_pre__ConditionSet': []
          ,'MT_pre__Match': []
          ,'MT_pre__Print': []
          ,'MT_pre__Attribute': []
          ,'MT_pre__Expression': []
          ,'MT_pre__Equation': []
          ,'MT_pre__Operation': []
          ,'MT_pre__Add': []
          ,'MT_pre__Subtract': []
          ,'MT_pre__Concat': []
          ,'MT_pre__Constant': []
          ,'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__paired_with': []
          ,'MT_pre__match_contains': []
          ,'MT_pre__apply_contains': [('0', 'N', 'Destination'), ('0', 'N', 'Destination')]
          ,'MT_pre__directLink_T': [('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__directLink_S': []
          ,'MT_pre__indirectLink_S': []
          ,'MT_pre__backward_link': [('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__trace_link': [('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__hasAttribute_S': []
          ,'MT_pre__hasAttribute_T': [('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__leftExpr': []
          ,'MT_pre__rightExpr': []
          ,'MT_pre__hasArgs': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': [('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination')] }
    self.CardinalityTable['MT_pre__Par']={
          'MT_pre__MatchModel': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__MetaModelElement_S': []
          ,'MT_pre__MetaModelElement_T': []
          ,'MT_pre__Element': []
          ,'MT_pre__NamedElement': []
          ,'MT_pre__Trigger_S': []
          ,'MT_pre__Action': []
          ,'MT_pre__PortRef': []
          ,'MT_pre__PortConnectorRef': []
          ,'MT_pre__StateMachineElement': []
          ,'MT_pre__Protocol': []
          ,'MT_pre__Signal': []
          ,'MT_pre__Port': []
          ,'MT_pre__Vertex': []
          ,'MT_pre__InitialPoint': []
          ,'MT_pre__EntryPoint': []
          ,'MT_pre__ExitPoint': []
          ,'MT_pre__Transition': []
          ,'MT_pre__StateMachine': []
          ,'MT_pre__State': []
          ,'MT_pre__Capsule': []
          ,'MT_pre__PackageContainer': []
          ,'MT_pre__Model_S': []
          ,'MT_pre__Package': []
          ,'MT_pre__CapsuleRole': []
          ,'MT_pre__PortConnector': []
          ,'MT_pre__Thread': []
          ,'MT_pre__PhysicalThread': []
          ,'MT_pre__LogicalThread': []
          ,'MT_pre__PortType': []
          ,'MT_pre__BASE0': []
          ,'MT_pre__CONJUGATE1': []
          ,'MT_pre__SignalType': []
          ,'MT_pre__OUT1': []
          ,'MT_pre__IN0': []
          ,'MT_pre__RoleType': []
          ,'MT_pre__FIXED0': []
          ,'MT_pre__OPTIONAL1': []
          ,'MT_pre__PLUGIN2': []
          ,'MT_pre__TransitionType': []
          ,'MT_pre__SIBLING0': []
          ,'MT_pre__IN1': []
          ,'MT_pre__OUT2': []
          ,'MT_pre__Def': []
          ,'MT_pre__Expr': []
          ,'MT_pre__Pattern': []
          ,'MT_pre__Proc': []
          ,'MT_pre__ProcDef': []
          ,'MT_pre__FuncDef': []
          ,'MT_pre__Name': []
          ,'MT_pre__PythonRef': []
          ,'MT_pre__Module': []
          ,'MT_pre__Null': []
          ,'MT_pre__Trigger_T': []
          ,'MT_pre__Listen': []
          ,'MT_pre__ConditionBranch': []
          ,'MT_pre__ListenBranch': []
          ,'MT_pre__Site': []
          ,'MT_pre__Model_T': []
          ,'MT_pre__MatchCase': []
          ,'MT_pre__Condition': []
          ,'MT_pre__New': []
          ,'MT_pre__Delay': []
          ,'MT_pre__Par': []
          ,'MT_pre__ParIndexed': []
          ,'MT_pre__Inst': []
          ,'MT_pre__LocalDef': []
          ,'MT_pre__Seq': []
          ,'MT_pre__ConditionSet': []
          ,'MT_pre__Match': []
          ,'MT_pre__Print': []
          ,'MT_pre__Attribute': []
          ,'MT_pre__Expression': []
          ,'MT_pre__Equation': []
          ,'MT_pre__Operation': []
          ,'MT_pre__Add': []
          ,'MT_pre__Subtract': []
          ,'MT_pre__Concat': []
          ,'MT_pre__Constant': []
          ,'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__paired_with': []
          ,'MT_pre__match_contains': []
          ,'MT_pre__apply_contains': [('0', 'N', 'Destination'), ('0', 'N', 'Destination')]
          ,'MT_pre__directLink_T': [('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__directLink_S': []
          ,'MT_pre__indirectLink_S': []
          ,'MT_pre__backward_link': [('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__trace_link': [('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__hasAttribute_S': []
          ,'MT_pre__hasAttribute_T': [('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__leftExpr': []
          ,'MT_pre__rightExpr': []
          ,'MT_pre__hasArgs': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': [('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination')] }
    self.CardinalityTable['MT_pre__ParIndexed']={
          'MT_pre__MatchModel': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__MetaModelElement_S': []
          ,'MT_pre__MetaModelElement_T': []
          ,'MT_pre__Element': []
          ,'MT_pre__NamedElement': []
          ,'MT_pre__Trigger_S': []
          ,'MT_pre__Action': []
          ,'MT_pre__PortRef': []
          ,'MT_pre__PortConnectorRef': []
          ,'MT_pre__StateMachineElement': []
          ,'MT_pre__Protocol': []
          ,'MT_pre__Signal': []
          ,'MT_pre__Port': []
          ,'MT_pre__Vertex': []
          ,'MT_pre__InitialPoint': []
          ,'MT_pre__EntryPoint': []
          ,'MT_pre__ExitPoint': []
          ,'MT_pre__Transition': []
          ,'MT_pre__StateMachine': []
          ,'MT_pre__State': []
          ,'MT_pre__Capsule': []
          ,'MT_pre__PackageContainer': []
          ,'MT_pre__Model_S': []
          ,'MT_pre__Package': []
          ,'MT_pre__CapsuleRole': []
          ,'MT_pre__PortConnector': []
          ,'MT_pre__Thread': []
          ,'MT_pre__PhysicalThread': []
          ,'MT_pre__LogicalThread': []
          ,'MT_pre__PortType': []
          ,'MT_pre__BASE0': []
          ,'MT_pre__CONJUGATE1': []
          ,'MT_pre__SignalType': []
          ,'MT_pre__OUT1': []
          ,'MT_pre__IN0': []
          ,'MT_pre__RoleType': []
          ,'MT_pre__FIXED0': []
          ,'MT_pre__OPTIONAL1': []
          ,'MT_pre__PLUGIN2': []
          ,'MT_pre__TransitionType': []
          ,'MT_pre__SIBLING0': []
          ,'MT_pre__IN1': []
          ,'MT_pre__OUT2': []
          ,'MT_pre__Def': []
          ,'MT_pre__Expr': []
          ,'MT_pre__Pattern': []
          ,'MT_pre__Proc': []
          ,'MT_pre__ProcDef': []
          ,'MT_pre__FuncDef': []
          ,'MT_pre__Name': []
          ,'MT_pre__PythonRef': []
          ,'MT_pre__Module': []
          ,'MT_pre__Null': []
          ,'MT_pre__Trigger_T': []
          ,'MT_pre__Listen': []
          ,'MT_pre__ConditionBranch': []
          ,'MT_pre__ListenBranch': []
          ,'MT_pre__Site': []
          ,'MT_pre__Model_T': []
          ,'MT_pre__MatchCase': []
          ,'MT_pre__Condition': []
          ,'MT_pre__New': []
          ,'MT_pre__Delay': []
          ,'MT_pre__Par': []
          ,'MT_pre__ParIndexed': []
          ,'MT_pre__Inst': []
          ,'MT_pre__LocalDef': []
          ,'MT_pre__Seq': []
          ,'MT_pre__ConditionSet': []
          ,'MT_pre__Match': []
          ,'MT_pre__Print': []
          ,'MT_pre__Attribute': []
          ,'MT_pre__Expression': []
          ,'MT_pre__Equation': []
          ,'MT_pre__Operation': []
          ,'MT_pre__Add': []
          ,'MT_pre__Subtract': []
          ,'MT_pre__Concat': []
          ,'MT_pre__Constant': []
          ,'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__paired_with': []
          ,'MT_pre__match_contains': []
          ,'MT_pre__apply_contains': [('0', 'N', 'Destination'), ('0', 'N', 'Destination')]
          ,'MT_pre__directLink_T': [('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__directLink_S': []
          ,'MT_pre__indirectLink_S': []
          ,'MT_pre__backward_link': [('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__trace_link': [('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__hasAttribute_S': []
          ,'MT_pre__hasAttribute_T': [('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__leftExpr': []
          ,'MT_pre__rightExpr': []
          ,'MT_pre__hasArgs': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': [('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination')] }
    self.CardinalityTable['MT_pre__Inst']={
          'MT_pre__MatchModel': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__MetaModelElement_S': []
          ,'MT_pre__MetaModelElement_T': []
          ,'MT_pre__Element': []
          ,'MT_pre__NamedElement': []
          ,'MT_pre__Trigger_S': []
          ,'MT_pre__Action': []
          ,'MT_pre__PortRef': []
          ,'MT_pre__PortConnectorRef': []
          ,'MT_pre__StateMachineElement': []
          ,'MT_pre__Protocol': []
          ,'MT_pre__Signal': []
          ,'MT_pre__Port': []
          ,'MT_pre__Vertex': []
          ,'MT_pre__InitialPoint': []
          ,'MT_pre__EntryPoint': []
          ,'MT_pre__ExitPoint': []
          ,'MT_pre__Transition': []
          ,'MT_pre__StateMachine': []
          ,'MT_pre__State': []
          ,'MT_pre__Capsule': []
          ,'MT_pre__PackageContainer': []
          ,'MT_pre__Model_S': []
          ,'MT_pre__Package': []
          ,'MT_pre__CapsuleRole': []
          ,'MT_pre__PortConnector': []
          ,'MT_pre__Thread': []
          ,'MT_pre__PhysicalThread': []
          ,'MT_pre__LogicalThread': []
          ,'MT_pre__PortType': []
          ,'MT_pre__BASE0': []
          ,'MT_pre__CONJUGATE1': []
          ,'MT_pre__SignalType': []
          ,'MT_pre__OUT1': []
          ,'MT_pre__IN0': []
          ,'MT_pre__RoleType': []
          ,'MT_pre__FIXED0': []
          ,'MT_pre__OPTIONAL1': []
          ,'MT_pre__PLUGIN2': []
          ,'MT_pre__TransitionType': []
          ,'MT_pre__SIBLING0': []
          ,'MT_pre__IN1': []
          ,'MT_pre__OUT2': []
          ,'MT_pre__Def': []
          ,'MT_pre__Expr': []
          ,'MT_pre__Pattern': []
          ,'MT_pre__Proc': []
          ,'MT_pre__ProcDef': []
          ,'MT_pre__FuncDef': []
          ,'MT_pre__Name': []
          ,'MT_pre__PythonRef': []
          ,'MT_pre__Module': []
          ,'MT_pre__Null': []
          ,'MT_pre__Trigger_T': []
          ,'MT_pre__Listen': []
          ,'MT_pre__ConditionBranch': []
          ,'MT_pre__ListenBranch': []
          ,'MT_pre__Site': []
          ,'MT_pre__Model_T': []
          ,'MT_pre__MatchCase': []
          ,'MT_pre__Condition': []
          ,'MT_pre__New': []
          ,'MT_pre__Delay': []
          ,'MT_pre__Par': []
          ,'MT_pre__ParIndexed': []
          ,'MT_pre__Inst': []
          ,'MT_pre__LocalDef': []
          ,'MT_pre__Seq': []
          ,'MT_pre__ConditionSet': []
          ,'MT_pre__Match': []
          ,'MT_pre__Print': []
          ,'MT_pre__Attribute': []
          ,'MT_pre__Expression': []
          ,'MT_pre__Equation': []
          ,'MT_pre__Operation': []
          ,'MT_pre__Add': []
          ,'MT_pre__Subtract': []
          ,'MT_pre__Concat': []
          ,'MT_pre__Constant': []
          ,'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__paired_with': []
          ,'MT_pre__match_contains': []
          ,'MT_pre__apply_contains': [('0', 'N', 'Destination'), ('0', 'N', 'Destination')]
          ,'MT_pre__directLink_T': [('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__directLink_S': []
          ,'MT_pre__indirectLink_S': []
          ,'MT_pre__backward_link': [('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__trace_link': [('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__hasAttribute_S': []
          ,'MT_pre__hasAttribute_T': [('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__leftExpr': []
          ,'MT_pre__rightExpr': []
          ,'MT_pre__hasArgs': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': [('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination')] }
    self.CardinalityTable['MT_pre__LocalDef']={
          'MT_pre__MatchModel': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__MetaModelElement_S': []
          ,'MT_pre__MetaModelElement_T': []
          ,'MT_pre__Element': []
          ,'MT_pre__NamedElement': []
          ,'MT_pre__Trigger_S': []
          ,'MT_pre__Action': []
          ,'MT_pre__PortRef': []
          ,'MT_pre__PortConnectorRef': []
          ,'MT_pre__StateMachineElement': []
          ,'MT_pre__Protocol': []
          ,'MT_pre__Signal': []
          ,'MT_pre__Port': []
          ,'MT_pre__Vertex': []
          ,'MT_pre__InitialPoint': []
          ,'MT_pre__EntryPoint': []
          ,'MT_pre__ExitPoint': []
          ,'MT_pre__Transition': []
          ,'MT_pre__StateMachine': []
          ,'MT_pre__State': []
          ,'MT_pre__Capsule': []
          ,'MT_pre__PackageContainer': []
          ,'MT_pre__Model_S': []
          ,'MT_pre__Package': []
          ,'MT_pre__CapsuleRole': []
          ,'MT_pre__PortConnector': []
          ,'MT_pre__Thread': []
          ,'MT_pre__PhysicalThread': []
          ,'MT_pre__LogicalThread': []
          ,'MT_pre__PortType': []
          ,'MT_pre__BASE0': []
          ,'MT_pre__CONJUGATE1': []
          ,'MT_pre__SignalType': []
          ,'MT_pre__OUT1': []
          ,'MT_pre__IN0': []
          ,'MT_pre__RoleType': []
          ,'MT_pre__FIXED0': []
          ,'MT_pre__OPTIONAL1': []
          ,'MT_pre__PLUGIN2': []
          ,'MT_pre__TransitionType': []
          ,'MT_pre__SIBLING0': []
          ,'MT_pre__IN1': []
          ,'MT_pre__OUT2': []
          ,'MT_pre__Def': []
          ,'MT_pre__Expr': []
          ,'MT_pre__Pattern': []
          ,'MT_pre__Proc': []
          ,'MT_pre__ProcDef': []
          ,'MT_pre__FuncDef': []
          ,'MT_pre__Name': []
          ,'MT_pre__PythonRef': []
          ,'MT_pre__Module': []
          ,'MT_pre__Null': []
          ,'MT_pre__Trigger_T': []
          ,'MT_pre__Listen': []
          ,'MT_pre__ConditionBranch': []
          ,'MT_pre__ListenBranch': []
          ,'MT_pre__Site': []
          ,'MT_pre__Model_T': []
          ,'MT_pre__MatchCase': []
          ,'MT_pre__Condition': []
          ,'MT_pre__New': []
          ,'MT_pre__Delay': []
          ,'MT_pre__Par': []
          ,'MT_pre__ParIndexed': []
          ,'MT_pre__Inst': []
          ,'MT_pre__LocalDef': []
          ,'MT_pre__Seq': []
          ,'MT_pre__ConditionSet': []
          ,'MT_pre__Match': []
          ,'MT_pre__Print': []
          ,'MT_pre__Attribute': []
          ,'MT_pre__Expression': []
          ,'MT_pre__Equation': []
          ,'MT_pre__Operation': []
          ,'MT_pre__Add': []
          ,'MT_pre__Subtract': []
          ,'MT_pre__Concat': []
          ,'MT_pre__Constant': []
          ,'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__paired_with': []
          ,'MT_pre__match_contains': []
          ,'MT_pre__apply_contains': [('0', 'N', 'Destination'), ('0', 'N', 'Destination')]
          ,'MT_pre__directLink_T': [('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__directLink_S': []
          ,'MT_pre__indirectLink_S': []
          ,'MT_pre__backward_link': [('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__trace_link': [('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__hasAttribute_S': []
          ,'MT_pre__hasAttribute_T': [('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__leftExpr': []
          ,'MT_pre__rightExpr': []
          ,'MT_pre__hasArgs': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': [('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination')] }
    self.CardinalityTable['MT_pre__Seq']={
          'MT_pre__MatchModel': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__MetaModelElement_S': []
          ,'MT_pre__MetaModelElement_T': []
          ,'MT_pre__Element': []
          ,'MT_pre__NamedElement': []
          ,'MT_pre__Trigger_S': []
          ,'MT_pre__Action': []
          ,'MT_pre__PortRef': []
          ,'MT_pre__PortConnectorRef': []
          ,'MT_pre__StateMachineElement': []
          ,'MT_pre__Protocol': []
          ,'MT_pre__Signal': []
          ,'MT_pre__Port': []
          ,'MT_pre__Vertex': []
          ,'MT_pre__InitialPoint': []
          ,'MT_pre__EntryPoint': []
          ,'MT_pre__ExitPoint': []
          ,'MT_pre__Transition': []
          ,'MT_pre__StateMachine': []
          ,'MT_pre__State': []
          ,'MT_pre__Capsule': []
          ,'MT_pre__PackageContainer': []
          ,'MT_pre__Model_S': []
          ,'MT_pre__Package': []
          ,'MT_pre__CapsuleRole': []
          ,'MT_pre__PortConnector': []
          ,'MT_pre__Thread': []
          ,'MT_pre__PhysicalThread': []
          ,'MT_pre__LogicalThread': []
          ,'MT_pre__PortType': []
          ,'MT_pre__BASE0': []
          ,'MT_pre__CONJUGATE1': []
          ,'MT_pre__SignalType': []
          ,'MT_pre__OUT1': []
          ,'MT_pre__IN0': []
          ,'MT_pre__RoleType': []
          ,'MT_pre__FIXED0': []
          ,'MT_pre__OPTIONAL1': []
          ,'MT_pre__PLUGIN2': []
          ,'MT_pre__TransitionType': []
          ,'MT_pre__SIBLING0': []
          ,'MT_pre__IN1': []
          ,'MT_pre__OUT2': []
          ,'MT_pre__Def': []
          ,'MT_pre__Expr': []
          ,'MT_pre__Pattern': []
          ,'MT_pre__Proc': []
          ,'MT_pre__ProcDef': []
          ,'MT_pre__FuncDef': []
          ,'MT_pre__Name': []
          ,'MT_pre__PythonRef': []
          ,'MT_pre__Module': []
          ,'MT_pre__Null': []
          ,'MT_pre__Trigger_T': []
          ,'MT_pre__Listen': []
          ,'MT_pre__ConditionBranch': []
          ,'MT_pre__ListenBranch': []
          ,'MT_pre__Site': []
          ,'MT_pre__Model_T': []
          ,'MT_pre__MatchCase': []
          ,'MT_pre__Condition': []
          ,'MT_pre__New': []
          ,'MT_pre__Delay': []
          ,'MT_pre__Par': []
          ,'MT_pre__ParIndexed': []
          ,'MT_pre__Inst': []
          ,'MT_pre__LocalDef': []
          ,'MT_pre__Seq': []
          ,'MT_pre__ConditionSet': []
          ,'MT_pre__Match': []
          ,'MT_pre__Print': []
          ,'MT_pre__Attribute': []
          ,'MT_pre__Expression': []
          ,'MT_pre__Equation': []
          ,'MT_pre__Operation': []
          ,'MT_pre__Add': []
          ,'MT_pre__Subtract': []
          ,'MT_pre__Concat': []
          ,'MT_pre__Constant': []
          ,'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__paired_with': []
          ,'MT_pre__match_contains': []
          ,'MT_pre__apply_contains': [('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination')]
          ,'MT_pre__directLink_T': [('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__directLink_S': []
          ,'MT_pre__indirectLink_S': []
          ,'MT_pre__backward_link': [('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__trace_link': [('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__hasAttribute_S': []
          ,'MT_pre__hasAttribute_T': [('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__leftExpr': []
          ,'MT_pre__rightExpr': []
          ,'MT_pre__hasArgs': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': [('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination')] }
    self.CardinalityTable['MT_pre__ConditionSet']={
          'MT_pre__MatchModel': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__MetaModelElement_S': []
          ,'MT_pre__MetaModelElement_T': []
          ,'MT_pre__Element': []
          ,'MT_pre__NamedElement': []
          ,'MT_pre__Trigger_S': []
          ,'MT_pre__Action': []
          ,'MT_pre__PortRef': []
          ,'MT_pre__PortConnectorRef': []
          ,'MT_pre__StateMachineElement': []
          ,'MT_pre__Protocol': []
          ,'MT_pre__Signal': []
          ,'MT_pre__Port': []
          ,'MT_pre__Vertex': []
          ,'MT_pre__InitialPoint': []
          ,'MT_pre__EntryPoint': []
          ,'MT_pre__ExitPoint': []
          ,'MT_pre__Transition': []
          ,'MT_pre__StateMachine': []
          ,'MT_pre__State': []
          ,'MT_pre__Capsule': []
          ,'MT_pre__PackageContainer': []
          ,'MT_pre__Model_S': []
          ,'MT_pre__Package': []
          ,'MT_pre__CapsuleRole': []
          ,'MT_pre__PortConnector': []
          ,'MT_pre__Thread': []
          ,'MT_pre__PhysicalThread': []
          ,'MT_pre__LogicalThread': []
          ,'MT_pre__PortType': []
          ,'MT_pre__BASE0': []
          ,'MT_pre__CONJUGATE1': []
          ,'MT_pre__SignalType': []
          ,'MT_pre__OUT1': []
          ,'MT_pre__IN0': []
          ,'MT_pre__RoleType': []
          ,'MT_pre__FIXED0': []
          ,'MT_pre__OPTIONAL1': []
          ,'MT_pre__PLUGIN2': []
          ,'MT_pre__TransitionType': []
          ,'MT_pre__SIBLING0': []
          ,'MT_pre__IN1': []
          ,'MT_pre__OUT2': []
          ,'MT_pre__Def': []
          ,'MT_pre__Expr': []
          ,'MT_pre__Pattern': []
          ,'MT_pre__Proc': []
          ,'MT_pre__ProcDef': []
          ,'MT_pre__FuncDef': []
          ,'MT_pre__Name': []
          ,'MT_pre__PythonRef': []
          ,'MT_pre__Module': []
          ,'MT_pre__Null': []
          ,'MT_pre__Trigger_T': []
          ,'MT_pre__Listen': []
          ,'MT_pre__ConditionBranch': []
          ,'MT_pre__ListenBranch': []
          ,'MT_pre__Site': []
          ,'MT_pre__Model_T': []
          ,'MT_pre__MatchCase': []
          ,'MT_pre__Condition': []
          ,'MT_pre__New': []
          ,'MT_pre__Delay': []
          ,'MT_pre__Par': []
          ,'MT_pre__ParIndexed': []
          ,'MT_pre__Inst': []
          ,'MT_pre__LocalDef': []
          ,'MT_pre__Seq': []
          ,'MT_pre__ConditionSet': []
          ,'MT_pre__Match': []
          ,'MT_pre__Print': []
          ,'MT_pre__Attribute': []
          ,'MT_pre__Expression': []
          ,'MT_pre__Equation': []
          ,'MT_pre__Operation': []
          ,'MT_pre__Add': []
          ,'MT_pre__Subtract': []
          ,'MT_pre__Concat': []
          ,'MT_pre__Constant': []
          ,'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__paired_with': []
          ,'MT_pre__match_contains': []
          ,'MT_pre__apply_contains': [('0', 'N', 'Destination'), ('0', 'N', 'Destination')]
          ,'MT_pre__directLink_T': [('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__directLink_S': []
          ,'MT_pre__indirectLink_S': []
          ,'MT_pre__backward_link': [('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__trace_link': [('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__hasAttribute_S': []
          ,'MT_pre__hasAttribute_T': [('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__leftExpr': []
          ,'MT_pre__rightExpr': []
          ,'MT_pre__hasArgs': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': [('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination')] }
    self.CardinalityTable['MT_pre__Match']={
          'MT_pre__MatchModel': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__MetaModelElement_S': []
          ,'MT_pre__MetaModelElement_T': []
          ,'MT_pre__Element': []
          ,'MT_pre__NamedElement': []
          ,'MT_pre__Trigger_S': []
          ,'MT_pre__Action': []
          ,'MT_pre__PortRef': []
          ,'MT_pre__PortConnectorRef': []
          ,'MT_pre__StateMachineElement': []
          ,'MT_pre__Protocol': []
          ,'MT_pre__Signal': []
          ,'MT_pre__Port': []
          ,'MT_pre__Vertex': []
          ,'MT_pre__InitialPoint': []
          ,'MT_pre__EntryPoint': []
          ,'MT_pre__ExitPoint': []
          ,'MT_pre__Transition': []
          ,'MT_pre__StateMachine': []
          ,'MT_pre__State': []
          ,'MT_pre__Capsule': []
          ,'MT_pre__PackageContainer': []
          ,'MT_pre__Model_S': []
          ,'MT_pre__Package': []
          ,'MT_pre__CapsuleRole': []
          ,'MT_pre__PortConnector': []
          ,'MT_pre__Thread': []
          ,'MT_pre__PhysicalThread': []
          ,'MT_pre__LogicalThread': []
          ,'MT_pre__PortType': []
          ,'MT_pre__BASE0': []
          ,'MT_pre__CONJUGATE1': []
          ,'MT_pre__SignalType': []
          ,'MT_pre__OUT1': []
          ,'MT_pre__IN0': []
          ,'MT_pre__RoleType': []
          ,'MT_pre__FIXED0': []
          ,'MT_pre__OPTIONAL1': []
          ,'MT_pre__PLUGIN2': []
          ,'MT_pre__TransitionType': []
          ,'MT_pre__SIBLING0': []
          ,'MT_pre__IN1': []
          ,'MT_pre__OUT2': []
          ,'MT_pre__Def': []
          ,'MT_pre__Expr': []
          ,'MT_pre__Pattern': []
          ,'MT_pre__Proc': []
          ,'MT_pre__ProcDef': []
          ,'MT_pre__FuncDef': []
          ,'MT_pre__Name': []
          ,'MT_pre__PythonRef': []
          ,'MT_pre__Module': []
          ,'MT_pre__Null': []
          ,'MT_pre__Trigger_T': []
          ,'MT_pre__Listen': []
          ,'MT_pre__ConditionBranch': []
          ,'MT_pre__ListenBranch': []
          ,'MT_pre__Site': []
          ,'MT_pre__Model_T': []
          ,'MT_pre__MatchCase': []
          ,'MT_pre__Condition': []
          ,'MT_pre__New': []
          ,'MT_pre__Delay': []
          ,'MT_pre__Par': []
          ,'MT_pre__ParIndexed': []
          ,'MT_pre__Inst': []
          ,'MT_pre__LocalDef': []
          ,'MT_pre__Seq': []
          ,'MT_pre__ConditionSet': []
          ,'MT_pre__Match': []
          ,'MT_pre__Print': []
          ,'MT_pre__Attribute': []
          ,'MT_pre__Expression': []
          ,'MT_pre__Equation': []
          ,'MT_pre__Operation': []
          ,'MT_pre__Add': []
          ,'MT_pre__Subtract': []
          ,'MT_pre__Concat': []
          ,'MT_pre__Constant': []
          ,'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__paired_with': []
          ,'MT_pre__match_contains': []
          ,'MT_pre__apply_contains': [('0', 'N', 'Destination'), ('0', 'N', 'Destination')]
          ,'MT_pre__directLink_T': [('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__directLink_S': []
          ,'MT_pre__indirectLink_S': []
          ,'MT_pre__backward_link': [('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__trace_link': [('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__hasAttribute_S': []
          ,'MT_pre__hasAttribute_T': [('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__leftExpr': []
          ,'MT_pre__rightExpr': []
          ,'MT_pre__hasArgs': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': [('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination')] }
    self.CardinalityTable['MT_pre__Print']={
          'MT_pre__MatchModel': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__MetaModelElement_S': []
          ,'MT_pre__MetaModelElement_T': []
          ,'MT_pre__Element': []
          ,'MT_pre__NamedElement': []
          ,'MT_pre__Trigger_S': []
          ,'MT_pre__Action': []
          ,'MT_pre__PortRef': []
          ,'MT_pre__PortConnectorRef': []
          ,'MT_pre__StateMachineElement': []
          ,'MT_pre__Protocol': []
          ,'MT_pre__Signal': []
          ,'MT_pre__Port': []
          ,'MT_pre__Vertex': []
          ,'MT_pre__InitialPoint': []
          ,'MT_pre__EntryPoint': []
          ,'MT_pre__ExitPoint': []
          ,'MT_pre__Transition': []
          ,'MT_pre__StateMachine': []
          ,'MT_pre__State': []
          ,'MT_pre__Capsule': []
          ,'MT_pre__PackageContainer': []
          ,'MT_pre__Model_S': []
          ,'MT_pre__Package': []
          ,'MT_pre__CapsuleRole': []
          ,'MT_pre__PortConnector': []
          ,'MT_pre__Thread': []
          ,'MT_pre__PhysicalThread': []
          ,'MT_pre__LogicalThread': []
          ,'MT_pre__PortType': []
          ,'MT_pre__BASE0': []
          ,'MT_pre__CONJUGATE1': []
          ,'MT_pre__SignalType': []
          ,'MT_pre__OUT1': []
          ,'MT_pre__IN0': []
          ,'MT_pre__RoleType': []
          ,'MT_pre__FIXED0': []
          ,'MT_pre__OPTIONAL1': []
          ,'MT_pre__PLUGIN2': []
          ,'MT_pre__TransitionType': []
          ,'MT_pre__SIBLING0': []
          ,'MT_pre__IN1': []
          ,'MT_pre__OUT2': []
          ,'MT_pre__Def': []
          ,'MT_pre__Expr': []
          ,'MT_pre__Pattern': []
          ,'MT_pre__Proc': []
          ,'MT_pre__ProcDef': []
          ,'MT_pre__FuncDef': []
          ,'MT_pre__Name': []
          ,'MT_pre__PythonRef': []
          ,'MT_pre__Module': []
          ,'MT_pre__Null': []
          ,'MT_pre__Trigger_T': []
          ,'MT_pre__Listen': []
          ,'MT_pre__ConditionBranch': []
          ,'MT_pre__ListenBranch': []
          ,'MT_pre__Site': []
          ,'MT_pre__Model_T': []
          ,'MT_pre__MatchCase': []
          ,'MT_pre__Condition': []
          ,'MT_pre__New': []
          ,'MT_pre__Delay': []
          ,'MT_pre__Par': []
          ,'MT_pre__ParIndexed': []
          ,'MT_pre__Inst': []
          ,'MT_pre__LocalDef': []
          ,'MT_pre__Seq': []
          ,'MT_pre__ConditionSet': []
          ,'MT_pre__Match': []
          ,'MT_pre__Print': []
          ,'MT_pre__Attribute': []
          ,'MT_pre__Expression': []
          ,'MT_pre__Equation': []
          ,'MT_pre__Operation': []
          ,'MT_pre__Add': []
          ,'MT_pre__Subtract': []
          ,'MT_pre__Concat': []
          ,'MT_pre__Constant': []
          ,'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__paired_with': []
          ,'MT_pre__match_contains': []
          ,'MT_pre__apply_contains': [('0', 'N', 'Destination'), ('0', 'N', 'Destination')]
          ,'MT_pre__directLink_T': [('0', 'N', 'Source'), ('0', 'N', 'Destination'), ('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__directLink_S': []
          ,'MT_pre__indirectLink_S': []
          ,'MT_pre__backward_link': [('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__trace_link': [('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__hasAttribute_S': []
          ,'MT_pre__hasAttribute_T': [('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__leftExpr': []
          ,'MT_pre__rightExpr': []
          ,'MT_pre__hasArgs': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': [('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination')] }
    self.CardinalityTable['MT_pre__Attribute']={
          'MT_pre__MatchModel': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__MetaModelElement_S': []
          ,'MT_pre__MetaModelElement_T': []
          ,'MT_pre__Element': []
          ,'MT_pre__NamedElement': []
          ,'MT_pre__Trigger_S': []
          ,'MT_pre__Action': []
          ,'MT_pre__PortRef': []
          ,'MT_pre__PortConnectorRef': []
          ,'MT_pre__StateMachineElement': []
          ,'MT_pre__Protocol': []
          ,'MT_pre__Signal': []
          ,'MT_pre__Port': []
          ,'MT_pre__Vertex': []
          ,'MT_pre__InitialPoint': []
          ,'MT_pre__EntryPoint': []
          ,'MT_pre__ExitPoint': []
          ,'MT_pre__Transition': []
          ,'MT_pre__StateMachine': []
          ,'MT_pre__State': []
          ,'MT_pre__Capsule': []
          ,'MT_pre__PackageContainer': []
          ,'MT_pre__Model_S': []
          ,'MT_pre__Package': []
          ,'MT_pre__CapsuleRole': []
          ,'MT_pre__PortConnector': []
          ,'MT_pre__Thread': []
          ,'MT_pre__PhysicalThread': []
          ,'MT_pre__LogicalThread': []
          ,'MT_pre__PortType': []
          ,'MT_pre__BASE0': []
          ,'MT_pre__CONJUGATE1': []
          ,'MT_pre__SignalType': []
          ,'MT_pre__OUT1': []
          ,'MT_pre__IN0': []
          ,'MT_pre__RoleType': []
          ,'MT_pre__FIXED0': []
          ,'MT_pre__OPTIONAL1': []
          ,'MT_pre__PLUGIN2': []
          ,'MT_pre__TransitionType': []
          ,'MT_pre__SIBLING0': []
          ,'MT_pre__IN1': []
          ,'MT_pre__OUT2': []
          ,'MT_pre__Def': []
          ,'MT_pre__Expr': []
          ,'MT_pre__Pattern': []
          ,'MT_pre__Proc': []
          ,'MT_pre__ProcDef': []
          ,'MT_pre__FuncDef': []
          ,'MT_pre__Name': []
          ,'MT_pre__PythonRef': []
          ,'MT_pre__Module': []
          ,'MT_pre__Null': []
          ,'MT_pre__Trigger_T': []
          ,'MT_pre__Listen': []
          ,'MT_pre__ConditionBranch': []
          ,'MT_pre__ListenBranch': []
          ,'MT_pre__Site': []
          ,'MT_pre__Model_T': []
          ,'MT_pre__MatchCase': []
          ,'MT_pre__Condition': []
          ,'MT_pre__New': []
          ,'MT_pre__Delay': []
          ,'MT_pre__Par': []
          ,'MT_pre__ParIndexed': []
          ,'MT_pre__Inst': []
          ,'MT_pre__LocalDef': []
          ,'MT_pre__Seq': []
          ,'MT_pre__ConditionSet': []
          ,'MT_pre__Match': []
          ,'MT_pre__Print': []
          ,'MT_pre__Attribute': []
          ,'MT_pre__Expression': []
          ,'MT_pre__Equation': []
          ,'MT_pre__Operation': []
          ,'MT_pre__Add': []
          ,'MT_pre__Subtract': []
          ,'MT_pre__Concat': []
          ,'MT_pre__Constant': []
          ,'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__paired_with': []
          ,'MT_pre__match_contains': []
          ,'MT_pre__apply_contains': []
          ,'MT_pre__directLink_T': []
          ,'MT_pre__directLink_S': []
          ,'MT_pre__indirectLink_S': []
          ,'MT_pre__backward_link': []
          ,'MT_pre__trace_link': []
          ,'MT_pre__hasAttribute_S': [('0', 'N', 'Destination')]
          ,'MT_pre__hasAttribute_T': [('0', 'N', 'Destination')]
          ,'MT_pre__leftExpr': [('0', 'N', 'Destination')]
          ,'MT_pre__rightExpr': [('0', 'N', 'Destination')]
          ,'MT_pre__hasArgs': [('0', 'N', 'Destination')]
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': [('0', 'N', 'Destination'), ('0', 'N', 'Destination')] }
    self.CardinalityTable['MT_pre__Expression']={
          'MT_pre__MatchModel': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__MetaModelElement_S': []
          ,'MT_pre__MetaModelElement_T': []
          ,'MT_pre__Element': []
          ,'MT_pre__NamedElement': []
          ,'MT_pre__Trigger_S': []
          ,'MT_pre__Action': []
          ,'MT_pre__PortRef': []
          ,'MT_pre__PortConnectorRef': []
          ,'MT_pre__StateMachineElement': []
          ,'MT_pre__Protocol': []
          ,'MT_pre__Signal': []
          ,'MT_pre__Port': []
          ,'MT_pre__Vertex': []
          ,'MT_pre__InitialPoint': []
          ,'MT_pre__EntryPoint': []
          ,'MT_pre__ExitPoint': []
          ,'MT_pre__Transition': []
          ,'MT_pre__StateMachine': []
          ,'MT_pre__State': []
          ,'MT_pre__Capsule': []
          ,'MT_pre__PackageContainer': []
          ,'MT_pre__Model_S': []
          ,'MT_pre__Package': []
          ,'MT_pre__CapsuleRole': []
          ,'MT_pre__PortConnector': []
          ,'MT_pre__Thread': []
          ,'MT_pre__PhysicalThread': []
          ,'MT_pre__LogicalThread': []
          ,'MT_pre__PortType': []
          ,'MT_pre__BASE0': []
          ,'MT_pre__CONJUGATE1': []
          ,'MT_pre__SignalType': []
          ,'MT_pre__OUT1': []
          ,'MT_pre__IN0': []
          ,'MT_pre__RoleType': []
          ,'MT_pre__FIXED0': []
          ,'MT_pre__OPTIONAL1': []
          ,'MT_pre__PLUGIN2': []
          ,'MT_pre__TransitionType': []
          ,'MT_pre__SIBLING0': []
          ,'MT_pre__IN1': []
          ,'MT_pre__OUT2': []
          ,'MT_pre__Def': []
          ,'MT_pre__Expr': []
          ,'MT_pre__Pattern': []
          ,'MT_pre__Proc': []
          ,'MT_pre__ProcDef': []
          ,'MT_pre__FuncDef': []
          ,'MT_pre__Name': []
          ,'MT_pre__PythonRef': []
          ,'MT_pre__Module': []
          ,'MT_pre__Null': []
          ,'MT_pre__Trigger_T': []
          ,'MT_pre__Listen': []
          ,'MT_pre__ConditionBranch': []
          ,'MT_pre__ListenBranch': []
          ,'MT_pre__Site': []
          ,'MT_pre__Model_T': []
          ,'MT_pre__MatchCase': []
          ,'MT_pre__Condition': []
          ,'MT_pre__New': []
          ,'MT_pre__Delay': []
          ,'MT_pre__Par': []
          ,'MT_pre__ParIndexed': []
          ,'MT_pre__Inst': []
          ,'MT_pre__LocalDef': []
          ,'MT_pre__Seq': []
          ,'MT_pre__ConditionSet': []
          ,'MT_pre__Match': []
          ,'MT_pre__Print': []
          ,'MT_pre__Attribute': []
          ,'MT_pre__Expression': []
          ,'MT_pre__Equation': []
          ,'MT_pre__Operation': []
          ,'MT_pre__Add': []
          ,'MT_pre__Subtract': []
          ,'MT_pre__Concat': []
          ,'MT_pre__Constant': []
          ,'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__paired_with': []
          ,'MT_pre__match_contains': []
          ,'MT_pre__apply_contains': []
          ,'MT_pre__directLink_T': []
          ,'MT_pre__directLink_S': []
          ,'MT_pre__indirectLink_S': []
          ,'MT_pre__backward_link': []
          ,'MT_pre__trace_link': []
          ,'MT_pre__hasAttribute_S': []
          ,'MT_pre__hasAttribute_T': []
          ,'MT_pre__leftExpr': [('0', 'N', 'Destination')]
          ,'MT_pre__rightExpr': [('0', 'N', 'Destination')]
          ,'MT_pre__hasArgs': [('0', 'N', 'Destination')]
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': [('0', 'N', 'Destination')] }
    self.CardinalityTable['MT_pre__Equation']={
          'MT_pre__MatchModel': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__MetaModelElement_S': []
          ,'MT_pre__MetaModelElement_T': []
          ,'MT_pre__Element': []
          ,'MT_pre__NamedElement': []
          ,'MT_pre__Trigger_S': []
          ,'MT_pre__Action': []
          ,'MT_pre__PortRef': []
          ,'MT_pre__PortConnectorRef': []
          ,'MT_pre__StateMachineElement': []
          ,'MT_pre__Protocol': []
          ,'MT_pre__Signal': []
          ,'MT_pre__Port': []
          ,'MT_pre__Vertex': []
          ,'MT_pre__InitialPoint': []
          ,'MT_pre__EntryPoint': []
          ,'MT_pre__ExitPoint': []
          ,'MT_pre__Transition': []
          ,'MT_pre__StateMachine': []
          ,'MT_pre__State': []
          ,'MT_pre__Capsule': []
          ,'MT_pre__PackageContainer': []
          ,'MT_pre__Model_S': []
          ,'MT_pre__Package': []
          ,'MT_pre__CapsuleRole': []
          ,'MT_pre__PortConnector': []
          ,'MT_pre__Thread': []
          ,'MT_pre__PhysicalThread': []
          ,'MT_pre__LogicalThread': []
          ,'MT_pre__PortType': []
          ,'MT_pre__BASE0': []
          ,'MT_pre__CONJUGATE1': []
          ,'MT_pre__SignalType': []
          ,'MT_pre__OUT1': []
          ,'MT_pre__IN0': []
          ,'MT_pre__RoleType': []
          ,'MT_pre__FIXED0': []
          ,'MT_pre__OPTIONAL1': []
          ,'MT_pre__PLUGIN2': []
          ,'MT_pre__TransitionType': []
          ,'MT_pre__SIBLING0': []
          ,'MT_pre__IN1': []
          ,'MT_pre__OUT2': []
          ,'MT_pre__Def': []
          ,'MT_pre__Expr': []
          ,'MT_pre__Pattern': []
          ,'MT_pre__Proc': []
          ,'MT_pre__ProcDef': []
          ,'MT_pre__FuncDef': []
          ,'MT_pre__Name': []
          ,'MT_pre__PythonRef': []
          ,'MT_pre__Module': []
          ,'MT_pre__Null': []
          ,'MT_pre__Trigger_T': []
          ,'MT_pre__Listen': []
          ,'MT_pre__ConditionBranch': []
          ,'MT_pre__ListenBranch': []
          ,'MT_pre__Site': []
          ,'MT_pre__Model_T': []
          ,'MT_pre__MatchCase': []
          ,'MT_pre__Condition': []
          ,'MT_pre__New': []
          ,'MT_pre__Delay': []
          ,'MT_pre__Par': []
          ,'MT_pre__ParIndexed': []
          ,'MT_pre__Inst': []
          ,'MT_pre__LocalDef': []
          ,'MT_pre__Seq': []
          ,'MT_pre__ConditionSet': []
          ,'MT_pre__Match': []
          ,'MT_pre__Print': []
          ,'MT_pre__Attribute': []
          ,'MT_pre__Expression': []
          ,'MT_pre__Equation': []
          ,'MT_pre__Operation': []
          ,'MT_pre__Add': []
          ,'MT_pre__Subtract': []
          ,'MT_pre__Concat': []
          ,'MT_pre__Constant': []
          ,'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__paired_with': []
          ,'MT_pre__match_contains': []
          ,'MT_pre__apply_contains': []
          ,'MT_pre__directLink_T': []
          ,'MT_pre__directLink_S': []
          ,'MT_pre__indirectLink_S': []
          ,'MT_pre__backward_link': []
          ,'MT_pre__trace_link': []
          ,'MT_pre__hasAttribute_S': []
          ,'MT_pre__hasAttribute_T': []
          ,'MT_pre__leftExpr': [('0', 'N', 'Source')]
          ,'MT_pre__rightExpr': [('0', 'N', 'Source')]
          ,'MT_pre__hasArgs': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': [('0', 'N', 'Destination')] }
    self.CardinalityTable['MT_pre__Operation']={
          'MT_pre__MatchModel': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__MetaModelElement_S': []
          ,'MT_pre__MetaModelElement_T': []
          ,'MT_pre__Element': []
          ,'MT_pre__NamedElement': []
          ,'MT_pre__Trigger_S': []
          ,'MT_pre__Action': []
          ,'MT_pre__PortRef': []
          ,'MT_pre__PortConnectorRef': []
          ,'MT_pre__StateMachineElement': []
          ,'MT_pre__Protocol': []
          ,'MT_pre__Signal': []
          ,'MT_pre__Port': []
          ,'MT_pre__Vertex': []
          ,'MT_pre__InitialPoint': []
          ,'MT_pre__EntryPoint': []
          ,'MT_pre__ExitPoint': []
          ,'MT_pre__Transition': []
          ,'MT_pre__StateMachine': []
          ,'MT_pre__State': []
          ,'MT_pre__Capsule': []
          ,'MT_pre__PackageContainer': []
          ,'MT_pre__Model_S': []
          ,'MT_pre__Package': []
          ,'MT_pre__CapsuleRole': []
          ,'MT_pre__PortConnector': []
          ,'MT_pre__Thread': []
          ,'MT_pre__PhysicalThread': []
          ,'MT_pre__LogicalThread': []
          ,'MT_pre__PortType': []
          ,'MT_pre__BASE0': []
          ,'MT_pre__CONJUGATE1': []
          ,'MT_pre__SignalType': []
          ,'MT_pre__OUT1': []
          ,'MT_pre__IN0': []
          ,'MT_pre__RoleType': []
          ,'MT_pre__FIXED0': []
          ,'MT_pre__OPTIONAL1': []
          ,'MT_pre__PLUGIN2': []
          ,'MT_pre__TransitionType': []
          ,'MT_pre__SIBLING0': []
          ,'MT_pre__IN1': []
          ,'MT_pre__OUT2': []
          ,'MT_pre__Def': []
          ,'MT_pre__Expr': []
          ,'MT_pre__Pattern': []
          ,'MT_pre__Proc': []
          ,'MT_pre__ProcDef': []
          ,'MT_pre__FuncDef': []
          ,'MT_pre__Name': []
          ,'MT_pre__PythonRef': []
          ,'MT_pre__Module': []
          ,'MT_pre__Null': []
          ,'MT_pre__Trigger_T': []
          ,'MT_pre__Listen': []
          ,'MT_pre__ConditionBranch': []
          ,'MT_pre__ListenBranch': []
          ,'MT_pre__Site': []
          ,'MT_pre__Model_T': []
          ,'MT_pre__MatchCase': []
          ,'MT_pre__Condition': []
          ,'MT_pre__New': []
          ,'MT_pre__Delay': []
          ,'MT_pre__Par': []
          ,'MT_pre__ParIndexed': []
          ,'MT_pre__Inst': []
          ,'MT_pre__LocalDef': []
          ,'MT_pre__Seq': []
          ,'MT_pre__ConditionSet': []
          ,'MT_pre__Match': []
          ,'MT_pre__Print': []
          ,'MT_pre__Attribute': []
          ,'MT_pre__Expression': []
          ,'MT_pre__Equation': []
          ,'MT_pre__Operation': []
          ,'MT_pre__Add': []
          ,'MT_pre__Subtract': []
          ,'MT_pre__Concat': []
          ,'MT_pre__Constant': []
          ,'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__paired_with': []
          ,'MT_pre__match_contains': []
          ,'MT_pre__apply_contains': []
          ,'MT_pre__directLink_T': []
          ,'MT_pre__directLink_S': []
          ,'MT_pre__indirectLink_S': []
          ,'MT_pre__backward_link': []
          ,'MT_pre__trace_link': []
          ,'MT_pre__hasAttribute_S': []
          ,'MT_pre__hasAttribute_T': []
          ,'MT_pre__leftExpr': [('0', 'N', 'Destination')]
          ,'MT_pre__rightExpr': [('0', 'N', 'Destination')]
          ,'MT_pre__hasArgs': [('0', 'N', 'Destination'), ('0', 'N', 'Source')]
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': [('0', 'N', 'Destination'), ('0', 'N', 'Destination')] }
    self.CardinalityTable['MT_pre__Add']={
          'MT_pre__MatchModel': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__MetaModelElement_S': []
          ,'MT_pre__MetaModelElement_T': []
          ,'MT_pre__Element': []
          ,'MT_pre__NamedElement': []
          ,'MT_pre__Trigger_S': []
          ,'MT_pre__Action': []
          ,'MT_pre__PortRef': []
          ,'MT_pre__PortConnectorRef': []
          ,'MT_pre__StateMachineElement': []
          ,'MT_pre__Protocol': []
          ,'MT_pre__Signal': []
          ,'MT_pre__Port': []
          ,'MT_pre__Vertex': []
          ,'MT_pre__InitialPoint': []
          ,'MT_pre__EntryPoint': []
          ,'MT_pre__ExitPoint': []
          ,'MT_pre__Transition': []
          ,'MT_pre__StateMachine': []
          ,'MT_pre__State': []
          ,'MT_pre__Capsule': []
          ,'MT_pre__PackageContainer': []
          ,'MT_pre__Model_S': []
          ,'MT_pre__Package': []
          ,'MT_pre__CapsuleRole': []
          ,'MT_pre__PortConnector': []
          ,'MT_pre__Thread': []
          ,'MT_pre__PhysicalThread': []
          ,'MT_pre__LogicalThread': []
          ,'MT_pre__PortType': []
          ,'MT_pre__BASE0': []
          ,'MT_pre__CONJUGATE1': []
          ,'MT_pre__SignalType': []
          ,'MT_pre__OUT1': []
          ,'MT_pre__IN0': []
          ,'MT_pre__RoleType': []
          ,'MT_pre__FIXED0': []
          ,'MT_pre__OPTIONAL1': []
          ,'MT_pre__PLUGIN2': []
          ,'MT_pre__TransitionType': []
          ,'MT_pre__SIBLING0': []
          ,'MT_pre__IN1': []
          ,'MT_pre__OUT2': []
          ,'MT_pre__Def': []
          ,'MT_pre__Expr': []
          ,'MT_pre__Pattern': []
          ,'MT_pre__Proc': []
          ,'MT_pre__ProcDef': []
          ,'MT_pre__FuncDef': []
          ,'MT_pre__Name': []
          ,'MT_pre__PythonRef': []
          ,'MT_pre__Module': []
          ,'MT_pre__Null': []
          ,'MT_pre__Trigger_T': []
          ,'MT_pre__Listen': []
          ,'MT_pre__ConditionBranch': []
          ,'MT_pre__ListenBranch': []
          ,'MT_pre__Site': []
          ,'MT_pre__Model_T': []
          ,'MT_pre__MatchCase': []
          ,'MT_pre__Condition': []
          ,'MT_pre__New': []
          ,'MT_pre__Delay': []
          ,'MT_pre__Par': []
          ,'MT_pre__ParIndexed': []
          ,'MT_pre__Inst': []
          ,'MT_pre__LocalDef': []
          ,'MT_pre__Seq': []
          ,'MT_pre__ConditionSet': []
          ,'MT_pre__Match': []
          ,'MT_pre__Print': []
          ,'MT_pre__Attribute': []
          ,'MT_pre__Expression': []
          ,'MT_pre__Equation': []
          ,'MT_pre__Operation': []
          ,'MT_pre__Add': []
          ,'MT_pre__Subtract': []
          ,'MT_pre__Concat': []
          ,'MT_pre__Constant': []
          ,'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__paired_with': []
          ,'MT_pre__match_contains': []
          ,'MT_pre__apply_contains': []
          ,'MT_pre__directLink_T': []
          ,'MT_pre__directLink_S': []
          ,'MT_pre__indirectLink_S': []
          ,'MT_pre__backward_link': []
          ,'MT_pre__trace_link': []
          ,'MT_pre__hasAttribute_S': []
          ,'MT_pre__hasAttribute_T': []
          ,'MT_pre__leftExpr': [('0', 'N', 'Destination'), ('0', 'N', 'Destination')]
          ,'MT_pre__rightExpr': [('0', 'N', 'Destination'), ('0', 'N', 'Destination')]
          ,'MT_pre__hasArgs': [('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Source')]
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': [('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination')] }
    self.CardinalityTable['MT_pre__Subtract']={
          'MT_pre__MatchModel': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__MetaModelElement_S': []
          ,'MT_pre__MetaModelElement_T': []
          ,'MT_pre__Element': []
          ,'MT_pre__NamedElement': []
          ,'MT_pre__Trigger_S': []
          ,'MT_pre__Action': []
          ,'MT_pre__PortRef': []
          ,'MT_pre__PortConnectorRef': []
          ,'MT_pre__StateMachineElement': []
          ,'MT_pre__Protocol': []
          ,'MT_pre__Signal': []
          ,'MT_pre__Port': []
          ,'MT_pre__Vertex': []
          ,'MT_pre__InitialPoint': []
          ,'MT_pre__EntryPoint': []
          ,'MT_pre__ExitPoint': []
          ,'MT_pre__Transition': []
          ,'MT_pre__StateMachine': []
          ,'MT_pre__State': []
          ,'MT_pre__Capsule': []
          ,'MT_pre__PackageContainer': []
          ,'MT_pre__Model_S': []
          ,'MT_pre__Package': []
          ,'MT_pre__CapsuleRole': []
          ,'MT_pre__PortConnector': []
          ,'MT_pre__Thread': []
          ,'MT_pre__PhysicalThread': []
          ,'MT_pre__LogicalThread': []
          ,'MT_pre__PortType': []
          ,'MT_pre__BASE0': []
          ,'MT_pre__CONJUGATE1': []
          ,'MT_pre__SignalType': []
          ,'MT_pre__OUT1': []
          ,'MT_pre__IN0': []
          ,'MT_pre__RoleType': []
          ,'MT_pre__FIXED0': []
          ,'MT_pre__OPTIONAL1': []
          ,'MT_pre__PLUGIN2': []
          ,'MT_pre__TransitionType': []
          ,'MT_pre__SIBLING0': []
          ,'MT_pre__IN1': []
          ,'MT_pre__OUT2': []
          ,'MT_pre__Def': []
          ,'MT_pre__Expr': []
          ,'MT_pre__Pattern': []
          ,'MT_pre__Proc': []
          ,'MT_pre__ProcDef': []
          ,'MT_pre__FuncDef': []
          ,'MT_pre__Name': []
          ,'MT_pre__PythonRef': []
          ,'MT_pre__Module': []
          ,'MT_pre__Null': []
          ,'MT_pre__Trigger_T': []
          ,'MT_pre__Listen': []
          ,'MT_pre__ConditionBranch': []
          ,'MT_pre__ListenBranch': []
          ,'MT_pre__Site': []
          ,'MT_pre__Model_T': []
          ,'MT_pre__MatchCase': []
          ,'MT_pre__Condition': []
          ,'MT_pre__New': []
          ,'MT_pre__Delay': []
          ,'MT_pre__Par': []
          ,'MT_pre__ParIndexed': []
          ,'MT_pre__Inst': []
          ,'MT_pre__LocalDef': []
          ,'MT_pre__Seq': []
          ,'MT_pre__ConditionSet': []
          ,'MT_pre__Match': []
          ,'MT_pre__Print': []
          ,'MT_pre__Attribute': []
          ,'MT_pre__Expression': []
          ,'MT_pre__Equation': []
          ,'MT_pre__Operation': []
          ,'MT_pre__Add': []
          ,'MT_pre__Subtract': []
          ,'MT_pre__Concat': []
          ,'MT_pre__Constant': []
          ,'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__paired_with': []
          ,'MT_pre__match_contains': []
          ,'MT_pre__apply_contains': []
          ,'MT_pre__directLink_T': []
          ,'MT_pre__directLink_S': []
          ,'MT_pre__indirectLink_S': []
          ,'MT_pre__backward_link': []
          ,'MT_pre__trace_link': []
          ,'MT_pre__hasAttribute_S': []
          ,'MT_pre__hasAttribute_T': []
          ,'MT_pre__leftExpr': [('0', 'N', 'Destination'), ('0', 'N', 'Destination')]
          ,'MT_pre__rightExpr': [('0', 'N', 'Destination'), ('0', 'N', 'Destination')]
          ,'MT_pre__hasArgs': [('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Source')]
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': [('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination')] }
    self.CardinalityTable['MT_pre__Concat']={
          'MT_pre__MatchModel': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__MetaModelElement_S': []
          ,'MT_pre__MetaModelElement_T': []
          ,'MT_pre__Element': []
          ,'MT_pre__NamedElement': []
          ,'MT_pre__Trigger_S': []
          ,'MT_pre__Action': []
          ,'MT_pre__PortRef': []
          ,'MT_pre__PortConnectorRef': []
          ,'MT_pre__StateMachineElement': []
          ,'MT_pre__Protocol': []
          ,'MT_pre__Signal': []
          ,'MT_pre__Port': []
          ,'MT_pre__Vertex': []
          ,'MT_pre__InitialPoint': []
          ,'MT_pre__EntryPoint': []
          ,'MT_pre__ExitPoint': []
          ,'MT_pre__Transition': []
          ,'MT_pre__StateMachine': []
          ,'MT_pre__State': []
          ,'MT_pre__Capsule': []
          ,'MT_pre__PackageContainer': []
          ,'MT_pre__Model_S': []
          ,'MT_pre__Package': []
          ,'MT_pre__CapsuleRole': []
          ,'MT_pre__PortConnector': []
          ,'MT_pre__Thread': []
          ,'MT_pre__PhysicalThread': []
          ,'MT_pre__LogicalThread': []
          ,'MT_pre__PortType': []
          ,'MT_pre__BASE0': []
          ,'MT_pre__CONJUGATE1': []
          ,'MT_pre__SignalType': []
          ,'MT_pre__OUT1': []
          ,'MT_pre__IN0': []
          ,'MT_pre__RoleType': []
          ,'MT_pre__FIXED0': []
          ,'MT_pre__OPTIONAL1': []
          ,'MT_pre__PLUGIN2': []
          ,'MT_pre__TransitionType': []
          ,'MT_pre__SIBLING0': []
          ,'MT_pre__IN1': []
          ,'MT_pre__OUT2': []
          ,'MT_pre__Def': []
          ,'MT_pre__Expr': []
          ,'MT_pre__Pattern': []
          ,'MT_pre__Proc': []
          ,'MT_pre__ProcDef': []
          ,'MT_pre__FuncDef': []
          ,'MT_pre__Name': []
          ,'MT_pre__PythonRef': []
          ,'MT_pre__Module': []
          ,'MT_pre__Null': []
          ,'MT_pre__Trigger_T': []
          ,'MT_pre__Listen': []
          ,'MT_pre__ConditionBranch': []
          ,'MT_pre__ListenBranch': []
          ,'MT_pre__Site': []
          ,'MT_pre__Model_T': []
          ,'MT_pre__MatchCase': []
          ,'MT_pre__Condition': []
          ,'MT_pre__New': []
          ,'MT_pre__Delay': []
          ,'MT_pre__Par': []
          ,'MT_pre__ParIndexed': []
          ,'MT_pre__Inst': []
          ,'MT_pre__LocalDef': []
          ,'MT_pre__Seq': []
          ,'MT_pre__ConditionSet': []
          ,'MT_pre__Match': []
          ,'MT_pre__Print': []
          ,'MT_pre__Attribute': []
          ,'MT_pre__Expression': []
          ,'MT_pre__Equation': []
          ,'MT_pre__Operation': []
          ,'MT_pre__Add': []
          ,'MT_pre__Subtract': []
          ,'MT_pre__Concat': []
          ,'MT_pre__Constant': []
          ,'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__paired_with': []
          ,'MT_pre__match_contains': []
          ,'MT_pre__apply_contains': []
          ,'MT_pre__directLink_T': []
          ,'MT_pre__directLink_S': []
          ,'MT_pre__indirectLink_S': []
          ,'MT_pre__backward_link': []
          ,'MT_pre__trace_link': []
          ,'MT_pre__hasAttribute_S': []
          ,'MT_pre__hasAttribute_T': []
          ,'MT_pre__leftExpr': [('0', 'N', 'Destination'), ('0', 'N', 'Destination')]
          ,'MT_pre__rightExpr': [('0', 'N', 'Destination'), ('0', 'N', 'Destination')]
          ,'MT_pre__hasArgs': [('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Source')]
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': [('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination'), ('0', 'N', 'Destination')] }
    self.CardinalityTable['MT_pre__Constant']={
          'MT_pre__MatchModel': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__MetaModelElement_S': []
          ,'MT_pre__MetaModelElement_T': []
          ,'MT_pre__Element': []
          ,'MT_pre__NamedElement': []
          ,'MT_pre__Trigger_S': []
          ,'MT_pre__Action': []
          ,'MT_pre__PortRef': []
          ,'MT_pre__PortConnectorRef': []
          ,'MT_pre__StateMachineElement': []
          ,'MT_pre__Protocol': []
          ,'MT_pre__Signal': []
          ,'MT_pre__Port': []
          ,'MT_pre__Vertex': []
          ,'MT_pre__InitialPoint': []
          ,'MT_pre__EntryPoint': []
          ,'MT_pre__ExitPoint': []
          ,'MT_pre__Transition': []
          ,'MT_pre__StateMachine': []
          ,'MT_pre__State': []
          ,'MT_pre__Capsule': []
          ,'MT_pre__PackageContainer': []
          ,'MT_pre__Model_S': []
          ,'MT_pre__Package': []
          ,'MT_pre__CapsuleRole': []
          ,'MT_pre__PortConnector': []
          ,'MT_pre__Thread': []
          ,'MT_pre__PhysicalThread': []
          ,'MT_pre__LogicalThread': []
          ,'MT_pre__PortType': []
          ,'MT_pre__BASE0': []
          ,'MT_pre__CONJUGATE1': []
          ,'MT_pre__SignalType': []
          ,'MT_pre__OUT1': []
          ,'MT_pre__IN0': []
          ,'MT_pre__RoleType': []
          ,'MT_pre__FIXED0': []
          ,'MT_pre__OPTIONAL1': []
          ,'MT_pre__PLUGIN2': []
          ,'MT_pre__TransitionType': []
          ,'MT_pre__SIBLING0': []
          ,'MT_pre__IN1': []
          ,'MT_pre__OUT2': []
          ,'MT_pre__Def': []
          ,'MT_pre__Expr': []
          ,'MT_pre__Pattern': []
          ,'MT_pre__Proc': []
          ,'MT_pre__ProcDef': []
          ,'MT_pre__FuncDef': []
          ,'MT_pre__Name': []
          ,'MT_pre__PythonRef': []
          ,'MT_pre__Module': []
          ,'MT_pre__Null': []
          ,'MT_pre__Trigger_T': []
          ,'MT_pre__Listen': []
          ,'MT_pre__ConditionBranch': []
          ,'MT_pre__ListenBranch': []
          ,'MT_pre__Site': []
          ,'MT_pre__Model_T': []
          ,'MT_pre__MatchCase': []
          ,'MT_pre__Condition': []
          ,'MT_pre__New': []
          ,'MT_pre__Delay': []
          ,'MT_pre__Par': []
          ,'MT_pre__ParIndexed': []
          ,'MT_pre__Inst': []
          ,'MT_pre__LocalDef': []
          ,'MT_pre__Seq': []
          ,'MT_pre__ConditionSet': []
          ,'MT_pre__Match': []
          ,'MT_pre__Print': []
          ,'MT_pre__Attribute': []
          ,'MT_pre__Expression': []
          ,'MT_pre__Equation': []
          ,'MT_pre__Operation': []
          ,'MT_pre__Add': []
          ,'MT_pre__Subtract': []
          ,'MT_pre__Concat': []
          ,'MT_pre__Constant': []
          ,'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__paired_with': []
          ,'MT_pre__match_contains': []
          ,'MT_pre__apply_contains': []
          ,'MT_pre__directLink_T': []
          ,'MT_pre__directLink_S': []
          ,'MT_pre__indirectLink_S': []
          ,'MT_pre__backward_link': []
          ,'MT_pre__trace_link': []
          ,'MT_pre__hasAttribute_S': []
          ,'MT_pre__hasAttribute_T': []
          ,'MT_pre__leftExpr': [('0', 'N', 'Destination')]
          ,'MT_pre__rightExpr': [('0', 'N', 'Destination')]
          ,'MT_pre__hasArgs': [('0', 'N', 'Destination')]
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': [('0', 'N', 'Destination'), ('0', 'N', 'Destination')] }
    self.CardinalityTable['MT_pre__GenericNode_UMLRT2Kiltera_MM']={
          'MT_pre__MatchModel': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__MetaModelElement_S': []
          ,'MT_pre__MetaModelElement_T': []
          ,'MT_pre__Element': []
          ,'MT_pre__NamedElement': []
          ,'MT_pre__Trigger_S': []
          ,'MT_pre__Action': []
          ,'MT_pre__PortRef': []
          ,'MT_pre__PortConnectorRef': []
          ,'MT_pre__StateMachineElement': []
          ,'MT_pre__Protocol': []
          ,'MT_pre__Signal': []
          ,'MT_pre__Port': []
          ,'MT_pre__Vertex': []
          ,'MT_pre__InitialPoint': []
          ,'MT_pre__EntryPoint': []
          ,'MT_pre__ExitPoint': []
          ,'MT_pre__Transition': []
          ,'MT_pre__StateMachine': []
          ,'MT_pre__State': []
          ,'MT_pre__Capsule': []
          ,'MT_pre__PackageContainer': []
          ,'MT_pre__Model_S': []
          ,'MT_pre__Package': []
          ,'MT_pre__CapsuleRole': []
          ,'MT_pre__PortConnector': []
          ,'MT_pre__Thread': []
          ,'MT_pre__PhysicalThread': []
          ,'MT_pre__LogicalThread': []
          ,'MT_pre__PortType': []
          ,'MT_pre__BASE0': []
          ,'MT_pre__CONJUGATE1': []
          ,'MT_pre__SignalType': []
          ,'MT_pre__OUT1': []
          ,'MT_pre__IN0': []
          ,'MT_pre__RoleType': []
          ,'MT_pre__FIXED0': []
          ,'MT_pre__OPTIONAL1': []
          ,'MT_pre__PLUGIN2': []
          ,'MT_pre__TransitionType': []
          ,'MT_pre__SIBLING0': []
          ,'MT_pre__IN1': []
          ,'MT_pre__OUT2': []
          ,'MT_pre__Def': []
          ,'MT_pre__Expr': []
          ,'MT_pre__Pattern': []
          ,'MT_pre__Proc': []
          ,'MT_pre__ProcDef': []
          ,'MT_pre__FuncDef': []
          ,'MT_pre__Name': []
          ,'MT_pre__PythonRef': []
          ,'MT_pre__Module': []
          ,'MT_pre__Null': []
          ,'MT_pre__Trigger_T': []
          ,'MT_pre__Listen': []
          ,'MT_pre__ConditionBranch': []
          ,'MT_pre__ListenBranch': []
          ,'MT_pre__Site': []
          ,'MT_pre__Model_T': []
          ,'MT_pre__MatchCase': []
          ,'MT_pre__Condition': []
          ,'MT_pre__New': []
          ,'MT_pre__Delay': []
          ,'MT_pre__Par': []
          ,'MT_pre__ParIndexed': []
          ,'MT_pre__Inst': []
          ,'MT_pre__LocalDef': []
          ,'MT_pre__Seq': []
          ,'MT_pre__ConditionSet': []
          ,'MT_pre__Match': []
          ,'MT_pre__Print': []
          ,'MT_pre__Attribute': []
          ,'MT_pre__Expression': []
          ,'MT_pre__Equation': []
          ,'MT_pre__Operation': []
          ,'MT_pre__Add': []
          ,'MT_pre__Subtract': []
          ,'MT_pre__Concat': []
          ,'MT_pre__Constant': []
          ,'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__paired_with': []
          ,'MT_pre__match_contains': []
          ,'MT_pre__apply_contains': []
          ,'MT_pre__directLink_T': []
          ,'MT_pre__directLink_S': []
          ,'MT_pre__indirectLink_S': []
          ,'MT_pre__backward_link': []
          ,'MT_pre__trace_link': []
          ,'MT_pre__hasAttribute_S': []
          ,'MT_pre__hasAttribute_T': []
          ,'MT_pre__leftExpr': []
          ,'MT_pre__rightExpr': []
          ,'MT_pre__hasArgs': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': [('0', 'N', 'Source'), ('0', 'N', 'Destination')] }
    self.CardinalityTable['MT_pre__paired_with']={
          'MT_pre__MatchModel': [('0', '1', 'Destination')]
          ,'MT_pre__ApplyModel': [('0', '1', 'Source')]
          ,'MT_pre__MetaModelElement_S': []
          ,'MT_pre__MetaModelElement_T': []
          ,'MT_pre__Element': []
          ,'MT_pre__NamedElement': []
          ,'MT_pre__Trigger_S': []
          ,'MT_pre__Action': []
          ,'MT_pre__PortRef': []
          ,'MT_pre__PortConnectorRef': []
          ,'MT_pre__StateMachineElement': []
          ,'MT_pre__Protocol': []
          ,'MT_pre__Signal': []
          ,'MT_pre__Port': []
          ,'MT_pre__Vertex': []
          ,'MT_pre__InitialPoint': []
          ,'MT_pre__EntryPoint': []
          ,'MT_pre__ExitPoint': []
          ,'MT_pre__Transition': []
          ,'MT_pre__StateMachine': []
          ,'MT_pre__State': []
          ,'MT_pre__Capsule': []
          ,'MT_pre__PackageContainer': []
          ,'MT_pre__Model_S': []
          ,'MT_pre__Package': []
          ,'MT_pre__CapsuleRole': []
          ,'MT_pre__PortConnector': []
          ,'MT_pre__Thread': []
          ,'MT_pre__PhysicalThread': []
          ,'MT_pre__LogicalThread': []
          ,'MT_pre__PortType': []
          ,'MT_pre__BASE0': []
          ,'MT_pre__CONJUGATE1': []
          ,'MT_pre__SignalType': []
          ,'MT_pre__OUT1': []
          ,'MT_pre__IN0': []
          ,'MT_pre__RoleType': []
          ,'MT_pre__FIXED0': []
          ,'MT_pre__OPTIONAL1': []
          ,'MT_pre__PLUGIN2': []
          ,'MT_pre__TransitionType': []
          ,'MT_pre__SIBLING0': []
          ,'MT_pre__IN1': []
          ,'MT_pre__OUT2': []
          ,'MT_pre__Def': []
          ,'MT_pre__Expr': []
          ,'MT_pre__Pattern': []
          ,'MT_pre__Proc': []
          ,'MT_pre__ProcDef': []
          ,'MT_pre__FuncDef': []
          ,'MT_pre__Name': []
          ,'MT_pre__PythonRef': []
          ,'MT_pre__Module': []
          ,'MT_pre__Null': []
          ,'MT_pre__Trigger_T': []
          ,'MT_pre__Listen': []
          ,'MT_pre__ConditionBranch': []
          ,'MT_pre__ListenBranch': []
          ,'MT_pre__Site': []
          ,'MT_pre__Model_T': []
          ,'MT_pre__MatchCase': []
          ,'MT_pre__Condition': []
          ,'MT_pre__New': []
          ,'MT_pre__Delay': []
          ,'MT_pre__Par': []
          ,'MT_pre__ParIndexed': []
          ,'MT_pre__Inst': []
          ,'MT_pre__LocalDef': []
          ,'MT_pre__Seq': []
          ,'MT_pre__ConditionSet': []
          ,'MT_pre__Match': []
          ,'MT_pre__Print': []
          ,'MT_pre__Attribute': []
          ,'MT_pre__Expression': []
          ,'MT_pre__Equation': []
          ,'MT_pre__Operation': []
          ,'MT_pre__Add': []
          ,'MT_pre__Subtract': []
          ,'MT_pre__Concat': []
          ,'MT_pre__Constant': []
          ,'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__paired_with': []
          ,'MT_pre__match_contains': []
          ,'MT_pre__apply_contains': []
          ,'MT_pre__directLink_T': []
          ,'MT_pre__directLink_S': []
          ,'MT_pre__indirectLink_S': []
          ,'MT_pre__backward_link': []
          ,'MT_pre__trace_link': []
          ,'MT_pre__hasAttribute_S': []
          ,'MT_pre__hasAttribute_T': []
          ,'MT_pre__leftExpr': []
          ,'MT_pre__rightExpr': []
          ,'MT_pre__hasArgs': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': [] }
    self.CardinalityTable['MT_pre__match_contains']={
          'MT_pre__MatchModel': [('0', 'N', 'Destination')]
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__MetaModelElement_S': [('0', 'N', 'Source')]
          ,'MT_pre__MetaModelElement_T': []
          ,'MT_pre__Element': [('0', 'N', 'Source')]
          ,'MT_pre__NamedElement': [('0', 'N', 'Source')]
          ,'MT_pre__Trigger_S': [('0', 'N', 'Source')]
          ,'MT_pre__Action': [('0', 'N', 'Source')]
          ,'MT_pre__PortRef': [('0', 'N', 'Source')]
          ,'MT_pre__PortConnectorRef': [('0', 'N', 'Source')]
          ,'MT_pre__StateMachineElement': [('0', 'N', 'Source')]
          ,'MT_pre__Protocol': [('0', 'N', 'Source')]
          ,'MT_pre__Signal': [('0', 'N', 'Source')]
          ,'MT_pre__Port': [('0', 'N', 'Source')]
          ,'MT_pre__Vertex': [('0', 'N', 'Source')]
          ,'MT_pre__InitialPoint': [('0', 'N', 'Source')]
          ,'MT_pre__EntryPoint': [('0', 'N', 'Source')]
          ,'MT_pre__ExitPoint': [('0', 'N', 'Source')]
          ,'MT_pre__Transition': [('0', 'N', 'Source')]
          ,'MT_pre__StateMachine': [('0', 'N', 'Source')]
          ,'MT_pre__State': [('0', 'N', 'Source')]
          ,'MT_pre__Capsule': [('0', 'N', 'Source')]
          ,'MT_pre__PackageContainer': [('0', 'N', 'Source')]
          ,'MT_pre__Model_S': [('0', 'N', 'Source')]
          ,'MT_pre__Package': [('0', 'N', 'Source')]
          ,'MT_pre__CapsuleRole': [('0', 'N', 'Source')]
          ,'MT_pre__PortConnector': [('0', 'N', 'Source')]
          ,'MT_pre__Thread': [('0', 'N', 'Source')]
          ,'MT_pre__PhysicalThread': [('0', 'N', 'Source')]
          ,'MT_pre__LogicalThread': [('0', 'N', 'Source')]
          ,'MT_pre__PortType': [('0', 'N', 'Source')]
          ,'MT_pre__BASE0': [('0', 'N', 'Source')]
          ,'MT_pre__CONJUGATE1': [('0', 'N', 'Source')]
          ,'MT_pre__SignalType': [('0', 'N', 'Source')]
          ,'MT_pre__OUT1': [('0', 'N', 'Source')]
          ,'MT_pre__IN0': [('0', 'N', 'Source')]
          ,'MT_pre__RoleType': [('0', 'N', 'Source')]
          ,'MT_pre__FIXED0': [('0', 'N', 'Source')]
          ,'MT_pre__OPTIONAL1': [('0', 'N', 'Source')]
          ,'MT_pre__PLUGIN2': [('0', 'N', 'Source')]
          ,'MT_pre__TransitionType': [('0', 'N', 'Source')]
          ,'MT_pre__SIBLING0': [('0', 'N', 'Source')]
          ,'MT_pre__IN1': [('0', 'N', 'Source')]
          ,'MT_pre__OUT2': [('0', 'N', 'Source')]
          ,'MT_pre__Def': []
          ,'MT_pre__Expr': []
          ,'MT_pre__Pattern': []
          ,'MT_pre__Proc': []
          ,'MT_pre__ProcDef': []
          ,'MT_pre__FuncDef': []
          ,'MT_pre__Name': []
          ,'MT_pre__PythonRef': []
          ,'MT_pre__Module': []
          ,'MT_pre__Null': []
          ,'MT_pre__Trigger_T': []
          ,'MT_pre__Listen': []
          ,'MT_pre__ConditionBranch': []
          ,'MT_pre__ListenBranch': []
          ,'MT_pre__Site': []
          ,'MT_pre__Model_T': []
          ,'MT_pre__MatchCase': []
          ,'MT_pre__Condition': []
          ,'MT_pre__New': []
          ,'MT_pre__Delay': []
          ,'MT_pre__Par': []
          ,'MT_pre__ParIndexed': []
          ,'MT_pre__Inst': []
          ,'MT_pre__LocalDef': []
          ,'MT_pre__Seq': []
          ,'MT_pre__ConditionSet': []
          ,'MT_pre__Match': []
          ,'MT_pre__Print': []
          ,'MT_pre__Attribute': []
          ,'MT_pre__Expression': []
          ,'MT_pre__Equation': []
          ,'MT_pre__Operation': []
          ,'MT_pre__Add': []
          ,'MT_pre__Subtract': []
          ,'MT_pre__Concat': []
          ,'MT_pre__Constant': []
          ,'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__paired_with': []
          ,'MT_pre__match_contains': []
          ,'MT_pre__apply_contains': []
          ,'MT_pre__directLink_T': []
          ,'MT_pre__directLink_S': []
          ,'MT_pre__indirectLink_S': []
          ,'MT_pre__backward_link': []
          ,'MT_pre__trace_link': []
          ,'MT_pre__hasAttribute_S': []
          ,'MT_pre__hasAttribute_T': []
          ,'MT_pre__leftExpr': []
          ,'MT_pre__rightExpr': []
          ,'MT_pre__hasArgs': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': [] }
    self.CardinalityTable['MT_pre__apply_contains']={
          'MT_pre__MatchModel': []
          ,'MT_pre__ApplyModel': [('0', 'N', 'Destination')]
          ,'MT_pre__MetaModelElement_S': []
          ,'MT_pre__MetaModelElement_T': [('0', 'N', 'Source')]
          ,'MT_pre__Element': []
          ,'MT_pre__NamedElement': []
          ,'MT_pre__Trigger_S': []
          ,'MT_pre__Action': []
          ,'MT_pre__PortRef': []
          ,'MT_pre__PortConnectorRef': []
          ,'MT_pre__StateMachineElement': []
          ,'MT_pre__Protocol': []
          ,'MT_pre__Signal': []
          ,'MT_pre__Port': []
          ,'MT_pre__Vertex': []
          ,'MT_pre__InitialPoint': []
          ,'MT_pre__EntryPoint': []
          ,'MT_pre__ExitPoint': []
          ,'MT_pre__Transition': []
          ,'MT_pre__StateMachine': []
          ,'MT_pre__State': []
          ,'MT_pre__Capsule': []
          ,'MT_pre__PackageContainer': []
          ,'MT_pre__Model_S': []
          ,'MT_pre__Package': []
          ,'MT_pre__CapsuleRole': []
          ,'MT_pre__PortConnector': []
          ,'MT_pre__Thread': []
          ,'MT_pre__PhysicalThread': []
          ,'MT_pre__LogicalThread': []
          ,'MT_pre__PortType': []
          ,'MT_pre__BASE0': []
          ,'MT_pre__CONJUGATE1': []
          ,'MT_pre__SignalType': []
          ,'MT_pre__OUT1': []
          ,'MT_pre__IN0': []
          ,'MT_pre__RoleType': []
          ,'MT_pre__FIXED0': []
          ,'MT_pre__OPTIONAL1': []
          ,'MT_pre__PLUGIN2': []
          ,'MT_pre__TransitionType': []
          ,'MT_pre__SIBLING0': []
          ,'MT_pre__IN1': []
          ,'MT_pre__OUT2': []
          ,'MT_pre__Def': [('0', 'N', 'Source')]
          ,'MT_pre__Expr': [('0', 'N', 'Source')]
          ,'MT_pre__Pattern': [('0', 'N', 'Source')]
          ,'MT_pre__Proc': [('0', 'N', 'Source')]
          ,'MT_pre__ProcDef': [('0', 'N', 'Source')]
          ,'MT_pre__FuncDef': [('0', 'N', 'Source')]
          ,'MT_pre__Name': [('0', 'N', 'Source')]
          ,'MT_pre__PythonRef': [('0', 'N', 'Source')]
          ,'MT_pre__Module': [('0', 'N', 'Source')]
          ,'MT_pre__Null': [('0', 'N', 'Source')]
          ,'MT_pre__Trigger_T': [('0', 'N', 'Source')]
          ,'MT_pre__Listen': [('0', 'N', 'Source')]
          ,'MT_pre__ConditionBranch': [('0', 'N', 'Source')]
          ,'MT_pre__ListenBranch': [('0', 'N', 'Source')]
          ,'MT_pre__Site': [('0', 'N', 'Source')]
          ,'MT_pre__Model_T': [('0', 'N', 'Source')]
          ,'MT_pre__MatchCase': [('0', 'N', 'Source')]
          ,'MT_pre__Condition': [('0', 'N', 'Source')]
          ,'MT_pre__New': [('0', 'N', 'Source')]
          ,'MT_pre__Delay': [('0', 'N', 'Source')]
          ,'MT_pre__Par': [('0', 'N', 'Source')]
          ,'MT_pre__ParIndexed': [('0', 'N', 'Source')]
          ,'MT_pre__Inst': [('0', 'N', 'Source')]
          ,'MT_pre__LocalDef': [('0', 'N', 'Source')]
          ,'MT_pre__Seq': [('0', 'N', 'Source')]
          ,'MT_pre__ConditionSet': [('0', 'N', 'Source')]
          ,'MT_pre__Match': [('0', 'N', 'Source')]
          ,'MT_pre__Print': [('0', 'N', 'Source')]
          ,'MT_pre__Attribute': []
          ,'MT_pre__Expression': []
          ,'MT_pre__Equation': []
          ,'MT_pre__Operation': []
          ,'MT_pre__Add': []
          ,'MT_pre__Subtract': []
          ,'MT_pre__Concat': []
          ,'MT_pre__Constant': []
          ,'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__paired_with': []
          ,'MT_pre__match_contains': []
          ,'MT_pre__apply_contains': []
          ,'MT_pre__directLink_T': []
          ,'MT_pre__directLink_S': []
          ,'MT_pre__indirectLink_S': []
          ,'MT_pre__backward_link': []
          ,'MT_pre__trace_link': []
          ,'MT_pre__hasAttribute_S': []
          ,'MT_pre__hasAttribute_T': []
          ,'MT_pre__leftExpr': []
          ,'MT_pre__rightExpr': []
          ,'MT_pre__hasArgs': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': [] }
    self.CardinalityTable['MT_pre__directLink_T']={
          'MT_pre__MatchModel': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__MetaModelElement_S': []
          ,'MT_pre__MetaModelElement_T': [('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__Element': []
          ,'MT_pre__NamedElement': []
          ,'MT_pre__Trigger_S': []
          ,'MT_pre__Action': []
          ,'MT_pre__PortRef': []
          ,'MT_pre__PortConnectorRef': []
          ,'MT_pre__StateMachineElement': []
          ,'MT_pre__Protocol': []
          ,'MT_pre__Signal': []
          ,'MT_pre__Port': []
          ,'MT_pre__Vertex': []
          ,'MT_pre__InitialPoint': []
          ,'MT_pre__EntryPoint': []
          ,'MT_pre__ExitPoint': []
          ,'MT_pre__Transition': []
          ,'MT_pre__StateMachine': []
          ,'MT_pre__State': []
          ,'MT_pre__Capsule': []
          ,'MT_pre__PackageContainer': []
          ,'MT_pre__Model_S': []
          ,'MT_pre__Package': []
          ,'MT_pre__CapsuleRole': []
          ,'MT_pre__PortConnector': []
          ,'MT_pre__Thread': []
          ,'MT_pre__PhysicalThread': []
          ,'MT_pre__LogicalThread': []
          ,'MT_pre__PortType': []
          ,'MT_pre__BASE0': []
          ,'MT_pre__CONJUGATE1': []
          ,'MT_pre__SignalType': []
          ,'MT_pre__OUT1': []
          ,'MT_pre__IN0': []
          ,'MT_pre__RoleType': []
          ,'MT_pre__FIXED0': []
          ,'MT_pre__OPTIONAL1': []
          ,'MT_pre__PLUGIN2': []
          ,'MT_pre__TransitionType': []
          ,'MT_pre__SIBLING0': []
          ,'MT_pre__IN1': []
          ,'MT_pre__OUT2': []
          ,'MT_pre__Def': [('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__Expr': [('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__Pattern': [('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__Proc': [('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__ProcDef': [('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__FuncDef': [('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__Name': [('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__PythonRef': [('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__Module': [('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__Null': [('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__Trigger_T': [('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__Listen': [('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__ConditionBranch': [('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__ListenBranch': [('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__Site': [('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__Model_T': [('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__MatchCase': [('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__Condition': [('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__New': [('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__Delay': [('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__Par': [('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__ParIndexed': [('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__Inst': [('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__LocalDef': [('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__Seq': [('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__ConditionSet': [('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__Match': [('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__Print': [('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__Attribute': []
          ,'MT_pre__Expression': []
          ,'MT_pre__Equation': []
          ,'MT_pre__Operation': []
          ,'MT_pre__Add': []
          ,'MT_pre__Subtract': []
          ,'MT_pre__Concat': []
          ,'MT_pre__Constant': []
          ,'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__paired_with': []
          ,'MT_pre__match_contains': []
          ,'MT_pre__apply_contains': []
          ,'MT_pre__directLink_T': []
          ,'MT_pre__directLink_S': []
          ,'MT_pre__indirectLink_S': []
          ,'MT_pre__backward_link': []
          ,'MT_pre__trace_link': []
          ,'MT_pre__hasAttribute_S': []
          ,'MT_pre__hasAttribute_T': []
          ,'MT_pre__leftExpr': []
          ,'MT_pre__rightExpr': []
          ,'MT_pre__hasArgs': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': [] }
    self.CardinalityTable['MT_pre__directLink_S']={
          'MT_pre__MatchModel': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__MetaModelElement_S': [('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__MetaModelElement_T': []
          ,'MT_pre__Element': [('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__NamedElement': [('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__Trigger_S': [('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__Action': [('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__PortRef': [('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__PortConnectorRef': [('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__StateMachineElement': [('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__Protocol': [('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__Signal': [('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__Port': [('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__Vertex': [('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__InitialPoint': [('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__EntryPoint': [('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__ExitPoint': [('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__Transition': [('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__StateMachine': [('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__State': [('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__Capsule': [('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__PackageContainer': [('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__Model_S': [('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__Package': [('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__CapsuleRole': [('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__PortConnector': [('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__Thread': [('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__PhysicalThread': [('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__LogicalThread': [('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__PortType': [('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__BASE0': [('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__CONJUGATE1': [('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__SignalType': [('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__OUT1': [('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__IN0': [('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__RoleType': [('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__FIXED0': [('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__OPTIONAL1': [('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__PLUGIN2': [('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__TransitionType': [('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__SIBLING0': [('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__IN1': [('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__OUT2': [('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__Def': []
          ,'MT_pre__Expr': []
          ,'MT_pre__Pattern': []
          ,'MT_pre__Proc': []
          ,'MT_pre__ProcDef': []
          ,'MT_pre__FuncDef': []
          ,'MT_pre__Name': []
          ,'MT_pre__PythonRef': []
          ,'MT_pre__Module': []
          ,'MT_pre__Null': []
          ,'MT_pre__Trigger_T': []
          ,'MT_pre__Listen': []
          ,'MT_pre__ConditionBranch': []
          ,'MT_pre__ListenBranch': []
          ,'MT_pre__Site': []
          ,'MT_pre__Model_T': []
          ,'MT_pre__MatchCase': []
          ,'MT_pre__Condition': []
          ,'MT_pre__New': []
          ,'MT_pre__Delay': []
          ,'MT_pre__Par': []
          ,'MT_pre__ParIndexed': []
          ,'MT_pre__Inst': []
          ,'MT_pre__LocalDef': []
          ,'MT_pre__Seq': []
          ,'MT_pre__ConditionSet': []
          ,'MT_pre__Match': []
          ,'MT_pre__Print': []
          ,'MT_pre__Attribute': []
          ,'MT_pre__Expression': []
          ,'MT_pre__Equation': []
          ,'MT_pre__Operation': []
          ,'MT_pre__Add': []
          ,'MT_pre__Subtract': []
          ,'MT_pre__Concat': []
          ,'MT_pre__Constant': []
          ,'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__paired_with': []
          ,'MT_pre__match_contains': []
          ,'MT_pre__apply_contains': []
          ,'MT_pre__directLink_T': []
          ,'MT_pre__directLink_S': []
          ,'MT_pre__indirectLink_S': []
          ,'MT_pre__backward_link': []
          ,'MT_pre__trace_link': []
          ,'MT_pre__hasAttribute_S': []
          ,'MT_pre__hasAttribute_T': []
          ,'MT_pre__leftExpr': []
          ,'MT_pre__rightExpr': []
          ,'MT_pre__hasArgs': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': [] }
    self.CardinalityTable['MT_pre__indirectLink_S']={
          'MT_pre__MatchModel': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__MetaModelElement_S': [('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__MetaModelElement_T': []
          ,'MT_pre__Element': [('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__NamedElement': [('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__Trigger_S': [('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__Action': [('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__PortRef': [('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__PortConnectorRef': [('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__StateMachineElement': [('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__Protocol': [('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__Signal': [('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__Port': [('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__Vertex': [('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__InitialPoint': [('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__EntryPoint': [('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__ExitPoint': [('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__Transition': [('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__StateMachine': [('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__State': [('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__Capsule': [('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__PackageContainer': [('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__Model_S': [('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__Package': [('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__CapsuleRole': [('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__PortConnector': [('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__Thread': [('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__PhysicalThread': [('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__LogicalThread': [('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__PortType': [('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__BASE0': [('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__CONJUGATE1': [('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__SignalType': [('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__OUT1': [('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__IN0': [('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__RoleType': [('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__FIXED0': [('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__OPTIONAL1': [('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__PLUGIN2': [('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__TransitionType': [('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__SIBLING0': [('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__IN1': [('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__OUT2': [('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__Def': []
          ,'MT_pre__Expr': []
          ,'MT_pre__Pattern': []
          ,'MT_pre__Proc': []
          ,'MT_pre__ProcDef': []
          ,'MT_pre__FuncDef': []
          ,'MT_pre__Name': []
          ,'MT_pre__PythonRef': []
          ,'MT_pre__Module': []
          ,'MT_pre__Null': []
          ,'MT_pre__Trigger_T': []
          ,'MT_pre__Listen': []
          ,'MT_pre__ConditionBranch': []
          ,'MT_pre__ListenBranch': []
          ,'MT_pre__Site': []
          ,'MT_pre__Model_T': []
          ,'MT_pre__MatchCase': []
          ,'MT_pre__Condition': []
          ,'MT_pre__New': []
          ,'MT_pre__Delay': []
          ,'MT_pre__Par': []
          ,'MT_pre__ParIndexed': []
          ,'MT_pre__Inst': []
          ,'MT_pre__LocalDef': []
          ,'MT_pre__Seq': []
          ,'MT_pre__ConditionSet': []
          ,'MT_pre__Match': []
          ,'MT_pre__Print': []
          ,'MT_pre__Attribute': []
          ,'MT_pre__Expression': []
          ,'MT_pre__Equation': []
          ,'MT_pre__Operation': []
          ,'MT_pre__Add': []
          ,'MT_pre__Subtract': []
          ,'MT_pre__Concat': []
          ,'MT_pre__Constant': []
          ,'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__paired_with': []
          ,'MT_pre__match_contains': []
          ,'MT_pre__apply_contains': []
          ,'MT_pre__directLink_T': []
          ,'MT_pre__directLink_S': []
          ,'MT_pre__indirectLink_S': []
          ,'MT_pre__backward_link': []
          ,'MT_pre__trace_link': []
          ,'MT_pre__hasAttribute_S': []
          ,'MT_pre__hasAttribute_T': []
          ,'MT_pre__leftExpr': []
          ,'MT_pre__rightExpr': []
          ,'MT_pre__hasArgs': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': [] }
    self.CardinalityTable['MT_pre__backward_link']={
          'MT_pre__MatchModel': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__MetaModelElement_S': [('0', 'N', 'Source')]
          ,'MT_pre__MetaModelElement_T': [('0', 'N', 'Destination')]
          ,'MT_pre__Element': [('0', 'N', 'Source')]
          ,'MT_pre__NamedElement': [('0', 'N', 'Source')]
          ,'MT_pre__Trigger_S': [('0', 'N', 'Source')]
          ,'MT_pre__Action': [('0', 'N', 'Source')]
          ,'MT_pre__PortRef': [('0', 'N', 'Source')]
          ,'MT_pre__PortConnectorRef': [('0', 'N', 'Source')]
          ,'MT_pre__StateMachineElement': [('0', 'N', 'Source')]
          ,'MT_pre__Protocol': [('0', 'N', 'Source')]
          ,'MT_pre__Signal': [('0', 'N', 'Source')]
          ,'MT_pre__Port': [('0', 'N', 'Source')]
          ,'MT_pre__Vertex': [('0', 'N', 'Source')]
          ,'MT_pre__InitialPoint': [('0', 'N', 'Source')]
          ,'MT_pre__EntryPoint': [('0', 'N', 'Source')]
          ,'MT_pre__ExitPoint': [('0', 'N', 'Source')]
          ,'MT_pre__Transition': [('0', 'N', 'Source')]
          ,'MT_pre__StateMachine': [('0', 'N', 'Source')]
          ,'MT_pre__State': [('0', 'N', 'Source')]
          ,'MT_pre__Capsule': [('0', 'N', 'Source')]
          ,'MT_pre__PackageContainer': [('0', 'N', 'Source')]
          ,'MT_pre__Model_S': [('0', 'N', 'Source')]
          ,'MT_pre__Package': [('0', 'N', 'Source')]
          ,'MT_pre__CapsuleRole': [('0', 'N', 'Source')]
          ,'MT_pre__PortConnector': [('0', 'N', 'Source')]
          ,'MT_pre__Thread': [('0', 'N', 'Source')]
          ,'MT_pre__PhysicalThread': [('0', 'N', 'Source')]
          ,'MT_pre__LogicalThread': [('0', 'N', 'Source')]
          ,'MT_pre__PortType': [('0', 'N', 'Source')]
          ,'MT_pre__BASE0': [('0', 'N', 'Source')]
          ,'MT_pre__CONJUGATE1': [('0', 'N', 'Source')]
          ,'MT_pre__SignalType': [('0', 'N', 'Source')]
          ,'MT_pre__OUT1': [('0', 'N', 'Source')]
          ,'MT_pre__IN0': [('0', 'N', 'Source')]
          ,'MT_pre__RoleType': [('0', 'N', 'Source')]
          ,'MT_pre__FIXED0': [('0', 'N', 'Source')]
          ,'MT_pre__OPTIONAL1': [('0', 'N', 'Source')]
          ,'MT_pre__PLUGIN2': [('0', 'N', 'Source')]
          ,'MT_pre__TransitionType': [('0', 'N', 'Source')]
          ,'MT_pre__SIBLING0': [('0', 'N', 'Source')]
          ,'MT_pre__IN1': [('0', 'N', 'Source')]
          ,'MT_pre__OUT2': [('0', 'N', 'Source')]
          ,'MT_pre__Def': [('0', 'N', 'Destination')]
          ,'MT_pre__Expr': [('0', 'N', 'Destination')]
          ,'MT_pre__Pattern': [('0', 'N', 'Destination')]
          ,'MT_pre__Proc': [('0', 'N', 'Destination')]
          ,'MT_pre__ProcDef': [('0', 'N', 'Destination')]
          ,'MT_pre__FuncDef': [('0', 'N', 'Destination')]
          ,'MT_pre__Name': [('0', 'N', 'Destination')]
          ,'MT_pre__PythonRef': [('0', 'N', 'Destination')]
          ,'MT_pre__Module': [('0', 'N', 'Destination')]
          ,'MT_pre__Null': [('0', 'N', 'Destination')]
          ,'MT_pre__Trigger_T': [('0', 'N', 'Destination')]
          ,'MT_pre__Listen': [('0', 'N', 'Destination')]
          ,'MT_pre__ConditionBranch': [('0', 'N', 'Destination')]
          ,'MT_pre__ListenBranch': [('0', 'N', 'Destination')]
          ,'MT_pre__Site': [('0', 'N', 'Destination')]
          ,'MT_pre__Model_T': [('0', 'N', 'Destination')]
          ,'MT_pre__MatchCase': [('0', 'N', 'Destination')]
          ,'MT_pre__Condition': [('0', 'N', 'Destination')]
          ,'MT_pre__New': [('0', 'N', 'Destination')]
          ,'MT_pre__Delay': [('0', 'N', 'Destination')]
          ,'MT_pre__Par': [('0', 'N', 'Destination')]
          ,'MT_pre__ParIndexed': [('0', 'N', 'Destination')]
          ,'MT_pre__Inst': [('0', 'N', 'Destination')]
          ,'MT_pre__LocalDef': [('0', 'N', 'Destination')]
          ,'MT_pre__Seq': [('0', 'N', 'Destination')]
          ,'MT_pre__ConditionSet': [('0', 'N', 'Destination')]
          ,'MT_pre__Match': [('0', 'N', 'Destination')]
          ,'MT_pre__Print': [('0', 'N', 'Destination')]
          ,'MT_pre__Attribute': []
          ,'MT_pre__Expression': []
          ,'MT_pre__Equation': []
          ,'MT_pre__Operation': []
          ,'MT_pre__Add': []
          ,'MT_pre__Subtract': []
          ,'MT_pre__Concat': []
          ,'MT_pre__Constant': []
          ,'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__paired_with': []
          ,'MT_pre__match_contains': []
          ,'MT_pre__apply_contains': []
          ,'MT_pre__directLink_T': []
          ,'MT_pre__directLink_S': []
          ,'MT_pre__indirectLink_S': []
          ,'MT_pre__backward_link': []
          ,'MT_pre__trace_link': []
          ,'MT_pre__hasAttribute_S': []
          ,'MT_pre__hasAttribute_T': []
          ,'MT_pre__leftExpr': []
          ,'MT_pre__rightExpr': []
          ,'MT_pre__hasArgs': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': [] }
    self.CardinalityTable['MT_pre__trace_link']={
          'MT_pre__MatchModel': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__MetaModelElement_S': [('0', 'N', 'Source')]
          ,'MT_pre__MetaModelElement_T': [('0', 'N', 'Destination')]
          ,'MT_pre__Element': [('0', 'N', 'Source')]
          ,'MT_pre__NamedElement': [('0', 'N', 'Source')]
          ,'MT_pre__Trigger_S': [('0', 'N', 'Source')]
          ,'MT_pre__Action': [('0', 'N', 'Source')]
          ,'MT_pre__PortRef': [('0', 'N', 'Source')]
          ,'MT_pre__PortConnectorRef': [('0', 'N', 'Source')]
          ,'MT_pre__StateMachineElement': [('0', 'N', 'Source')]
          ,'MT_pre__Protocol': [('0', 'N', 'Source')]
          ,'MT_pre__Signal': [('0', 'N', 'Source')]
          ,'MT_pre__Port': [('0', 'N', 'Source')]
          ,'MT_pre__Vertex': [('0', 'N', 'Source')]
          ,'MT_pre__InitialPoint': [('0', 'N', 'Source')]
          ,'MT_pre__EntryPoint': [('0', 'N', 'Source')]
          ,'MT_pre__ExitPoint': [('0', 'N', 'Source')]
          ,'MT_pre__Transition': [('0', 'N', 'Source')]
          ,'MT_pre__StateMachine': [('0', 'N', 'Source')]
          ,'MT_pre__State': [('0', 'N', 'Source')]
          ,'MT_pre__Capsule': [('0', 'N', 'Source')]
          ,'MT_pre__PackageContainer': [('0', 'N', 'Source')]
          ,'MT_pre__Model_S': [('0', 'N', 'Source')]
          ,'MT_pre__Package': [('0', 'N', 'Source')]
          ,'MT_pre__CapsuleRole': [('0', 'N', 'Source')]
          ,'MT_pre__PortConnector': [('0', 'N', 'Source')]
          ,'MT_pre__Thread': [('0', 'N', 'Source')]
          ,'MT_pre__PhysicalThread': [('0', 'N', 'Source')]
          ,'MT_pre__LogicalThread': [('0', 'N', 'Source')]
          ,'MT_pre__PortType': [('0', 'N', 'Source')]
          ,'MT_pre__BASE0': [('0', 'N', 'Source')]
          ,'MT_pre__CONJUGATE1': [('0', 'N', 'Source')]
          ,'MT_pre__SignalType': [('0', 'N', 'Source')]
          ,'MT_pre__OUT1': [('0', 'N', 'Source')]
          ,'MT_pre__IN0': [('0', 'N', 'Source')]
          ,'MT_pre__RoleType': [('0', 'N', 'Source')]
          ,'MT_pre__FIXED0': [('0', 'N', 'Source')]
          ,'MT_pre__OPTIONAL1': [('0', 'N', 'Source')]
          ,'MT_pre__PLUGIN2': [('0', 'N', 'Source')]
          ,'MT_pre__TransitionType': [('0', 'N', 'Source')]
          ,'MT_pre__SIBLING0': [('0', 'N', 'Source')]
          ,'MT_pre__IN1': [('0', 'N', 'Source')]
          ,'MT_pre__OUT2': [('0', 'N', 'Source')]
          ,'MT_pre__Def': [('0', 'N', 'Destination')]
          ,'MT_pre__Expr': [('0', 'N', 'Destination')]
          ,'MT_pre__Pattern': [('0', 'N', 'Destination')]
          ,'MT_pre__Proc': [('0', 'N', 'Destination')]
          ,'MT_pre__ProcDef': [('0', 'N', 'Destination')]
          ,'MT_pre__FuncDef': [('0', 'N', 'Destination')]
          ,'MT_pre__Name': [('0', 'N', 'Destination')]
          ,'MT_pre__PythonRef': [('0', 'N', 'Destination')]
          ,'MT_pre__Module': [('0', 'N', 'Destination')]
          ,'MT_pre__Null': [('0', 'N', 'Destination')]
          ,'MT_pre__Trigger_T': [('0', 'N', 'Destination')]
          ,'MT_pre__Listen': [('0', 'N', 'Destination')]
          ,'MT_pre__ConditionBranch': [('0', 'N', 'Destination')]
          ,'MT_pre__ListenBranch': [('0', 'N', 'Destination')]
          ,'MT_pre__Site': [('0', 'N', 'Destination')]
          ,'MT_pre__Model_T': [('0', 'N', 'Destination')]
          ,'MT_pre__MatchCase': [('0', 'N', 'Destination')]
          ,'MT_pre__Condition': [('0', 'N', 'Destination')]
          ,'MT_pre__New': [('0', 'N', 'Destination')]
          ,'MT_pre__Delay': [('0', 'N', 'Destination')]
          ,'MT_pre__Par': [('0', 'N', 'Destination')]
          ,'MT_pre__ParIndexed': [('0', 'N', 'Destination')]
          ,'MT_pre__Inst': [('0', 'N', 'Destination')]
          ,'MT_pre__LocalDef': [('0', 'N', 'Destination')]
          ,'MT_pre__Seq': [('0', 'N', 'Destination')]
          ,'MT_pre__ConditionSet': [('0', 'N', 'Destination')]
          ,'MT_pre__Match': [('0', 'N', 'Destination')]
          ,'MT_pre__Print': [('0', 'N', 'Destination')]
          ,'MT_pre__Attribute': []
          ,'MT_pre__Expression': []
          ,'MT_pre__Equation': []
          ,'MT_pre__Operation': []
          ,'MT_pre__Add': []
          ,'MT_pre__Subtract': []
          ,'MT_pre__Concat': []
          ,'MT_pre__Constant': []
          ,'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__paired_with': []
          ,'MT_pre__match_contains': []
          ,'MT_pre__apply_contains': []
          ,'MT_pre__directLink_T': []
          ,'MT_pre__directLink_S': []
          ,'MT_pre__indirectLink_S': []
          ,'MT_pre__backward_link': []
          ,'MT_pre__trace_link': []
          ,'MT_pre__hasAttribute_S': []
          ,'MT_pre__hasAttribute_T': []
          ,'MT_pre__leftExpr': []
          ,'MT_pre__rightExpr': []
          ,'MT_pre__hasArgs': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': [] }
    self.CardinalityTable['MT_pre__hasAttribute_S']={
          'MT_pre__MatchModel': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__MetaModelElement_S': [('0', 'N', 'Destination')]
          ,'MT_pre__MetaModelElement_T': []
          ,'MT_pre__Element': [('0', 'N', 'Destination')]
          ,'MT_pre__NamedElement': [('0', 'N', 'Destination')]
          ,'MT_pre__Trigger_S': [('0', 'N', 'Destination')]
          ,'MT_pre__Action': [('0', 'N', 'Destination')]
          ,'MT_pre__PortRef': [('0', 'N', 'Destination')]
          ,'MT_pre__PortConnectorRef': [('0', 'N', 'Destination')]
          ,'MT_pre__StateMachineElement': [('0', 'N', 'Destination')]
          ,'MT_pre__Protocol': [('0', 'N', 'Destination')]
          ,'MT_pre__Signal': [('0', 'N', 'Destination')]
          ,'MT_pre__Port': [('0', 'N', 'Destination')]
          ,'MT_pre__Vertex': [('0', 'N', 'Destination')]
          ,'MT_pre__InitialPoint': [('0', 'N', 'Destination')]
          ,'MT_pre__EntryPoint': [('0', 'N', 'Destination')]
          ,'MT_pre__ExitPoint': [('0', 'N', 'Destination')]
          ,'MT_pre__Transition': [('0', 'N', 'Destination')]
          ,'MT_pre__StateMachine': [('0', 'N', 'Destination')]
          ,'MT_pre__State': [('0', 'N', 'Destination')]
          ,'MT_pre__Capsule': [('0', 'N', 'Destination')]
          ,'MT_pre__PackageContainer': [('0', 'N', 'Destination')]
          ,'MT_pre__Model_S': [('0', 'N', 'Destination')]
          ,'MT_pre__Package': [('0', 'N', 'Destination')]
          ,'MT_pre__CapsuleRole': [('0', 'N', 'Destination')]
          ,'MT_pre__PortConnector': [('0', 'N', 'Destination')]
          ,'MT_pre__Thread': [('0', 'N', 'Destination')]
          ,'MT_pre__PhysicalThread': [('0', 'N', 'Destination')]
          ,'MT_pre__LogicalThread': [('0', 'N', 'Destination')]
          ,'MT_pre__PortType': [('0', 'N', 'Destination')]
          ,'MT_pre__BASE0': [('0', 'N', 'Destination')]
          ,'MT_pre__CONJUGATE1': [('0', 'N', 'Destination')]
          ,'MT_pre__SignalType': [('0', 'N', 'Destination')]
          ,'MT_pre__OUT1': [('0', 'N', 'Destination')]
          ,'MT_pre__IN0': [('0', 'N', 'Destination')]
          ,'MT_pre__RoleType': [('0', 'N', 'Destination')]
          ,'MT_pre__FIXED0': [('0', 'N', 'Destination')]
          ,'MT_pre__OPTIONAL1': [('0', 'N', 'Destination')]
          ,'MT_pre__PLUGIN2': [('0', 'N', 'Destination')]
          ,'MT_pre__TransitionType': [('0', 'N', 'Destination')]
          ,'MT_pre__SIBLING0': [('0', 'N', 'Destination')]
          ,'MT_pre__IN1': [('0', 'N', 'Destination')]
          ,'MT_pre__OUT2': [('0', 'N', 'Destination')]
          ,'MT_pre__Def': []
          ,'MT_pre__Expr': []
          ,'MT_pre__Pattern': []
          ,'MT_pre__Proc': []
          ,'MT_pre__ProcDef': []
          ,'MT_pre__FuncDef': []
          ,'MT_pre__Name': []
          ,'MT_pre__PythonRef': []
          ,'MT_pre__Module': []
          ,'MT_pre__Null': []
          ,'MT_pre__Trigger_T': []
          ,'MT_pre__Listen': []
          ,'MT_pre__ConditionBranch': []
          ,'MT_pre__ListenBranch': []
          ,'MT_pre__Site': []
          ,'MT_pre__Model_T': []
          ,'MT_pre__MatchCase': []
          ,'MT_pre__Condition': []
          ,'MT_pre__New': []
          ,'MT_pre__Delay': []
          ,'MT_pre__Par': []
          ,'MT_pre__ParIndexed': []
          ,'MT_pre__Inst': []
          ,'MT_pre__LocalDef': []
          ,'MT_pre__Seq': []
          ,'MT_pre__ConditionSet': []
          ,'MT_pre__Match': []
          ,'MT_pre__Print': []
          ,'MT_pre__Attribute': [('0', 'N', 'Source')]
          ,'MT_pre__Expression': []
          ,'MT_pre__Equation': []
          ,'MT_pre__Operation': []
          ,'MT_pre__Add': []
          ,'MT_pre__Subtract': []
          ,'MT_pre__Concat': []
          ,'MT_pre__Constant': []
          ,'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__paired_with': []
          ,'MT_pre__match_contains': []
          ,'MT_pre__apply_contains': []
          ,'MT_pre__directLink_T': []
          ,'MT_pre__directLink_S': []
          ,'MT_pre__indirectLink_S': []
          ,'MT_pre__backward_link': []
          ,'MT_pre__trace_link': []
          ,'MT_pre__hasAttribute_S': []
          ,'MT_pre__hasAttribute_T': []
          ,'MT_pre__leftExpr': []
          ,'MT_pre__rightExpr': []
          ,'MT_pre__hasArgs': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': [] }
    self.CardinalityTable['MT_pre__hasAttribute_T']={
          'MT_pre__MatchModel': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__MetaModelElement_S': []
          ,'MT_pre__MetaModelElement_T': [('0', 'N', 'Destination')]
          ,'MT_pre__Element': []
          ,'MT_pre__NamedElement': []
          ,'MT_pre__Trigger_S': []
          ,'MT_pre__Action': []
          ,'MT_pre__PortRef': []
          ,'MT_pre__PortConnectorRef': []
          ,'MT_pre__StateMachineElement': []
          ,'MT_pre__Protocol': []
          ,'MT_pre__Signal': []
          ,'MT_pre__Port': []
          ,'MT_pre__Vertex': []
          ,'MT_pre__InitialPoint': []
          ,'MT_pre__EntryPoint': []
          ,'MT_pre__ExitPoint': []
          ,'MT_pre__Transition': []
          ,'MT_pre__StateMachine': []
          ,'MT_pre__State': []
          ,'MT_pre__Capsule': []
          ,'MT_pre__PackageContainer': []
          ,'MT_pre__Model_S': []
          ,'MT_pre__Package': []
          ,'MT_pre__CapsuleRole': []
          ,'MT_pre__PortConnector': []
          ,'MT_pre__Thread': []
          ,'MT_pre__PhysicalThread': []
          ,'MT_pre__LogicalThread': []
          ,'MT_pre__PortType': []
          ,'MT_pre__BASE0': []
          ,'MT_pre__CONJUGATE1': []
          ,'MT_pre__SignalType': []
          ,'MT_pre__OUT1': []
          ,'MT_pre__IN0': []
          ,'MT_pre__RoleType': []
          ,'MT_pre__FIXED0': []
          ,'MT_pre__OPTIONAL1': []
          ,'MT_pre__PLUGIN2': []
          ,'MT_pre__TransitionType': []
          ,'MT_pre__SIBLING0': []
          ,'MT_pre__IN1': []
          ,'MT_pre__OUT2': []
          ,'MT_pre__Def': [('0', 'N', 'Destination')]
          ,'MT_pre__Expr': [('0', 'N', 'Destination')]
          ,'MT_pre__Pattern': [('0', 'N', 'Destination')]
          ,'MT_pre__Proc': [('0', 'N', 'Destination')]
          ,'MT_pre__ProcDef': [('0', 'N', 'Destination')]
          ,'MT_pre__FuncDef': [('0', 'N', 'Destination')]
          ,'MT_pre__Name': [('0', 'N', 'Destination')]
          ,'MT_pre__PythonRef': [('0', 'N', 'Destination')]
          ,'MT_pre__Module': [('0', 'N', 'Destination')]
          ,'MT_pre__Null': [('0', 'N', 'Destination')]
          ,'MT_pre__Trigger_T': [('0', 'N', 'Destination')]
          ,'MT_pre__Listen': [('0', 'N', 'Destination')]
          ,'MT_pre__ConditionBranch': [('0', 'N', 'Destination')]
          ,'MT_pre__ListenBranch': [('0', 'N', 'Destination')]
          ,'MT_pre__Site': [('0', 'N', 'Destination')]
          ,'MT_pre__Model_T': [('0', 'N', 'Destination')]
          ,'MT_pre__MatchCase': [('0', 'N', 'Destination')]
          ,'MT_pre__Condition': [('0', 'N', 'Destination')]
          ,'MT_pre__New': [('0', 'N', 'Destination')]
          ,'MT_pre__Delay': [('0', 'N', 'Destination')]
          ,'MT_pre__Par': [('0', 'N', 'Destination')]
          ,'MT_pre__ParIndexed': [('0', 'N', 'Destination')]
          ,'MT_pre__Inst': [('0', 'N', 'Destination')]
          ,'MT_pre__LocalDef': [('0', 'N', 'Destination')]
          ,'MT_pre__Seq': [('0', 'N', 'Destination')]
          ,'MT_pre__ConditionSet': [('0', 'N', 'Destination')]
          ,'MT_pre__Match': [('0', 'N', 'Destination')]
          ,'MT_pre__Print': [('0', 'N', 'Destination')]
          ,'MT_pre__Attribute': [('0', 'N', 'Source')]
          ,'MT_pre__Expression': []
          ,'MT_pre__Equation': []
          ,'MT_pre__Operation': []
          ,'MT_pre__Add': []
          ,'MT_pre__Subtract': []
          ,'MT_pre__Concat': []
          ,'MT_pre__Constant': []
          ,'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__paired_with': []
          ,'MT_pre__match_contains': []
          ,'MT_pre__apply_contains': []
          ,'MT_pre__directLink_T': []
          ,'MT_pre__directLink_S': []
          ,'MT_pre__indirectLink_S': []
          ,'MT_pre__backward_link': []
          ,'MT_pre__trace_link': []
          ,'MT_pre__hasAttribute_S': []
          ,'MT_pre__hasAttribute_T': []
          ,'MT_pre__leftExpr': []
          ,'MT_pre__rightExpr': []
          ,'MT_pre__hasArgs': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': [] }
    self.CardinalityTable['MT_pre__leftExpr']={
          'MT_pre__MatchModel': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__MetaModelElement_S': []
          ,'MT_pre__MetaModelElement_T': []
          ,'MT_pre__Element': []
          ,'MT_pre__NamedElement': []
          ,'MT_pre__Trigger_S': []
          ,'MT_pre__Action': []
          ,'MT_pre__PortRef': []
          ,'MT_pre__PortConnectorRef': []
          ,'MT_pre__StateMachineElement': []
          ,'MT_pre__Protocol': []
          ,'MT_pre__Signal': []
          ,'MT_pre__Port': []
          ,'MT_pre__Vertex': []
          ,'MT_pre__InitialPoint': []
          ,'MT_pre__EntryPoint': []
          ,'MT_pre__ExitPoint': []
          ,'MT_pre__Transition': []
          ,'MT_pre__StateMachine': []
          ,'MT_pre__State': []
          ,'MT_pre__Capsule': []
          ,'MT_pre__PackageContainer': []
          ,'MT_pre__Model_S': []
          ,'MT_pre__Package': []
          ,'MT_pre__CapsuleRole': []
          ,'MT_pre__PortConnector': []
          ,'MT_pre__Thread': []
          ,'MT_pre__PhysicalThread': []
          ,'MT_pre__LogicalThread': []
          ,'MT_pre__PortType': []
          ,'MT_pre__BASE0': []
          ,'MT_pre__CONJUGATE1': []
          ,'MT_pre__SignalType': []
          ,'MT_pre__OUT1': []
          ,'MT_pre__IN0': []
          ,'MT_pre__RoleType': []
          ,'MT_pre__FIXED0': []
          ,'MT_pre__OPTIONAL1': []
          ,'MT_pre__PLUGIN2': []
          ,'MT_pre__TransitionType': []
          ,'MT_pre__SIBLING0': []
          ,'MT_pre__IN1': []
          ,'MT_pre__OUT2': []
          ,'MT_pre__Def': []
          ,'MT_pre__Expr': []
          ,'MT_pre__Pattern': []
          ,'MT_pre__Proc': []
          ,'MT_pre__ProcDef': []
          ,'MT_pre__FuncDef': []
          ,'MT_pre__Name': []
          ,'MT_pre__PythonRef': []
          ,'MT_pre__Module': []
          ,'MT_pre__Null': []
          ,'MT_pre__Trigger_T': []
          ,'MT_pre__Listen': []
          ,'MT_pre__ConditionBranch': []
          ,'MT_pre__ListenBranch': []
          ,'MT_pre__Site': []
          ,'MT_pre__Model_T': []
          ,'MT_pre__MatchCase': []
          ,'MT_pre__Condition': []
          ,'MT_pre__New': []
          ,'MT_pre__Delay': []
          ,'MT_pre__Par': []
          ,'MT_pre__ParIndexed': []
          ,'MT_pre__Inst': []
          ,'MT_pre__LocalDef': []
          ,'MT_pre__Seq': []
          ,'MT_pre__ConditionSet': []
          ,'MT_pre__Match': []
          ,'MT_pre__Print': []
          ,'MT_pre__Attribute': [('0', 'N', 'Source')]
          ,'MT_pre__Expression': [('0', 'N', 'Source')]
          ,'MT_pre__Equation': [('0', 'N', 'Destination')]
          ,'MT_pre__Operation': [('0', 'N', 'Source')]
          ,'MT_pre__Add': [('0', 'N', 'Source')]
          ,'MT_pre__Subtract': [('0', 'N', 'Source')]
          ,'MT_pre__Concat': [('0', 'N', 'Source')]
          ,'MT_pre__Constant': [('0', 'N', 'Source')]
          ,'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__paired_with': []
          ,'MT_pre__match_contains': []
          ,'MT_pre__apply_contains': []
          ,'MT_pre__directLink_T': []
          ,'MT_pre__directLink_S': []
          ,'MT_pre__indirectLink_S': []
          ,'MT_pre__backward_link': []
          ,'MT_pre__trace_link': []
          ,'MT_pre__hasAttribute_S': []
          ,'MT_pre__hasAttribute_T': []
          ,'MT_pre__leftExpr': []
          ,'MT_pre__rightExpr': []
          ,'MT_pre__hasArgs': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': [] }
    self.CardinalityTable['MT_pre__rightExpr']={
          'MT_pre__MatchModel': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__MetaModelElement_S': []
          ,'MT_pre__MetaModelElement_T': []
          ,'MT_pre__Element': []
          ,'MT_pre__NamedElement': []
          ,'MT_pre__Trigger_S': []
          ,'MT_pre__Action': []
          ,'MT_pre__PortRef': []
          ,'MT_pre__PortConnectorRef': []
          ,'MT_pre__StateMachineElement': []
          ,'MT_pre__Protocol': []
          ,'MT_pre__Signal': []
          ,'MT_pre__Port': []
          ,'MT_pre__Vertex': []
          ,'MT_pre__InitialPoint': []
          ,'MT_pre__EntryPoint': []
          ,'MT_pre__ExitPoint': []
          ,'MT_pre__Transition': []
          ,'MT_pre__StateMachine': []
          ,'MT_pre__State': []
          ,'MT_pre__Capsule': []
          ,'MT_pre__PackageContainer': []
          ,'MT_pre__Model_S': []
          ,'MT_pre__Package': []
          ,'MT_pre__CapsuleRole': []
          ,'MT_pre__PortConnector': []
          ,'MT_pre__Thread': []
          ,'MT_pre__PhysicalThread': []
          ,'MT_pre__LogicalThread': []
          ,'MT_pre__PortType': []
          ,'MT_pre__BASE0': []
          ,'MT_pre__CONJUGATE1': []
          ,'MT_pre__SignalType': []
          ,'MT_pre__OUT1': []
          ,'MT_pre__IN0': []
          ,'MT_pre__RoleType': []
          ,'MT_pre__FIXED0': []
          ,'MT_pre__OPTIONAL1': []
          ,'MT_pre__PLUGIN2': []
          ,'MT_pre__TransitionType': []
          ,'MT_pre__SIBLING0': []
          ,'MT_pre__IN1': []
          ,'MT_pre__OUT2': []
          ,'MT_pre__Def': []
          ,'MT_pre__Expr': []
          ,'MT_pre__Pattern': []
          ,'MT_pre__Proc': []
          ,'MT_pre__ProcDef': []
          ,'MT_pre__FuncDef': []
          ,'MT_pre__Name': []
          ,'MT_pre__PythonRef': []
          ,'MT_pre__Module': []
          ,'MT_pre__Null': []
          ,'MT_pre__Trigger_T': []
          ,'MT_pre__Listen': []
          ,'MT_pre__ConditionBranch': []
          ,'MT_pre__ListenBranch': []
          ,'MT_pre__Site': []
          ,'MT_pre__Model_T': []
          ,'MT_pre__MatchCase': []
          ,'MT_pre__Condition': []
          ,'MT_pre__New': []
          ,'MT_pre__Delay': []
          ,'MT_pre__Par': []
          ,'MT_pre__ParIndexed': []
          ,'MT_pre__Inst': []
          ,'MT_pre__LocalDef': []
          ,'MT_pre__Seq': []
          ,'MT_pre__ConditionSet': []
          ,'MT_pre__Match': []
          ,'MT_pre__Print': []
          ,'MT_pre__Attribute': [('0', 'N', 'Source')]
          ,'MT_pre__Expression': [('0', 'N', 'Source')]
          ,'MT_pre__Equation': [('0', 'N', 'Destination')]
          ,'MT_pre__Operation': [('0', 'N', 'Source')]
          ,'MT_pre__Add': [('0', 'N', 'Source')]
          ,'MT_pre__Subtract': [('0', 'N', 'Source')]
          ,'MT_pre__Concat': [('0', 'N', 'Source')]
          ,'MT_pre__Constant': [('0', 'N', 'Source')]
          ,'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__paired_with': []
          ,'MT_pre__match_contains': []
          ,'MT_pre__apply_contains': []
          ,'MT_pre__directLink_T': []
          ,'MT_pre__directLink_S': []
          ,'MT_pre__indirectLink_S': []
          ,'MT_pre__backward_link': []
          ,'MT_pre__trace_link': []
          ,'MT_pre__hasAttribute_S': []
          ,'MT_pre__hasAttribute_T': []
          ,'MT_pre__leftExpr': []
          ,'MT_pre__rightExpr': []
          ,'MT_pre__hasArgs': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': [] }
    self.CardinalityTable['MT_pre__hasArgs']={
          'MT_pre__MatchModel': []
          ,'MT_pre__ApplyModel': []
          ,'MT_pre__MetaModelElement_S': []
          ,'MT_pre__MetaModelElement_T': []
          ,'MT_pre__Element': []
          ,'MT_pre__NamedElement': []
          ,'MT_pre__Trigger_S': []
          ,'MT_pre__Action': []
          ,'MT_pre__PortRef': []
          ,'MT_pre__PortConnectorRef': []
          ,'MT_pre__StateMachineElement': []
          ,'MT_pre__Protocol': []
          ,'MT_pre__Signal': []
          ,'MT_pre__Port': []
          ,'MT_pre__Vertex': []
          ,'MT_pre__InitialPoint': []
          ,'MT_pre__EntryPoint': []
          ,'MT_pre__ExitPoint': []
          ,'MT_pre__Transition': []
          ,'MT_pre__StateMachine': []
          ,'MT_pre__State': []
          ,'MT_pre__Capsule': []
          ,'MT_pre__PackageContainer': []
          ,'MT_pre__Model_S': []
          ,'MT_pre__Package': []
          ,'MT_pre__CapsuleRole': []
          ,'MT_pre__PortConnector': []
          ,'MT_pre__Thread': []
          ,'MT_pre__PhysicalThread': []
          ,'MT_pre__LogicalThread': []
          ,'MT_pre__PortType': []
          ,'MT_pre__BASE0': []
          ,'MT_pre__CONJUGATE1': []
          ,'MT_pre__SignalType': []
          ,'MT_pre__OUT1': []
          ,'MT_pre__IN0': []
          ,'MT_pre__RoleType': []
          ,'MT_pre__FIXED0': []
          ,'MT_pre__OPTIONAL1': []
          ,'MT_pre__PLUGIN2': []
          ,'MT_pre__TransitionType': []
          ,'MT_pre__SIBLING0': []
          ,'MT_pre__IN1': []
          ,'MT_pre__OUT2': []
          ,'MT_pre__Def': []
          ,'MT_pre__Expr': []
          ,'MT_pre__Pattern': []
          ,'MT_pre__Proc': []
          ,'MT_pre__ProcDef': []
          ,'MT_pre__FuncDef': []
          ,'MT_pre__Name': []
          ,'MT_pre__PythonRef': []
          ,'MT_pre__Module': []
          ,'MT_pre__Null': []
          ,'MT_pre__Trigger_T': []
          ,'MT_pre__Listen': []
          ,'MT_pre__ConditionBranch': []
          ,'MT_pre__ListenBranch': []
          ,'MT_pre__Site': []
          ,'MT_pre__Model_T': []
          ,'MT_pre__MatchCase': []
          ,'MT_pre__Condition': []
          ,'MT_pre__New': []
          ,'MT_pre__Delay': []
          ,'MT_pre__Par': []
          ,'MT_pre__ParIndexed': []
          ,'MT_pre__Inst': []
          ,'MT_pre__LocalDef': []
          ,'MT_pre__Seq': []
          ,'MT_pre__ConditionSet': []
          ,'MT_pre__Match': []
          ,'MT_pre__Print': []
          ,'MT_pre__Attribute': [('0', 'N', 'Source')]
          ,'MT_pre__Expression': [('0', 'N', 'Source')]
          ,'MT_pre__Equation': []
          ,'MT_pre__Operation': [('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__Add': [('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__Subtract': [('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__Concat': [('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Destination')]
          ,'MT_pre__Constant': [('0', 'N', 'Source')]
          ,'MT_pre__GenericNode_UMLRT2Kiltera_MM': []
          ,'MT_pre__paired_with': []
          ,'MT_pre__match_contains': []
          ,'MT_pre__apply_contains': []
          ,'MT_pre__directLink_T': []
          ,'MT_pre__directLink_S': []
          ,'MT_pre__indirectLink_S': []
          ,'MT_pre__backward_link': []
          ,'MT_pre__trace_link': []
          ,'MT_pre__hasAttribute_S': []
          ,'MT_pre__hasAttribute_T': []
          ,'MT_pre__leftExpr': []
          ,'MT_pre__rightExpr': []
          ,'MT_pre__hasArgs': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': [] }
    self.CardinalityTable['MT_pre__GenericEdge_UMLRT2Kiltera_MM']={
          'MT_pre__MatchModel': [('0', 'N', 'Source')]
          ,'MT_pre__ApplyModel': [('0', 'N', 'Source')]
          ,'MT_pre__MetaModelElement_S': [('0', 'N', 'Source')]
          ,'MT_pre__MetaModelElement_T': [('0', 'N', 'Source')]
          ,'MT_pre__Element': [('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__NamedElement': [('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__Trigger_S': [('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__Action': [('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__PortRef': [('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__PortConnectorRef': [('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__StateMachineElement': [('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__Protocol': [('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__Signal': [('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__Port': [('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__Vertex': [('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__InitialPoint': [('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__EntryPoint': [('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__ExitPoint': [('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__Transition': [('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__StateMachine': [('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__State': [('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__Capsule': [('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__PackageContainer': [('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__Model_S': [('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__Package': [('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__CapsuleRole': [('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__PortConnector': [('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__Thread': [('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__PhysicalThread': [('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__LogicalThread': [('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__PortType': [('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__BASE0': [('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__CONJUGATE1': [('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__SignalType': [('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__OUT1': [('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__IN0': [('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__RoleType': [('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__FIXED0': [('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__OPTIONAL1': [('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__PLUGIN2': [('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__TransitionType': [('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__SIBLING0': [('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__IN1': [('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__OUT2': [('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__Def': [('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__Expr': [('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__Pattern': [('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__Proc': [('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__ProcDef': [('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__FuncDef': [('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__Name': [('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__PythonRef': [('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__Module': [('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__Null': [('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__Trigger_T': [('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__Listen': [('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__ConditionBranch': [('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__ListenBranch': [('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__Site': [('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__Model_T': [('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__MatchCase': [('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__Condition': [('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__New': [('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__Delay': [('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__Par': [('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__ParIndexed': [('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__Inst': [('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__LocalDef': [('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__Seq': [('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__ConditionSet': [('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__Match': [('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__Print': [('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__Attribute': [('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__Expression': [('0', 'N', 'Source')]
          ,'MT_pre__Equation': [('0', 'N', 'Source')]
          ,'MT_pre__Operation': [('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__Add': [('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__Subtract': [('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__Concat': [('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__Constant': [('0', 'N', 'Source'), ('0', 'N', 'Source')]
          ,'MT_pre__GenericNode_UMLRT2Kiltera_MM': [('0', 'N', 'Destination'), ('0', 'N', 'Source')]
          ,'MT_pre__paired_with': []
          ,'MT_pre__match_contains': []
          ,'MT_pre__apply_contains': []
          ,'MT_pre__directLink_T': []
          ,'MT_pre__directLink_S': []
          ,'MT_pre__indirectLink_S': []
          ,'MT_pre__backward_link': []
          ,'MT_pre__trace_link': []
          ,'MT_pre__hasAttribute_S': []
          ,'MT_pre__hasAttribute_T': []
          ,'MT_pre__leftExpr': []
          ,'MT_pre__rightExpr': []
          ,'MT_pre__hasArgs': []
          ,'MT_pre__GenericEdge_UMLRT2Kiltera_MM': [] }
    
    self.entitiesInMetaModel['MT_pre__UMLRT2Kiltera_MM']=["MT_pre__MatchModel", "MT_pre__ApplyModel", "MT_pre__MetaModelElement_S", "MT_pre__MetaModelElement_T", "MT_pre__Element", "MT_pre__NamedElement", "MT_pre__Trigger_S", "MT_pre__Action", "MT_pre__PortRef", "MT_pre__PortConnectorRef", "MT_pre__StateMachineElement", "MT_pre__Protocol", "MT_pre__Signal", "MT_pre__Port", "MT_pre__Vertex", "MT_pre__InitialPoint", "MT_pre__EntryPoint", "MT_pre__ExitPoint", "MT_pre__Transition", "MT_pre__StateMachine", "MT_pre__State", "MT_pre__Capsule", "MT_pre__PackageContainer", "MT_pre__Model_S", "MT_pre__Package", "MT_pre__CapsuleRole", "MT_pre__PortConnector", "MT_pre__Thread", "MT_pre__PhysicalThread", "MT_pre__LogicalThread", "MT_pre__PortType", "MT_pre__BASE0", "MT_pre__CONJUGATE1", "MT_pre__SignalType", "MT_pre__OUT1", "MT_pre__IN0", "MT_pre__RoleType", "MT_pre__FIXED0", "MT_pre__OPTIONAL1", "MT_pre__PLUGIN2", "MT_pre__TransitionType", "MT_pre__SIBLING0", "MT_pre__IN1", "MT_pre__OUT2", "MT_pre__Def", "MT_pre__Expr", "MT_pre__Pattern", "MT_pre__Proc", "MT_pre__ProcDef", "MT_pre__FuncDef", "MT_pre__Name", "MT_pre__PythonRef", "MT_pre__Module", "MT_pre__Null", "MT_pre__Trigger_T", "MT_pre__Listen", "MT_pre__ConditionBranch", "MT_pre__ListenBranch", "MT_pre__Site", "MT_pre__Model_T", "MT_pre__MatchCase", "MT_pre__Condition", "MT_pre__New", "MT_pre__Delay", "MT_pre__Par", "MT_pre__ParIndexed", "MT_pre__Inst", "MT_pre__LocalDef", "MT_pre__Seq", "MT_pre__ConditionSet", "MT_pre__Match", "MT_pre__Print", "MT_pre__Attribute", "MT_pre__Expression", "MT_pre__Equation", "MT_pre__Operation", "MT_pre__Add", "MT_pre__Subtract", "MT_pre__Concat", "MT_pre__Constant", "MT_pre__GenericNode_UMLRT2Kiltera_MM", "MT_pre__paired_with", "MT_pre__match_contains", "MT_pre__apply_contains", "MT_pre__directLink_T", "MT_pre__directLink_S", "MT_pre__indirectLink_S", "MT_pre__backward_link", "MT_pre__trace_link", "MT_pre__hasAttribute_S", "MT_pre__hasAttribute_T", "MT_pre__leftExpr", "MT_pre__rightExpr", "MT_pre__hasArgs", "MT_pre__GenericEdge_UMLRT2Kiltera_MM"]

    
def createNewMT_pre__MatchModel(self, wherex, wherey, screenCoordinates = 1):
   self.fromClass = None
   self.toClass = None
   # try the global constraints...
   res = self.ASGroot.preCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   new_semantic_obj = MT_pre__MatchModel(self)
   res = new_semantic_obj.preCondition ( ASGNode.CREATE )
   if res: return self.constraintViolation(res)
   new_semantic_obj.preAction ( ASGNode.CREATE ) 

   ne = len(self.ASGroot.listNodes["MT_pre__MatchModel"])
   if new_semantic_obj.keyword_:
      new_semantic_obj.keyword_.setValue(new_semantic_obj.keyword_.toString()+str(ne))
   if screenCoordinates:
      new_obj = graph_MT_pre__MatchModel(self.UMLmodel.canvasx(wherex), self.UMLmodel.canvasy(wherey), new_semantic_obj)
   else: # already in canvas coordinates
      new_obj = graph_MT_pre__MatchModel(wherex, wherey, new_semantic_obj)
   new_obj.DrawObject(self.UMLmodel, self.editGGLabel)
   self.UMLmodel.addtag_withtag("MT_pre__MatchModel", new_obj.tag)
   new_semantic_obj.graphObject_ = new_obj
   self.ASGroot.addNode(new_semantic_obj)
   res = self.ASGroot.postCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   res = new_semantic_obj.postCondition(ASGNode.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return
   new_semantic_obj.postAction(ASGNode.CREATE)

   self.mode=self.IDLEMODE
   if self.editGGLabel :
      self.statusbar.event(StatusBar.TRANSFORMATION, StatusBar.CREATE)
   else:
      self.statusbar.event(StatusBar.MODEL, StatusBar.CREATE)
   return new_semantic_obj
def createNewMT_pre__ApplyModel(self, wherex, wherey, screenCoordinates = 1):
   self.fromClass = None
   self.toClass = None
   # try the global constraints...
   res = self.ASGroot.preCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   new_semantic_obj = MT_pre__ApplyModel(self)
   res = new_semantic_obj.preCondition ( ASGNode.CREATE )
   if res: return self.constraintViolation(res)
   new_semantic_obj.preAction ( ASGNode.CREATE ) 

   ne = len(self.ASGroot.listNodes["MT_pre__ApplyModel"])
   if new_semantic_obj.keyword_:
      new_semantic_obj.keyword_.setValue(new_semantic_obj.keyword_.toString()+str(ne))
   if screenCoordinates:
      new_obj = graph_MT_pre__ApplyModel(self.UMLmodel.canvasx(wherex), self.UMLmodel.canvasy(wherey), new_semantic_obj)
   else: # already in canvas coordinates
      new_obj = graph_MT_pre__ApplyModel(wherex, wherey, new_semantic_obj)
   new_obj.DrawObject(self.UMLmodel, self.editGGLabel)
   self.UMLmodel.addtag_withtag("MT_pre__ApplyModel", new_obj.tag)
   new_semantic_obj.graphObject_ = new_obj
   self.ASGroot.addNode(new_semantic_obj)
   res = self.ASGroot.postCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   res = new_semantic_obj.postCondition(ASGNode.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return
   new_semantic_obj.postAction(ASGNode.CREATE)

   self.mode=self.IDLEMODE
   if self.editGGLabel :
      self.statusbar.event(StatusBar.TRANSFORMATION, StatusBar.CREATE)
   else:
      self.statusbar.event(StatusBar.MODEL, StatusBar.CREATE)
   return new_semantic_obj
def createNewMT_pre__MetaModelElement_S(self, wherex, wherey, screenCoordinates = 1):
   self.fromClass = None
   self.toClass = None
   # try the global constraints...
   res = self.ASGroot.preCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   new_semantic_obj = MT_pre__MetaModelElement_S(self)
   res = new_semantic_obj.preCondition ( ASGNode.CREATE )
   if res: return self.constraintViolation(res)
   new_semantic_obj.preAction ( ASGNode.CREATE ) 

   ne = len(self.ASGroot.listNodes["MT_pre__MetaModelElement_S"])
   if new_semantic_obj.keyword_:
      new_semantic_obj.keyword_.setValue(new_semantic_obj.keyword_.toString()+str(ne))
   if screenCoordinates:
      new_obj = graph_MT_pre__MetaModelElement_S(self.UMLmodel.canvasx(wherex), self.UMLmodel.canvasy(wherey), new_semantic_obj)
   else: # already in canvas coordinates
      new_obj = graph_MT_pre__MetaModelElement_S(wherex, wherey, new_semantic_obj)
   new_obj.DrawObject(self.UMLmodel, self.editGGLabel)
   self.UMLmodel.addtag_withtag("MT_pre__MetaModelElement_S", new_obj.tag)
   new_semantic_obj.graphObject_ = new_obj
   self.ASGroot.addNode(new_semantic_obj)
   res = self.ASGroot.postCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   res = new_semantic_obj.postCondition(ASGNode.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return
   new_semantic_obj.postAction(ASGNode.CREATE)

   self.mode=self.IDLEMODE
   if self.editGGLabel :
      self.statusbar.event(StatusBar.TRANSFORMATION, StatusBar.CREATE)
   else:
      self.statusbar.event(StatusBar.MODEL, StatusBar.CREATE)
   return new_semantic_obj
def createNewMT_pre__MetaModelElement_T(self, wherex, wherey, screenCoordinates = 1):
   self.fromClass = None
   self.toClass = None
   # try the global constraints...
   res = self.ASGroot.preCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   new_semantic_obj = MT_pre__MetaModelElement_T(self)
   res = new_semantic_obj.preCondition ( ASGNode.CREATE )
   if res: return self.constraintViolation(res)
   new_semantic_obj.preAction ( ASGNode.CREATE ) 

   ne = len(self.ASGroot.listNodes["MT_pre__MetaModelElement_T"])
   if new_semantic_obj.keyword_:
      new_semantic_obj.keyword_.setValue(new_semantic_obj.keyword_.toString()+str(ne))
   if screenCoordinates:
      new_obj = graph_MT_pre__MetaModelElement_T(self.UMLmodel.canvasx(wherex), self.UMLmodel.canvasy(wherey), new_semantic_obj)
   else: # already in canvas coordinates
      new_obj = graph_MT_pre__MetaModelElement_T(wherex, wherey, new_semantic_obj)
   new_obj.DrawObject(self.UMLmodel, self.editGGLabel)
   self.UMLmodel.addtag_withtag("MT_pre__MetaModelElement_T", new_obj.tag)
   new_semantic_obj.graphObject_ = new_obj
   self.ASGroot.addNode(new_semantic_obj)
   res = self.ASGroot.postCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   res = new_semantic_obj.postCondition(ASGNode.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return
   new_semantic_obj.postAction(ASGNode.CREATE)

   self.mode=self.IDLEMODE
   if self.editGGLabel :
      self.statusbar.event(StatusBar.TRANSFORMATION, StatusBar.CREATE)
   else:
      self.statusbar.event(StatusBar.MODEL, StatusBar.CREATE)
   return new_semantic_obj
def createNewMT_pre__Element(self, wherex, wherey, screenCoordinates = 1):
   self.fromClass = None
   self.toClass = None
   # try the global constraints...
   res = self.ASGroot.preCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   new_semantic_obj = MT_pre__Element(self)
   res = new_semantic_obj.preCondition ( ASGNode.CREATE )
   if res: return self.constraintViolation(res)
   new_semantic_obj.preAction ( ASGNode.CREATE ) 

   ne = len(self.ASGroot.listNodes["MT_pre__Element"])
   if new_semantic_obj.keyword_:
      new_semantic_obj.keyword_.setValue(new_semantic_obj.keyword_.toString()+str(ne))
   if screenCoordinates:
      new_obj = graph_MT_pre__Element(self.UMLmodel.canvasx(wherex), self.UMLmodel.canvasy(wherey), new_semantic_obj)
   else: # already in canvas coordinates
      new_obj = graph_MT_pre__Element(wherex, wherey, new_semantic_obj)
   new_obj.DrawObject(self.UMLmodel, self.editGGLabel)
   self.UMLmodel.addtag_withtag("MT_pre__Element", new_obj.tag)
   new_semantic_obj.graphObject_ = new_obj
   self.ASGroot.addNode(new_semantic_obj)
   res = self.ASGroot.postCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   res = new_semantic_obj.postCondition(ASGNode.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return
   new_semantic_obj.postAction(ASGNode.CREATE)

   self.mode=self.IDLEMODE
   if self.editGGLabel :
      self.statusbar.event(StatusBar.TRANSFORMATION, StatusBar.CREATE)
   else:
      self.statusbar.event(StatusBar.MODEL, StatusBar.CREATE)
   return new_semantic_obj
def createNewMT_pre__NamedElement(self, wherex, wherey, screenCoordinates = 1):
   self.fromClass = None
   self.toClass = None
   # try the global constraints...
   res = self.ASGroot.preCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   new_semantic_obj = MT_pre__NamedElement(self)
   res = new_semantic_obj.preCondition ( ASGNode.CREATE )
   if res: return self.constraintViolation(res)
   new_semantic_obj.preAction ( ASGNode.CREATE ) 

   ne = len(self.ASGroot.listNodes["MT_pre__NamedElement"])
   if new_semantic_obj.keyword_:
      new_semantic_obj.keyword_.setValue(new_semantic_obj.keyword_.toString()+str(ne))
   if screenCoordinates:
      new_obj = graph_MT_pre__NamedElement(self.UMLmodel.canvasx(wherex), self.UMLmodel.canvasy(wherey), new_semantic_obj)
   else: # already in canvas coordinates
      new_obj = graph_MT_pre__NamedElement(wherex, wherey, new_semantic_obj)
   new_obj.DrawObject(self.UMLmodel, self.editGGLabel)
   self.UMLmodel.addtag_withtag("MT_pre__NamedElement", new_obj.tag)
   new_semantic_obj.graphObject_ = new_obj
   self.ASGroot.addNode(new_semantic_obj)
   res = self.ASGroot.postCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   res = new_semantic_obj.postCondition(ASGNode.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return
   new_semantic_obj.postAction(ASGNode.CREATE)

   self.mode=self.IDLEMODE
   if self.editGGLabel :
      self.statusbar.event(StatusBar.TRANSFORMATION, StatusBar.CREATE)
   else:
      self.statusbar.event(StatusBar.MODEL, StatusBar.CREATE)
   return new_semantic_obj
def createNewMT_pre__Trigger_S(self, wherex, wherey, screenCoordinates = 1):
   self.fromClass = None
   self.toClass = None
   # try the global constraints...
   res = self.ASGroot.preCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   new_semantic_obj = MT_pre__Trigger_S(self)
   res = new_semantic_obj.preCondition ( ASGNode.CREATE )
   if res: return self.constraintViolation(res)
   new_semantic_obj.preAction ( ASGNode.CREATE ) 

   ne = len(self.ASGroot.listNodes["MT_pre__Trigger_S"])
   if new_semantic_obj.keyword_:
      new_semantic_obj.keyword_.setValue(new_semantic_obj.keyword_.toString()+str(ne))
   if screenCoordinates:
      new_obj = graph_MT_pre__Trigger_S(self.UMLmodel.canvasx(wherex), self.UMLmodel.canvasy(wherey), new_semantic_obj)
   else: # already in canvas coordinates
      new_obj = graph_MT_pre__Trigger_S(wherex, wherey, new_semantic_obj)
   new_obj.DrawObject(self.UMLmodel, self.editGGLabel)
   self.UMLmodel.addtag_withtag("MT_pre__Trigger_S", new_obj.tag)
   new_semantic_obj.graphObject_ = new_obj
   self.ASGroot.addNode(new_semantic_obj)
   res = self.ASGroot.postCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   res = new_semantic_obj.postCondition(ASGNode.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return
   new_semantic_obj.postAction(ASGNode.CREATE)

   self.mode=self.IDLEMODE
   if self.editGGLabel :
      self.statusbar.event(StatusBar.TRANSFORMATION, StatusBar.CREATE)
   else:
      self.statusbar.event(StatusBar.MODEL, StatusBar.CREATE)
   return new_semantic_obj
def createNewMT_pre__Action(self, wherex, wherey, screenCoordinates = 1):
   self.fromClass = None
   self.toClass = None
   # try the global constraints...
   res = self.ASGroot.preCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   new_semantic_obj = MT_pre__Action(self)
   res = new_semantic_obj.preCondition ( ASGNode.CREATE )
   if res: return self.constraintViolation(res)
   new_semantic_obj.preAction ( ASGNode.CREATE ) 

   ne = len(self.ASGroot.listNodes["MT_pre__Action"])
   if new_semantic_obj.keyword_:
      new_semantic_obj.keyword_.setValue(new_semantic_obj.keyword_.toString()+str(ne))
   if screenCoordinates:
      new_obj = graph_MT_pre__Action(self.UMLmodel.canvasx(wherex), self.UMLmodel.canvasy(wherey), new_semantic_obj)
   else: # already in canvas coordinates
      new_obj = graph_MT_pre__Action(wherex, wherey, new_semantic_obj)
   new_obj.DrawObject(self.UMLmodel, self.editGGLabel)
   self.UMLmodel.addtag_withtag("MT_pre__Action", new_obj.tag)
   new_semantic_obj.graphObject_ = new_obj
   self.ASGroot.addNode(new_semantic_obj)
   res = self.ASGroot.postCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   res = new_semantic_obj.postCondition(ASGNode.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return
   new_semantic_obj.postAction(ASGNode.CREATE)

   self.mode=self.IDLEMODE
   if self.editGGLabel :
      self.statusbar.event(StatusBar.TRANSFORMATION, StatusBar.CREATE)
   else:
      self.statusbar.event(StatusBar.MODEL, StatusBar.CREATE)
   return new_semantic_obj
def createNewMT_pre__PortRef(self, wherex, wherey, screenCoordinates = 1):
   self.fromClass = None
   self.toClass = None
   # try the global constraints...
   res = self.ASGroot.preCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   new_semantic_obj = MT_pre__PortRef(self)
   res = new_semantic_obj.preCondition ( ASGNode.CREATE )
   if res: return self.constraintViolation(res)
   new_semantic_obj.preAction ( ASGNode.CREATE ) 

   ne = len(self.ASGroot.listNodes["MT_pre__PortRef"])
   if new_semantic_obj.keyword_:
      new_semantic_obj.keyword_.setValue(new_semantic_obj.keyword_.toString()+str(ne))
   if screenCoordinates:
      new_obj = graph_MT_pre__PortRef(self.UMLmodel.canvasx(wherex), self.UMLmodel.canvasy(wherey), new_semantic_obj)
   else: # already in canvas coordinates
      new_obj = graph_MT_pre__PortRef(wherex, wherey, new_semantic_obj)
   new_obj.DrawObject(self.UMLmodel, self.editGGLabel)
   self.UMLmodel.addtag_withtag("MT_pre__PortRef", new_obj.tag)
   new_semantic_obj.graphObject_ = new_obj
   self.ASGroot.addNode(new_semantic_obj)
   res = self.ASGroot.postCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   res = new_semantic_obj.postCondition(ASGNode.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return
   new_semantic_obj.postAction(ASGNode.CREATE)

   self.mode=self.IDLEMODE
   if self.editGGLabel :
      self.statusbar.event(StatusBar.TRANSFORMATION, StatusBar.CREATE)
   else:
      self.statusbar.event(StatusBar.MODEL, StatusBar.CREATE)
   return new_semantic_obj
def createNewMT_pre__PortConnectorRef(self, wherex, wherey, screenCoordinates = 1):
   self.fromClass = None
   self.toClass = None
   # try the global constraints...
   res = self.ASGroot.preCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   new_semantic_obj = MT_pre__PortConnectorRef(self)
   res = new_semantic_obj.preCondition ( ASGNode.CREATE )
   if res: return self.constraintViolation(res)
   new_semantic_obj.preAction ( ASGNode.CREATE ) 

   ne = len(self.ASGroot.listNodes["MT_pre__PortConnectorRef"])
   if new_semantic_obj.keyword_:
      new_semantic_obj.keyword_.setValue(new_semantic_obj.keyword_.toString()+str(ne))
   if screenCoordinates:
      new_obj = graph_MT_pre__PortConnectorRef(self.UMLmodel.canvasx(wherex), self.UMLmodel.canvasy(wherey), new_semantic_obj)
   else: # already in canvas coordinates
      new_obj = graph_MT_pre__PortConnectorRef(wherex, wherey, new_semantic_obj)
   new_obj.DrawObject(self.UMLmodel, self.editGGLabel)
   self.UMLmodel.addtag_withtag("MT_pre__PortConnectorRef", new_obj.tag)
   new_semantic_obj.graphObject_ = new_obj
   self.ASGroot.addNode(new_semantic_obj)
   res = self.ASGroot.postCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   res = new_semantic_obj.postCondition(ASGNode.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return
   new_semantic_obj.postAction(ASGNode.CREATE)

   self.mode=self.IDLEMODE
   if self.editGGLabel :
      self.statusbar.event(StatusBar.TRANSFORMATION, StatusBar.CREATE)
   else:
      self.statusbar.event(StatusBar.MODEL, StatusBar.CREATE)
   return new_semantic_obj
def createNewMT_pre__StateMachineElement(self, wherex, wherey, screenCoordinates = 1):
   self.fromClass = None
   self.toClass = None
   # try the global constraints...
   res = self.ASGroot.preCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   new_semantic_obj = MT_pre__StateMachineElement(self)
   res = new_semantic_obj.preCondition ( ASGNode.CREATE )
   if res: return self.constraintViolation(res)
   new_semantic_obj.preAction ( ASGNode.CREATE ) 

   ne = len(self.ASGroot.listNodes["MT_pre__StateMachineElement"])
   if new_semantic_obj.keyword_:
      new_semantic_obj.keyword_.setValue(new_semantic_obj.keyword_.toString()+str(ne))
   if screenCoordinates:
      new_obj = graph_MT_pre__StateMachineElement(self.UMLmodel.canvasx(wherex), self.UMLmodel.canvasy(wherey), new_semantic_obj)
   else: # already in canvas coordinates
      new_obj = graph_MT_pre__StateMachineElement(wherex, wherey, new_semantic_obj)
   new_obj.DrawObject(self.UMLmodel, self.editGGLabel)
   self.UMLmodel.addtag_withtag("MT_pre__StateMachineElement", new_obj.tag)
   new_semantic_obj.graphObject_ = new_obj
   self.ASGroot.addNode(new_semantic_obj)
   res = self.ASGroot.postCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   res = new_semantic_obj.postCondition(ASGNode.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return
   new_semantic_obj.postAction(ASGNode.CREATE)

   self.mode=self.IDLEMODE
   if self.editGGLabel :
      self.statusbar.event(StatusBar.TRANSFORMATION, StatusBar.CREATE)
   else:
      self.statusbar.event(StatusBar.MODEL, StatusBar.CREATE)
   return new_semantic_obj
def createNewMT_pre__Protocol(self, wherex, wherey, screenCoordinates = 1):
   self.fromClass = None
   self.toClass = None
   # try the global constraints...
   res = self.ASGroot.preCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   new_semantic_obj = MT_pre__Protocol(self)
   res = new_semantic_obj.preCondition ( ASGNode.CREATE )
   if res: return self.constraintViolation(res)
   new_semantic_obj.preAction ( ASGNode.CREATE ) 

   ne = len(self.ASGroot.listNodes["MT_pre__Protocol"])
   if new_semantic_obj.keyword_:
      new_semantic_obj.keyword_.setValue(new_semantic_obj.keyword_.toString()+str(ne))
   if screenCoordinates:
      new_obj = graph_MT_pre__Protocol(self.UMLmodel.canvasx(wherex), self.UMLmodel.canvasy(wherey), new_semantic_obj)
   else: # already in canvas coordinates
      new_obj = graph_MT_pre__Protocol(wherex, wherey, new_semantic_obj)
   new_obj.DrawObject(self.UMLmodel, self.editGGLabel)
   self.UMLmodel.addtag_withtag("MT_pre__Protocol", new_obj.tag)
   new_semantic_obj.graphObject_ = new_obj
   self.ASGroot.addNode(new_semantic_obj)
   res = self.ASGroot.postCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   res = new_semantic_obj.postCondition(ASGNode.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return
   new_semantic_obj.postAction(ASGNode.CREATE)

   self.mode=self.IDLEMODE
   if self.editGGLabel :
      self.statusbar.event(StatusBar.TRANSFORMATION, StatusBar.CREATE)
   else:
      self.statusbar.event(StatusBar.MODEL, StatusBar.CREATE)
   return new_semantic_obj
def createNewMT_pre__Signal(self, wherex, wherey, screenCoordinates = 1):
   self.fromClass = None
   self.toClass = None
   # try the global constraints...
   res = self.ASGroot.preCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   new_semantic_obj = MT_pre__Signal(self)
   res = new_semantic_obj.preCondition ( ASGNode.CREATE )
   if res: return self.constraintViolation(res)
   new_semantic_obj.preAction ( ASGNode.CREATE ) 

   ne = len(self.ASGroot.listNodes["MT_pre__Signal"])
   if new_semantic_obj.keyword_:
      new_semantic_obj.keyword_.setValue(new_semantic_obj.keyword_.toString()+str(ne))
   if screenCoordinates:
      new_obj = graph_MT_pre__Signal(self.UMLmodel.canvasx(wherex), self.UMLmodel.canvasy(wherey), new_semantic_obj)
   else: # already in canvas coordinates
      new_obj = graph_MT_pre__Signal(wherex, wherey, new_semantic_obj)
   new_obj.DrawObject(self.UMLmodel, self.editGGLabel)
   self.UMLmodel.addtag_withtag("MT_pre__Signal", new_obj.tag)
   new_semantic_obj.graphObject_ = new_obj
   self.ASGroot.addNode(new_semantic_obj)
   res = self.ASGroot.postCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   res = new_semantic_obj.postCondition(ASGNode.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return
   new_semantic_obj.postAction(ASGNode.CREATE)

   self.mode=self.IDLEMODE
   if self.editGGLabel :
      self.statusbar.event(StatusBar.TRANSFORMATION, StatusBar.CREATE)
   else:
      self.statusbar.event(StatusBar.MODEL, StatusBar.CREATE)
   return new_semantic_obj
def createNewMT_pre__Port(self, wherex, wherey, screenCoordinates = 1):
   self.fromClass = None
   self.toClass = None
   # try the global constraints...
   res = self.ASGroot.preCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   new_semantic_obj = MT_pre__Port(self)
   res = new_semantic_obj.preCondition ( ASGNode.CREATE )
   if res: return self.constraintViolation(res)
   new_semantic_obj.preAction ( ASGNode.CREATE ) 

   ne = len(self.ASGroot.listNodes["MT_pre__Port"])
   if new_semantic_obj.keyword_:
      new_semantic_obj.keyword_.setValue(new_semantic_obj.keyword_.toString()+str(ne))
   if screenCoordinates:
      new_obj = graph_MT_pre__Port(self.UMLmodel.canvasx(wherex), self.UMLmodel.canvasy(wherey), new_semantic_obj)
   else: # already in canvas coordinates
      new_obj = graph_MT_pre__Port(wherex, wherey, new_semantic_obj)
   new_obj.DrawObject(self.UMLmodel, self.editGGLabel)
   self.UMLmodel.addtag_withtag("MT_pre__Port", new_obj.tag)
   new_semantic_obj.graphObject_ = new_obj
   self.ASGroot.addNode(new_semantic_obj)
   res = self.ASGroot.postCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   res = new_semantic_obj.postCondition(ASGNode.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return
   new_semantic_obj.postAction(ASGNode.CREATE)

   self.mode=self.IDLEMODE
   if self.editGGLabel :
      self.statusbar.event(StatusBar.TRANSFORMATION, StatusBar.CREATE)
   else:
      self.statusbar.event(StatusBar.MODEL, StatusBar.CREATE)
   return new_semantic_obj
def createNewMT_pre__Vertex(self, wherex, wherey, screenCoordinates = 1):
   self.fromClass = None
   self.toClass = None
   # try the global constraints...
   res = self.ASGroot.preCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   new_semantic_obj = MT_pre__Vertex(self)
   res = new_semantic_obj.preCondition ( ASGNode.CREATE )
   if res: return self.constraintViolation(res)
   new_semantic_obj.preAction ( ASGNode.CREATE ) 

   ne = len(self.ASGroot.listNodes["MT_pre__Vertex"])
   if new_semantic_obj.keyword_:
      new_semantic_obj.keyword_.setValue(new_semantic_obj.keyword_.toString()+str(ne))
   if screenCoordinates:
      new_obj = graph_MT_pre__Vertex(self.UMLmodel.canvasx(wherex), self.UMLmodel.canvasy(wherey), new_semantic_obj)
   else: # already in canvas coordinates
      new_obj = graph_MT_pre__Vertex(wherex, wherey, new_semantic_obj)
   new_obj.DrawObject(self.UMLmodel, self.editGGLabel)
   self.UMLmodel.addtag_withtag("MT_pre__Vertex", new_obj.tag)
   new_semantic_obj.graphObject_ = new_obj
   self.ASGroot.addNode(new_semantic_obj)
   res = self.ASGroot.postCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   res = new_semantic_obj.postCondition(ASGNode.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return
   new_semantic_obj.postAction(ASGNode.CREATE)

   self.mode=self.IDLEMODE
   if self.editGGLabel :
      self.statusbar.event(StatusBar.TRANSFORMATION, StatusBar.CREATE)
   else:
      self.statusbar.event(StatusBar.MODEL, StatusBar.CREATE)
   return new_semantic_obj
def createNewMT_pre__InitialPoint(self, wherex, wherey, screenCoordinates = 1):
   self.fromClass = None
   self.toClass = None
   # try the global constraints...
   res = self.ASGroot.preCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   new_semantic_obj = MT_pre__InitialPoint(self)
   res = new_semantic_obj.preCondition ( ASGNode.CREATE )
   if res: return self.constraintViolation(res)
   new_semantic_obj.preAction ( ASGNode.CREATE ) 

   ne = len(self.ASGroot.listNodes["MT_pre__InitialPoint"])
   if new_semantic_obj.keyword_:
      new_semantic_obj.keyword_.setValue(new_semantic_obj.keyword_.toString()+str(ne))
   if screenCoordinates:
      new_obj = graph_MT_pre__InitialPoint(self.UMLmodel.canvasx(wherex), self.UMLmodel.canvasy(wherey), new_semantic_obj)
   else: # already in canvas coordinates
      new_obj = graph_MT_pre__InitialPoint(wherex, wherey, new_semantic_obj)
   new_obj.DrawObject(self.UMLmodel, self.editGGLabel)
   self.UMLmodel.addtag_withtag("MT_pre__InitialPoint", new_obj.tag)
   new_semantic_obj.graphObject_ = new_obj
   self.ASGroot.addNode(new_semantic_obj)
   res = self.ASGroot.postCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   res = new_semantic_obj.postCondition(ASGNode.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return
   new_semantic_obj.postAction(ASGNode.CREATE)

   self.mode=self.IDLEMODE
   if self.editGGLabel :
      self.statusbar.event(StatusBar.TRANSFORMATION, StatusBar.CREATE)
   else:
      self.statusbar.event(StatusBar.MODEL, StatusBar.CREATE)
   return new_semantic_obj
def createNewMT_pre__EntryPoint(self, wherex, wherey, screenCoordinates = 1):
   self.fromClass = None
   self.toClass = None
   # try the global constraints...
   res = self.ASGroot.preCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   new_semantic_obj = MT_pre__EntryPoint(self)
   res = new_semantic_obj.preCondition ( ASGNode.CREATE )
   if res: return self.constraintViolation(res)
   new_semantic_obj.preAction ( ASGNode.CREATE ) 

   ne = len(self.ASGroot.listNodes["MT_pre__EntryPoint"])
   if new_semantic_obj.keyword_:
      new_semantic_obj.keyword_.setValue(new_semantic_obj.keyword_.toString()+str(ne))
   if screenCoordinates:
      new_obj = graph_MT_pre__EntryPoint(self.UMLmodel.canvasx(wherex), self.UMLmodel.canvasy(wherey), new_semantic_obj)
   else: # already in canvas coordinates
      new_obj = graph_MT_pre__EntryPoint(wherex, wherey, new_semantic_obj)
   new_obj.DrawObject(self.UMLmodel, self.editGGLabel)
   self.UMLmodel.addtag_withtag("MT_pre__EntryPoint", new_obj.tag)
   new_semantic_obj.graphObject_ = new_obj
   self.ASGroot.addNode(new_semantic_obj)
   res = self.ASGroot.postCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   res = new_semantic_obj.postCondition(ASGNode.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return
   new_semantic_obj.postAction(ASGNode.CREATE)

   self.mode=self.IDLEMODE
   if self.editGGLabel :
      self.statusbar.event(StatusBar.TRANSFORMATION, StatusBar.CREATE)
   else:
      self.statusbar.event(StatusBar.MODEL, StatusBar.CREATE)
   return new_semantic_obj
def createNewMT_pre__ExitPoint(self, wherex, wherey, screenCoordinates = 1):
   self.fromClass = None
   self.toClass = None
   # try the global constraints...
   res = self.ASGroot.preCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   new_semantic_obj = MT_pre__ExitPoint(self)
   res = new_semantic_obj.preCondition ( ASGNode.CREATE )
   if res: return self.constraintViolation(res)
   new_semantic_obj.preAction ( ASGNode.CREATE ) 

   ne = len(self.ASGroot.listNodes["MT_pre__ExitPoint"])
   if new_semantic_obj.keyword_:
      new_semantic_obj.keyword_.setValue(new_semantic_obj.keyword_.toString()+str(ne))
   if screenCoordinates:
      new_obj = graph_MT_pre__ExitPoint(self.UMLmodel.canvasx(wherex), self.UMLmodel.canvasy(wherey), new_semantic_obj)
   else: # already in canvas coordinates
      new_obj = graph_MT_pre__ExitPoint(wherex, wherey, new_semantic_obj)
   new_obj.DrawObject(self.UMLmodel, self.editGGLabel)
   self.UMLmodel.addtag_withtag("MT_pre__ExitPoint", new_obj.tag)
   new_semantic_obj.graphObject_ = new_obj
   self.ASGroot.addNode(new_semantic_obj)
   res = self.ASGroot.postCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   res = new_semantic_obj.postCondition(ASGNode.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return
   new_semantic_obj.postAction(ASGNode.CREATE)

   self.mode=self.IDLEMODE
   if self.editGGLabel :
      self.statusbar.event(StatusBar.TRANSFORMATION, StatusBar.CREATE)
   else:
      self.statusbar.event(StatusBar.MODEL, StatusBar.CREATE)
   return new_semantic_obj
def createNewMT_pre__Transition(self, wherex, wherey, screenCoordinates = 1):
   self.fromClass = None
   self.toClass = None
   # try the global constraints...
   res = self.ASGroot.preCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   new_semantic_obj = MT_pre__Transition(self)
   res = new_semantic_obj.preCondition ( ASGNode.CREATE )
   if res: return self.constraintViolation(res)
   new_semantic_obj.preAction ( ASGNode.CREATE ) 

   ne = len(self.ASGroot.listNodes["MT_pre__Transition"])
   if new_semantic_obj.keyword_:
      new_semantic_obj.keyword_.setValue(new_semantic_obj.keyword_.toString()+str(ne))
   if screenCoordinates:
      new_obj = graph_MT_pre__Transition(self.UMLmodel.canvasx(wherex), self.UMLmodel.canvasy(wherey), new_semantic_obj)
   else: # already in canvas coordinates
      new_obj = graph_MT_pre__Transition(wherex, wherey, new_semantic_obj)
   new_obj.DrawObject(self.UMLmodel, self.editGGLabel)
   self.UMLmodel.addtag_withtag("MT_pre__Transition", new_obj.tag)
   new_semantic_obj.graphObject_ = new_obj
   self.ASGroot.addNode(new_semantic_obj)
   res = self.ASGroot.postCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   res = new_semantic_obj.postCondition(ASGNode.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return
   new_semantic_obj.postAction(ASGNode.CREATE)

   self.mode=self.IDLEMODE
   if self.editGGLabel :
      self.statusbar.event(StatusBar.TRANSFORMATION, StatusBar.CREATE)
   else:
      self.statusbar.event(StatusBar.MODEL, StatusBar.CREATE)
   return new_semantic_obj
def createNewMT_pre__StateMachine(self, wherex, wherey, screenCoordinates = 1):
   self.fromClass = None
   self.toClass = None
   # try the global constraints...
   res = self.ASGroot.preCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   new_semantic_obj = MT_pre__StateMachine(self)
   res = new_semantic_obj.preCondition ( ASGNode.CREATE )
   if res: return self.constraintViolation(res)
   new_semantic_obj.preAction ( ASGNode.CREATE ) 

   ne = len(self.ASGroot.listNodes["MT_pre__StateMachine"])
   if new_semantic_obj.keyword_:
      new_semantic_obj.keyword_.setValue(new_semantic_obj.keyword_.toString()+str(ne))
   if screenCoordinates:
      new_obj = graph_MT_pre__StateMachine(self.UMLmodel.canvasx(wherex), self.UMLmodel.canvasy(wherey), new_semantic_obj)
   else: # already in canvas coordinates
      new_obj = graph_MT_pre__StateMachine(wherex, wherey, new_semantic_obj)
   new_obj.DrawObject(self.UMLmodel, self.editGGLabel)
   self.UMLmodel.addtag_withtag("MT_pre__StateMachine", new_obj.tag)
   new_semantic_obj.graphObject_ = new_obj
   self.ASGroot.addNode(new_semantic_obj)
   res = self.ASGroot.postCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   res = new_semantic_obj.postCondition(ASGNode.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return
   new_semantic_obj.postAction(ASGNode.CREATE)

   self.mode=self.IDLEMODE
   if self.editGGLabel :
      self.statusbar.event(StatusBar.TRANSFORMATION, StatusBar.CREATE)
   else:
      self.statusbar.event(StatusBar.MODEL, StatusBar.CREATE)
   return new_semantic_obj
def createNewMT_pre__State(self, wherex, wherey, screenCoordinates = 1):
   self.fromClass = None
   self.toClass = None
   # try the global constraints...
   res = self.ASGroot.preCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   new_semantic_obj = MT_pre__State(self)
   res = new_semantic_obj.preCondition ( ASGNode.CREATE )
   if res: return self.constraintViolation(res)
   new_semantic_obj.preAction ( ASGNode.CREATE ) 

   ne = len(self.ASGroot.listNodes["MT_pre__State"])
   if new_semantic_obj.keyword_:
      new_semantic_obj.keyword_.setValue(new_semantic_obj.keyword_.toString()+str(ne))
   if screenCoordinates:
      new_obj = graph_MT_pre__State(self.UMLmodel.canvasx(wherex), self.UMLmodel.canvasy(wherey), new_semantic_obj)
   else: # already in canvas coordinates
      new_obj = graph_MT_pre__State(wherex, wherey, new_semantic_obj)
   new_obj.DrawObject(self.UMLmodel, self.editGGLabel)
   self.UMLmodel.addtag_withtag("MT_pre__State", new_obj.tag)
   new_semantic_obj.graphObject_ = new_obj
   self.ASGroot.addNode(new_semantic_obj)
   res = self.ASGroot.postCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   res = new_semantic_obj.postCondition(ASGNode.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return
   new_semantic_obj.postAction(ASGNode.CREATE)

   self.mode=self.IDLEMODE
   if self.editGGLabel :
      self.statusbar.event(StatusBar.TRANSFORMATION, StatusBar.CREATE)
   else:
      self.statusbar.event(StatusBar.MODEL, StatusBar.CREATE)
   return new_semantic_obj
def createNewMT_pre__Capsule(self, wherex, wherey, screenCoordinates = 1):
   self.fromClass = None
   self.toClass = None
   # try the global constraints...
   res = self.ASGroot.preCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   new_semantic_obj = MT_pre__Capsule(self)
   res = new_semantic_obj.preCondition ( ASGNode.CREATE )
   if res: return self.constraintViolation(res)
   new_semantic_obj.preAction ( ASGNode.CREATE ) 

   ne = len(self.ASGroot.listNodes["MT_pre__Capsule"])
   if new_semantic_obj.keyword_:
      new_semantic_obj.keyword_.setValue(new_semantic_obj.keyword_.toString()+str(ne))
   if screenCoordinates:
      new_obj = graph_MT_pre__Capsule(self.UMLmodel.canvasx(wherex), self.UMLmodel.canvasy(wherey), new_semantic_obj)
   else: # already in canvas coordinates
      new_obj = graph_MT_pre__Capsule(wherex, wherey, new_semantic_obj)
   new_obj.DrawObject(self.UMLmodel, self.editGGLabel)
   self.UMLmodel.addtag_withtag("MT_pre__Capsule", new_obj.tag)
   new_semantic_obj.graphObject_ = new_obj
   self.ASGroot.addNode(new_semantic_obj)
   res = self.ASGroot.postCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   res = new_semantic_obj.postCondition(ASGNode.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return
   new_semantic_obj.postAction(ASGNode.CREATE)

   self.mode=self.IDLEMODE
   if self.editGGLabel :
      self.statusbar.event(StatusBar.TRANSFORMATION, StatusBar.CREATE)
   else:
      self.statusbar.event(StatusBar.MODEL, StatusBar.CREATE)
   return new_semantic_obj
def createNewMT_pre__PackageContainer(self, wherex, wherey, screenCoordinates = 1):
   self.fromClass = None
   self.toClass = None
   # try the global constraints...
   res = self.ASGroot.preCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   new_semantic_obj = MT_pre__PackageContainer(self)
   res = new_semantic_obj.preCondition ( ASGNode.CREATE )
   if res: return self.constraintViolation(res)
   new_semantic_obj.preAction ( ASGNode.CREATE ) 

   ne = len(self.ASGroot.listNodes["MT_pre__PackageContainer"])
   if new_semantic_obj.keyword_:
      new_semantic_obj.keyword_.setValue(new_semantic_obj.keyword_.toString()+str(ne))
   if screenCoordinates:
      new_obj = graph_MT_pre__PackageContainer(self.UMLmodel.canvasx(wherex), self.UMLmodel.canvasy(wherey), new_semantic_obj)
   else: # already in canvas coordinates
      new_obj = graph_MT_pre__PackageContainer(wherex, wherey, new_semantic_obj)
   new_obj.DrawObject(self.UMLmodel, self.editGGLabel)
   self.UMLmodel.addtag_withtag("MT_pre__PackageContainer", new_obj.tag)
   new_semantic_obj.graphObject_ = new_obj
   self.ASGroot.addNode(new_semantic_obj)
   res = self.ASGroot.postCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   res = new_semantic_obj.postCondition(ASGNode.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return
   new_semantic_obj.postAction(ASGNode.CREATE)

   self.mode=self.IDLEMODE
   if self.editGGLabel :
      self.statusbar.event(StatusBar.TRANSFORMATION, StatusBar.CREATE)
   else:
      self.statusbar.event(StatusBar.MODEL, StatusBar.CREATE)
   return new_semantic_obj
def createNewMT_pre__Model_S(self, wherex, wherey, screenCoordinates = 1):
   self.fromClass = None
   self.toClass = None
   # try the global constraints...
   res = self.ASGroot.preCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   new_semantic_obj = MT_pre__Model_S(self)
   res = new_semantic_obj.preCondition ( ASGNode.CREATE )
   if res: return self.constraintViolation(res)
   new_semantic_obj.preAction ( ASGNode.CREATE ) 

   ne = len(self.ASGroot.listNodes["MT_pre__Model_S"])
   if new_semantic_obj.keyword_:
      new_semantic_obj.keyword_.setValue(new_semantic_obj.keyword_.toString()+str(ne))
   if screenCoordinates:
      new_obj = graph_MT_pre__Model_S(self.UMLmodel.canvasx(wherex), self.UMLmodel.canvasy(wherey), new_semantic_obj)
   else: # already in canvas coordinates
      new_obj = graph_MT_pre__Model_S(wherex, wherey, new_semantic_obj)
   new_obj.DrawObject(self.UMLmodel, self.editGGLabel)
   self.UMLmodel.addtag_withtag("MT_pre__Model_S", new_obj.tag)
   new_semantic_obj.graphObject_ = new_obj
   self.ASGroot.addNode(new_semantic_obj)
   res = self.ASGroot.postCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   res = new_semantic_obj.postCondition(ASGNode.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return
   new_semantic_obj.postAction(ASGNode.CREATE)

   self.mode=self.IDLEMODE
   if self.editGGLabel :
      self.statusbar.event(StatusBar.TRANSFORMATION, StatusBar.CREATE)
   else:
      self.statusbar.event(StatusBar.MODEL, StatusBar.CREATE)
   return new_semantic_obj
def createNewMT_pre__Package(self, wherex, wherey, screenCoordinates = 1):
   self.fromClass = None
   self.toClass = None
   # try the global constraints...
   res = self.ASGroot.preCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   new_semantic_obj = MT_pre__Package(self)
   res = new_semantic_obj.preCondition ( ASGNode.CREATE )
   if res: return self.constraintViolation(res)
   new_semantic_obj.preAction ( ASGNode.CREATE ) 

   ne = len(self.ASGroot.listNodes["MT_pre__Package"])
   if new_semantic_obj.keyword_:
      new_semantic_obj.keyword_.setValue(new_semantic_obj.keyword_.toString()+str(ne))
   if screenCoordinates:
      new_obj = graph_MT_pre__Package(self.UMLmodel.canvasx(wherex), self.UMLmodel.canvasy(wherey), new_semantic_obj)
   else: # already in canvas coordinates
      new_obj = graph_MT_pre__Package(wherex, wherey, new_semantic_obj)
   new_obj.DrawObject(self.UMLmodel, self.editGGLabel)
   self.UMLmodel.addtag_withtag("MT_pre__Package", new_obj.tag)
   new_semantic_obj.graphObject_ = new_obj
   self.ASGroot.addNode(new_semantic_obj)
   res = self.ASGroot.postCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   res = new_semantic_obj.postCondition(ASGNode.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return
   new_semantic_obj.postAction(ASGNode.CREATE)

   self.mode=self.IDLEMODE
   if self.editGGLabel :
      self.statusbar.event(StatusBar.TRANSFORMATION, StatusBar.CREATE)
   else:
      self.statusbar.event(StatusBar.MODEL, StatusBar.CREATE)
   return new_semantic_obj
def createNewMT_pre__CapsuleRole(self, wherex, wherey, screenCoordinates = 1):
   self.fromClass = None
   self.toClass = None
   # try the global constraints...
   res = self.ASGroot.preCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   new_semantic_obj = MT_pre__CapsuleRole(self)
   res = new_semantic_obj.preCondition ( ASGNode.CREATE )
   if res: return self.constraintViolation(res)
   new_semantic_obj.preAction ( ASGNode.CREATE ) 

   ne = len(self.ASGroot.listNodes["MT_pre__CapsuleRole"])
   if new_semantic_obj.keyword_:
      new_semantic_obj.keyword_.setValue(new_semantic_obj.keyword_.toString()+str(ne))
   if screenCoordinates:
      new_obj = graph_MT_pre__CapsuleRole(self.UMLmodel.canvasx(wherex), self.UMLmodel.canvasy(wherey), new_semantic_obj)
   else: # already in canvas coordinates
      new_obj = graph_MT_pre__CapsuleRole(wherex, wherey, new_semantic_obj)
   new_obj.DrawObject(self.UMLmodel, self.editGGLabel)
   self.UMLmodel.addtag_withtag("MT_pre__CapsuleRole", new_obj.tag)
   new_semantic_obj.graphObject_ = new_obj
   self.ASGroot.addNode(new_semantic_obj)
   res = self.ASGroot.postCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   res = new_semantic_obj.postCondition(ASGNode.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return
   new_semantic_obj.postAction(ASGNode.CREATE)

   self.mode=self.IDLEMODE
   if self.editGGLabel :
      self.statusbar.event(StatusBar.TRANSFORMATION, StatusBar.CREATE)
   else:
      self.statusbar.event(StatusBar.MODEL, StatusBar.CREATE)
   return new_semantic_obj
def createNewMT_pre__PortConnector(self, wherex, wherey, screenCoordinates = 1):
   self.fromClass = None
   self.toClass = None
   # try the global constraints...
   res = self.ASGroot.preCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   new_semantic_obj = MT_pre__PortConnector(self)
   res = new_semantic_obj.preCondition ( ASGNode.CREATE )
   if res: return self.constraintViolation(res)
   new_semantic_obj.preAction ( ASGNode.CREATE ) 

   ne = len(self.ASGroot.listNodes["MT_pre__PortConnector"])
   if new_semantic_obj.keyword_:
      new_semantic_obj.keyword_.setValue(new_semantic_obj.keyword_.toString()+str(ne))
   if screenCoordinates:
      new_obj = graph_MT_pre__PortConnector(self.UMLmodel.canvasx(wherex), self.UMLmodel.canvasy(wherey), new_semantic_obj)
   else: # already in canvas coordinates
      new_obj = graph_MT_pre__PortConnector(wherex, wherey, new_semantic_obj)
   new_obj.DrawObject(self.UMLmodel, self.editGGLabel)
   self.UMLmodel.addtag_withtag("MT_pre__PortConnector", new_obj.tag)
   new_semantic_obj.graphObject_ = new_obj
   self.ASGroot.addNode(new_semantic_obj)
   res = self.ASGroot.postCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   res = new_semantic_obj.postCondition(ASGNode.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return
   new_semantic_obj.postAction(ASGNode.CREATE)

   self.mode=self.IDLEMODE
   if self.editGGLabel :
      self.statusbar.event(StatusBar.TRANSFORMATION, StatusBar.CREATE)
   else:
      self.statusbar.event(StatusBar.MODEL, StatusBar.CREATE)
   return new_semantic_obj
def createNewMT_pre__Thread(self, wherex, wherey, screenCoordinates = 1):
   self.fromClass = None
   self.toClass = None
   # try the global constraints...
   res = self.ASGroot.preCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   new_semantic_obj = MT_pre__Thread(self)
   res = new_semantic_obj.preCondition ( ASGNode.CREATE )
   if res: return self.constraintViolation(res)
   new_semantic_obj.preAction ( ASGNode.CREATE ) 

   ne = len(self.ASGroot.listNodes["MT_pre__Thread"])
   if new_semantic_obj.keyword_:
      new_semantic_obj.keyword_.setValue(new_semantic_obj.keyword_.toString()+str(ne))
   if screenCoordinates:
      new_obj = graph_MT_pre__Thread(self.UMLmodel.canvasx(wherex), self.UMLmodel.canvasy(wherey), new_semantic_obj)
   else: # already in canvas coordinates
      new_obj = graph_MT_pre__Thread(wherex, wherey, new_semantic_obj)
   new_obj.DrawObject(self.UMLmodel, self.editGGLabel)
   self.UMLmodel.addtag_withtag("MT_pre__Thread", new_obj.tag)
   new_semantic_obj.graphObject_ = new_obj
   self.ASGroot.addNode(new_semantic_obj)
   res = self.ASGroot.postCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   res = new_semantic_obj.postCondition(ASGNode.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return
   new_semantic_obj.postAction(ASGNode.CREATE)

   self.mode=self.IDLEMODE
   if self.editGGLabel :
      self.statusbar.event(StatusBar.TRANSFORMATION, StatusBar.CREATE)
   else:
      self.statusbar.event(StatusBar.MODEL, StatusBar.CREATE)
   return new_semantic_obj
def createNewMT_pre__PhysicalThread(self, wherex, wherey, screenCoordinates = 1):
   self.fromClass = None
   self.toClass = None
   # try the global constraints...
   res = self.ASGroot.preCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   new_semantic_obj = MT_pre__PhysicalThread(self)
   res = new_semantic_obj.preCondition ( ASGNode.CREATE )
   if res: return self.constraintViolation(res)
   new_semantic_obj.preAction ( ASGNode.CREATE ) 

   ne = len(self.ASGroot.listNodes["MT_pre__PhysicalThread"])
   if new_semantic_obj.keyword_:
      new_semantic_obj.keyword_.setValue(new_semantic_obj.keyword_.toString()+str(ne))
   if screenCoordinates:
      new_obj = graph_MT_pre__PhysicalThread(self.UMLmodel.canvasx(wherex), self.UMLmodel.canvasy(wherey), new_semantic_obj)
   else: # already in canvas coordinates
      new_obj = graph_MT_pre__PhysicalThread(wherex, wherey, new_semantic_obj)
   new_obj.DrawObject(self.UMLmodel, self.editGGLabel)
   self.UMLmodel.addtag_withtag("MT_pre__PhysicalThread", new_obj.tag)
   new_semantic_obj.graphObject_ = new_obj
   self.ASGroot.addNode(new_semantic_obj)
   res = self.ASGroot.postCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   res = new_semantic_obj.postCondition(ASGNode.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return
   new_semantic_obj.postAction(ASGNode.CREATE)

   self.mode=self.IDLEMODE
   if self.editGGLabel :
      self.statusbar.event(StatusBar.TRANSFORMATION, StatusBar.CREATE)
   else:
      self.statusbar.event(StatusBar.MODEL, StatusBar.CREATE)
   return new_semantic_obj
def createNewMT_pre__LogicalThread(self, wherex, wherey, screenCoordinates = 1):
   self.fromClass = None
   self.toClass = None
   # try the global constraints...
   res = self.ASGroot.preCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   new_semantic_obj = MT_pre__LogicalThread(self)
   res = new_semantic_obj.preCondition ( ASGNode.CREATE )
   if res: return self.constraintViolation(res)
   new_semantic_obj.preAction ( ASGNode.CREATE ) 

   ne = len(self.ASGroot.listNodes["MT_pre__LogicalThread"])
   if new_semantic_obj.keyword_:
      new_semantic_obj.keyword_.setValue(new_semantic_obj.keyword_.toString()+str(ne))
   if screenCoordinates:
      new_obj = graph_MT_pre__LogicalThread(self.UMLmodel.canvasx(wherex), self.UMLmodel.canvasy(wherey), new_semantic_obj)
   else: # already in canvas coordinates
      new_obj = graph_MT_pre__LogicalThread(wherex, wherey, new_semantic_obj)
   new_obj.DrawObject(self.UMLmodel, self.editGGLabel)
   self.UMLmodel.addtag_withtag("MT_pre__LogicalThread", new_obj.tag)
   new_semantic_obj.graphObject_ = new_obj
   self.ASGroot.addNode(new_semantic_obj)
   res = self.ASGroot.postCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   res = new_semantic_obj.postCondition(ASGNode.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return
   new_semantic_obj.postAction(ASGNode.CREATE)

   self.mode=self.IDLEMODE
   if self.editGGLabel :
      self.statusbar.event(StatusBar.TRANSFORMATION, StatusBar.CREATE)
   else:
      self.statusbar.event(StatusBar.MODEL, StatusBar.CREATE)
   return new_semantic_obj
def createNewMT_pre__PortType(self, wherex, wherey, screenCoordinates = 1):
   self.fromClass = None
   self.toClass = None
   # try the global constraints...
   res = self.ASGroot.preCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   new_semantic_obj = MT_pre__PortType(self)
   res = new_semantic_obj.preCondition ( ASGNode.CREATE )
   if res: return self.constraintViolation(res)
   new_semantic_obj.preAction ( ASGNode.CREATE ) 

   ne = len(self.ASGroot.listNodes["MT_pre__PortType"])
   if new_semantic_obj.keyword_:
      new_semantic_obj.keyword_.setValue(new_semantic_obj.keyword_.toString()+str(ne))
   if screenCoordinates:
      new_obj = graph_MT_pre__PortType(self.UMLmodel.canvasx(wherex), self.UMLmodel.canvasy(wherey), new_semantic_obj)
   else: # already in canvas coordinates
      new_obj = graph_MT_pre__PortType(wherex, wherey, new_semantic_obj)
   new_obj.DrawObject(self.UMLmodel, self.editGGLabel)
   self.UMLmodel.addtag_withtag("MT_pre__PortType", new_obj.tag)
   new_semantic_obj.graphObject_ = new_obj
   self.ASGroot.addNode(new_semantic_obj)
   res = self.ASGroot.postCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   res = new_semantic_obj.postCondition(ASGNode.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return
   new_semantic_obj.postAction(ASGNode.CREATE)

   self.mode=self.IDLEMODE
   if self.editGGLabel :
      self.statusbar.event(StatusBar.TRANSFORMATION, StatusBar.CREATE)
   else:
      self.statusbar.event(StatusBar.MODEL, StatusBar.CREATE)
   return new_semantic_obj
def createNewMT_pre__BASE0(self, wherex, wherey, screenCoordinates = 1):
   self.fromClass = None
   self.toClass = None
   # try the global constraints...
   res = self.ASGroot.preCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   new_semantic_obj = MT_pre__BASE0(self)
   res = new_semantic_obj.preCondition ( ASGNode.CREATE )
   if res: return self.constraintViolation(res)
   new_semantic_obj.preAction ( ASGNode.CREATE ) 

   ne = len(self.ASGroot.listNodes["MT_pre__BASE0"])
   if new_semantic_obj.keyword_:
      new_semantic_obj.keyword_.setValue(new_semantic_obj.keyword_.toString()+str(ne))
   if screenCoordinates:
      new_obj = graph_MT_pre__BASE0(self.UMLmodel.canvasx(wherex), self.UMLmodel.canvasy(wherey), new_semantic_obj)
   else: # already in canvas coordinates
      new_obj = graph_MT_pre__BASE0(wherex, wherey, new_semantic_obj)
   new_obj.DrawObject(self.UMLmodel, self.editGGLabel)
   self.UMLmodel.addtag_withtag("MT_pre__BASE0", new_obj.tag)
   new_semantic_obj.graphObject_ = new_obj
   self.ASGroot.addNode(new_semantic_obj)
   res = self.ASGroot.postCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   res = new_semantic_obj.postCondition(ASGNode.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return
   new_semantic_obj.postAction(ASGNode.CREATE)

   self.mode=self.IDLEMODE
   if self.editGGLabel :
      self.statusbar.event(StatusBar.TRANSFORMATION, StatusBar.CREATE)
   else:
      self.statusbar.event(StatusBar.MODEL, StatusBar.CREATE)
   return new_semantic_obj
def createNewMT_pre__CONJUGATE1(self, wherex, wherey, screenCoordinates = 1):
   self.fromClass = None
   self.toClass = None
   # try the global constraints...
   res = self.ASGroot.preCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   new_semantic_obj = MT_pre__CONJUGATE1(self)
   res = new_semantic_obj.preCondition ( ASGNode.CREATE )
   if res: return self.constraintViolation(res)
   new_semantic_obj.preAction ( ASGNode.CREATE ) 

   ne = len(self.ASGroot.listNodes["MT_pre__CONJUGATE1"])
   if new_semantic_obj.keyword_:
      new_semantic_obj.keyword_.setValue(new_semantic_obj.keyword_.toString()+str(ne))
   if screenCoordinates:
      new_obj = graph_MT_pre__CONJUGATE1(self.UMLmodel.canvasx(wherex), self.UMLmodel.canvasy(wherey), new_semantic_obj)
   else: # already in canvas coordinates
      new_obj = graph_MT_pre__CONJUGATE1(wherex, wherey, new_semantic_obj)
   new_obj.DrawObject(self.UMLmodel, self.editGGLabel)
   self.UMLmodel.addtag_withtag("MT_pre__CONJUGATE1", new_obj.tag)
   new_semantic_obj.graphObject_ = new_obj
   self.ASGroot.addNode(new_semantic_obj)
   res = self.ASGroot.postCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   res = new_semantic_obj.postCondition(ASGNode.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return
   new_semantic_obj.postAction(ASGNode.CREATE)

   self.mode=self.IDLEMODE
   if self.editGGLabel :
      self.statusbar.event(StatusBar.TRANSFORMATION, StatusBar.CREATE)
   else:
      self.statusbar.event(StatusBar.MODEL, StatusBar.CREATE)
   return new_semantic_obj
def createNewMT_pre__SignalType(self, wherex, wherey, screenCoordinates = 1):
   self.fromClass = None
   self.toClass = None
   # try the global constraints...
   res = self.ASGroot.preCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   new_semantic_obj = MT_pre__SignalType(self)
   res = new_semantic_obj.preCondition ( ASGNode.CREATE )
   if res: return self.constraintViolation(res)
   new_semantic_obj.preAction ( ASGNode.CREATE ) 

   ne = len(self.ASGroot.listNodes["MT_pre__SignalType"])
   if new_semantic_obj.keyword_:
      new_semantic_obj.keyword_.setValue(new_semantic_obj.keyword_.toString()+str(ne))
   if screenCoordinates:
      new_obj = graph_MT_pre__SignalType(self.UMLmodel.canvasx(wherex), self.UMLmodel.canvasy(wherey), new_semantic_obj)
   else: # already in canvas coordinates
      new_obj = graph_MT_pre__SignalType(wherex, wherey, new_semantic_obj)
   new_obj.DrawObject(self.UMLmodel, self.editGGLabel)
   self.UMLmodel.addtag_withtag("MT_pre__SignalType", new_obj.tag)
   new_semantic_obj.graphObject_ = new_obj
   self.ASGroot.addNode(new_semantic_obj)
   res = self.ASGroot.postCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   res = new_semantic_obj.postCondition(ASGNode.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return
   new_semantic_obj.postAction(ASGNode.CREATE)

   self.mode=self.IDLEMODE
   if self.editGGLabel :
      self.statusbar.event(StatusBar.TRANSFORMATION, StatusBar.CREATE)
   else:
      self.statusbar.event(StatusBar.MODEL, StatusBar.CREATE)
   return new_semantic_obj
def createNewMT_pre__OUT1(self, wherex, wherey, screenCoordinates = 1):
   self.fromClass = None
   self.toClass = None
   # try the global constraints...
   res = self.ASGroot.preCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   new_semantic_obj = MT_pre__OUT1(self)
   res = new_semantic_obj.preCondition ( ASGNode.CREATE )
   if res: return self.constraintViolation(res)
   new_semantic_obj.preAction ( ASGNode.CREATE ) 

   ne = len(self.ASGroot.listNodes["MT_pre__OUT1"])
   if new_semantic_obj.keyword_:
      new_semantic_obj.keyword_.setValue(new_semantic_obj.keyword_.toString()+str(ne))
   if screenCoordinates:
      new_obj = graph_MT_pre__OUT1(self.UMLmodel.canvasx(wherex), self.UMLmodel.canvasy(wherey), new_semantic_obj)
   else: # already in canvas coordinates
      new_obj = graph_MT_pre__OUT1(wherex, wherey, new_semantic_obj)
   new_obj.DrawObject(self.UMLmodel, self.editGGLabel)
   self.UMLmodel.addtag_withtag("MT_pre__OUT1", new_obj.tag)
   new_semantic_obj.graphObject_ = new_obj
   self.ASGroot.addNode(new_semantic_obj)
   res = self.ASGroot.postCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   res = new_semantic_obj.postCondition(ASGNode.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return
   new_semantic_obj.postAction(ASGNode.CREATE)

   self.mode=self.IDLEMODE
   if self.editGGLabel :
      self.statusbar.event(StatusBar.TRANSFORMATION, StatusBar.CREATE)
   else:
      self.statusbar.event(StatusBar.MODEL, StatusBar.CREATE)
   return new_semantic_obj
def createNewMT_pre__IN0(self, wherex, wherey, screenCoordinates = 1):
   self.fromClass = None
   self.toClass = None
   # try the global constraints...
   res = self.ASGroot.preCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   new_semantic_obj = MT_pre__IN0(self)
   res = new_semantic_obj.preCondition ( ASGNode.CREATE )
   if res: return self.constraintViolation(res)
   new_semantic_obj.preAction ( ASGNode.CREATE ) 

   ne = len(self.ASGroot.listNodes["MT_pre__IN0"])
   if new_semantic_obj.keyword_:
      new_semantic_obj.keyword_.setValue(new_semantic_obj.keyword_.toString()+str(ne))
   if screenCoordinates:
      new_obj = graph_MT_pre__IN0(self.UMLmodel.canvasx(wherex), self.UMLmodel.canvasy(wherey), new_semantic_obj)
   else: # already in canvas coordinates
      new_obj = graph_MT_pre__IN0(wherex, wherey, new_semantic_obj)
   new_obj.DrawObject(self.UMLmodel, self.editGGLabel)
   self.UMLmodel.addtag_withtag("MT_pre__IN0", new_obj.tag)
   new_semantic_obj.graphObject_ = new_obj
   self.ASGroot.addNode(new_semantic_obj)
   res = self.ASGroot.postCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   res = new_semantic_obj.postCondition(ASGNode.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return
   new_semantic_obj.postAction(ASGNode.CREATE)

   self.mode=self.IDLEMODE
   if self.editGGLabel :
      self.statusbar.event(StatusBar.TRANSFORMATION, StatusBar.CREATE)
   else:
      self.statusbar.event(StatusBar.MODEL, StatusBar.CREATE)
   return new_semantic_obj
def createNewMT_pre__RoleType(self, wherex, wherey, screenCoordinates = 1):
   self.fromClass = None
   self.toClass = None
   # try the global constraints...
   res = self.ASGroot.preCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   new_semantic_obj = MT_pre__RoleType(self)
   res = new_semantic_obj.preCondition ( ASGNode.CREATE )
   if res: return self.constraintViolation(res)
   new_semantic_obj.preAction ( ASGNode.CREATE ) 

   ne = len(self.ASGroot.listNodes["MT_pre__RoleType"])
   if new_semantic_obj.keyword_:
      new_semantic_obj.keyword_.setValue(new_semantic_obj.keyword_.toString()+str(ne))
   if screenCoordinates:
      new_obj = graph_MT_pre__RoleType(self.UMLmodel.canvasx(wherex), self.UMLmodel.canvasy(wherey), new_semantic_obj)
   else: # already in canvas coordinates
      new_obj = graph_MT_pre__RoleType(wherex, wherey, new_semantic_obj)
   new_obj.DrawObject(self.UMLmodel, self.editGGLabel)
   self.UMLmodel.addtag_withtag("MT_pre__RoleType", new_obj.tag)
   new_semantic_obj.graphObject_ = new_obj
   self.ASGroot.addNode(new_semantic_obj)
   res = self.ASGroot.postCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   res = new_semantic_obj.postCondition(ASGNode.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return
   new_semantic_obj.postAction(ASGNode.CREATE)

   self.mode=self.IDLEMODE
   if self.editGGLabel :
      self.statusbar.event(StatusBar.TRANSFORMATION, StatusBar.CREATE)
   else:
      self.statusbar.event(StatusBar.MODEL, StatusBar.CREATE)
   return new_semantic_obj
def createNewMT_pre__FIXED0(self, wherex, wherey, screenCoordinates = 1):
   self.fromClass = None
   self.toClass = None
   # try the global constraints...
   res = self.ASGroot.preCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   new_semantic_obj = MT_pre__FIXED0(self)
   res = new_semantic_obj.preCondition ( ASGNode.CREATE )
   if res: return self.constraintViolation(res)
   new_semantic_obj.preAction ( ASGNode.CREATE ) 

   ne = len(self.ASGroot.listNodes["MT_pre__FIXED0"])
   if new_semantic_obj.keyword_:
      new_semantic_obj.keyword_.setValue(new_semantic_obj.keyword_.toString()+str(ne))
   if screenCoordinates:
      new_obj = graph_MT_pre__FIXED0(self.UMLmodel.canvasx(wherex), self.UMLmodel.canvasy(wherey), new_semantic_obj)
   else: # already in canvas coordinates
      new_obj = graph_MT_pre__FIXED0(wherex, wherey, new_semantic_obj)
   new_obj.DrawObject(self.UMLmodel, self.editGGLabel)
   self.UMLmodel.addtag_withtag("MT_pre__FIXED0", new_obj.tag)
   new_semantic_obj.graphObject_ = new_obj
   self.ASGroot.addNode(new_semantic_obj)
   res = self.ASGroot.postCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   res = new_semantic_obj.postCondition(ASGNode.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return
   new_semantic_obj.postAction(ASGNode.CREATE)

   self.mode=self.IDLEMODE
   if self.editGGLabel :
      self.statusbar.event(StatusBar.TRANSFORMATION, StatusBar.CREATE)
   else:
      self.statusbar.event(StatusBar.MODEL, StatusBar.CREATE)
   return new_semantic_obj
def createNewMT_pre__OPTIONAL1(self, wherex, wherey, screenCoordinates = 1):
   self.fromClass = None
   self.toClass = None
   # try the global constraints...
   res = self.ASGroot.preCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   new_semantic_obj = MT_pre__OPTIONAL1(self)
   res = new_semantic_obj.preCondition ( ASGNode.CREATE )
   if res: return self.constraintViolation(res)
   new_semantic_obj.preAction ( ASGNode.CREATE ) 

   ne = len(self.ASGroot.listNodes["MT_pre__OPTIONAL1"])
   if new_semantic_obj.keyword_:
      new_semantic_obj.keyword_.setValue(new_semantic_obj.keyword_.toString()+str(ne))
   if screenCoordinates:
      new_obj = graph_MT_pre__OPTIONAL1(self.UMLmodel.canvasx(wherex), self.UMLmodel.canvasy(wherey), new_semantic_obj)
   else: # already in canvas coordinates
      new_obj = graph_MT_pre__OPTIONAL1(wherex, wherey, new_semantic_obj)
   new_obj.DrawObject(self.UMLmodel, self.editGGLabel)
   self.UMLmodel.addtag_withtag("MT_pre__OPTIONAL1", new_obj.tag)
   new_semantic_obj.graphObject_ = new_obj
   self.ASGroot.addNode(new_semantic_obj)
   res = self.ASGroot.postCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   res = new_semantic_obj.postCondition(ASGNode.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return
   new_semantic_obj.postAction(ASGNode.CREATE)

   self.mode=self.IDLEMODE
   if self.editGGLabel :
      self.statusbar.event(StatusBar.TRANSFORMATION, StatusBar.CREATE)
   else:
      self.statusbar.event(StatusBar.MODEL, StatusBar.CREATE)
   return new_semantic_obj
def createNewMT_pre__PLUGIN2(self, wherex, wherey, screenCoordinates = 1):
   self.fromClass = None
   self.toClass = None
   # try the global constraints...
   res = self.ASGroot.preCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   new_semantic_obj = MT_pre__PLUGIN2(self)
   res = new_semantic_obj.preCondition ( ASGNode.CREATE )
   if res: return self.constraintViolation(res)
   new_semantic_obj.preAction ( ASGNode.CREATE ) 

   ne = len(self.ASGroot.listNodes["MT_pre__PLUGIN2"])
   if new_semantic_obj.keyword_:
      new_semantic_obj.keyword_.setValue(new_semantic_obj.keyword_.toString()+str(ne))
   if screenCoordinates:
      new_obj = graph_MT_pre__PLUGIN2(self.UMLmodel.canvasx(wherex), self.UMLmodel.canvasy(wherey), new_semantic_obj)
   else: # already in canvas coordinates
      new_obj = graph_MT_pre__PLUGIN2(wherex, wherey, new_semantic_obj)
   new_obj.DrawObject(self.UMLmodel, self.editGGLabel)
   self.UMLmodel.addtag_withtag("MT_pre__PLUGIN2", new_obj.tag)
   new_semantic_obj.graphObject_ = new_obj
   self.ASGroot.addNode(new_semantic_obj)
   res = self.ASGroot.postCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   res = new_semantic_obj.postCondition(ASGNode.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return
   new_semantic_obj.postAction(ASGNode.CREATE)

   self.mode=self.IDLEMODE
   if self.editGGLabel :
      self.statusbar.event(StatusBar.TRANSFORMATION, StatusBar.CREATE)
   else:
      self.statusbar.event(StatusBar.MODEL, StatusBar.CREATE)
   return new_semantic_obj
def createNewMT_pre__TransitionType(self, wherex, wherey, screenCoordinates = 1):
   self.fromClass = None
   self.toClass = None
   # try the global constraints...
   res = self.ASGroot.preCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   new_semantic_obj = MT_pre__TransitionType(self)
   res = new_semantic_obj.preCondition ( ASGNode.CREATE )
   if res: return self.constraintViolation(res)
   new_semantic_obj.preAction ( ASGNode.CREATE ) 

   ne = len(self.ASGroot.listNodes["MT_pre__TransitionType"])
   if new_semantic_obj.keyword_:
      new_semantic_obj.keyword_.setValue(new_semantic_obj.keyword_.toString()+str(ne))
   if screenCoordinates:
      new_obj = graph_MT_pre__TransitionType(self.UMLmodel.canvasx(wherex), self.UMLmodel.canvasy(wherey), new_semantic_obj)
   else: # already in canvas coordinates
      new_obj = graph_MT_pre__TransitionType(wherex, wherey, new_semantic_obj)
   new_obj.DrawObject(self.UMLmodel, self.editGGLabel)
   self.UMLmodel.addtag_withtag("MT_pre__TransitionType", new_obj.tag)
   new_semantic_obj.graphObject_ = new_obj
   self.ASGroot.addNode(new_semantic_obj)
   res = self.ASGroot.postCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   res = new_semantic_obj.postCondition(ASGNode.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return
   new_semantic_obj.postAction(ASGNode.CREATE)

   self.mode=self.IDLEMODE
   if self.editGGLabel :
      self.statusbar.event(StatusBar.TRANSFORMATION, StatusBar.CREATE)
   else:
      self.statusbar.event(StatusBar.MODEL, StatusBar.CREATE)
   return new_semantic_obj
def createNewMT_pre__SIBLING0(self, wherex, wherey, screenCoordinates = 1):
   self.fromClass = None
   self.toClass = None
   # try the global constraints...
   res = self.ASGroot.preCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   new_semantic_obj = MT_pre__SIBLING0(self)
   res = new_semantic_obj.preCondition ( ASGNode.CREATE )
   if res: return self.constraintViolation(res)
   new_semantic_obj.preAction ( ASGNode.CREATE ) 

   ne = len(self.ASGroot.listNodes["MT_pre__SIBLING0"])
   if new_semantic_obj.keyword_:
      new_semantic_obj.keyword_.setValue(new_semantic_obj.keyword_.toString()+str(ne))
   if screenCoordinates:
      new_obj = graph_MT_pre__SIBLING0(self.UMLmodel.canvasx(wherex), self.UMLmodel.canvasy(wherey), new_semantic_obj)
   else: # already in canvas coordinates
      new_obj = graph_MT_pre__SIBLING0(wherex, wherey, new_semantic_obj)
   new_obj.DrawObject(self.UMLmodel, self.editGGLabel)
   self.UMLmodel.addtag_withtag("MT_pre__SIBLING0", new_obj.tag)
   new_semantic_obj.graphObject_ = new_obj
   self.ASGroot.addNode(new_semantic_obj)
   res = self.ASGroot.postCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   res = new_semantic_obj.postCondition(ASGNode.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return
   new_semantic_obj.postAction(ASGNode.CREATE)

   self.mode=self.IDLEMODE
   if self.editGGLabel :
      self.statusbar.event(StatusBar.TRANSFORMATION, StatusBar.CREATE)
   else:
      self.statusbar.event(StatusBar.MODEL, StatusBar.CREATE)
   return new_semantic_obj
def createNewMT_pre__IN1(self, wherex, wherey, screenCoordinates = 1):
   self.fromClass = None
   self.toClass = None
   # try the global constraints...
   res = self.ASGroot.preCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   new_semantic_obj = MT_pre__IN1(self)
   res = new_semantic_obj.preCondition ( ASGNode.CREATE )
   if res: return self.constraintViolation(res)
   new_semantic_obj.preAction ( ASGNode.CREATE ) 

   ne = len(self.ASGroot.listNodes["MT_pre__IN1"])
   if new_semantic_obj.keyword_:
      new_semantic_obj.keyword_.setValue(new_semantic_obj.keyword_.toString()+str(ne))
   if screenCoordinates:
      new_obj = graph_MT_pre__IN1(self.UMLmodel.canvasx(wherex), self.UMLmodel.canvasy(wherey), new_semantic_obj)
   else: # already in canvas coordinates
      new_obj = graph_MT_pre__IN1(wherex, wherey, new_semantic_obj)
   new_obj.DrawObject(self.UMLmodel, self.editGGLabel)
   self.UMLmodel.addtag_withtag("MT_pre__IN1", new_obj.tag)
   new_semantic_obj.graphObject_ = new_obj
   self.ASGroot.addNode(new_semantic_obj)
   res = self.ASGroot.postCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   res = new_semantic_obj.postCondition(ASGNode.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return
   new_semantic_obj.postAction(ASGNode.CREATE)

   self.mode=self.IDLEMODE
   if self.editGGLabel :
      self.statusbar.event(StatusBar.TRANSFORMATION, StatusBar.CREATE)
   else:
      self.statusbar.event(StatusBar.MODEL, StatusBar.CREATE)
   return new_semantic_obj
def createNewMT_pre__OUT2(self, wherex, wherey, screenCoordinates = 1):
   self.fromClass = None
   self.toClass = None
   # try the global constraints...
   res = self.ASGroot.preCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   new_semantic_obj = MT_pre__OUT2(self)
   res = new_semantic_obj.preCondition ( ASGNode.CREATE )
   if res: return self.constraintViolation(res)
   new_semantic_obj.preAction ( ASGNode.CREATE ) 

   ne = len(self.ASGroot.listNodes["MT_pre__OUT2"])
   if new_semantic_obj.keyword_:
      new_semantic_obj.keyword_.setValue(new_semantic_obj.keyword_.toString()+str(ne))
   if screenCoordinates:
      new_obj = graph_MT_pre__OUT2(self.UMLmodel.canvasx(wherex), self.UMLmodel.canvasy(wherey), new_semantic_obj)
   else: # already in canvas coordinates
      new_obj = graph_MT_pre__OUT2(wherex, wherey, new_semantic_obj)
   new_obj.DrawObject(self.UMLmodel, self.editGGLabel)
   self.UMLmodel.addtag_withtag("MT_pre__OUT2", new_obj.tag)
   new_semantic_obj.graphObject_ = new_obj
   self.ASGroot.addNode(new_semantic_obj)
   res = self.ASGroot.postCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   res = new_semantic_obj.postCondition(ASGNode.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return
   new_semantic_obj.postAction(ASGNode.CREATE)

   self.mode=self.IDLEMODE
   if self.editGGLabel :
      self.statusbar.event(StatusBar.TRANSFORMATION, StatusBar.CREATE)
   else:
      self.statusbar.event(StatusBar.MODEL, StatusBar.CREATE)
   return new_semantic_obj
def createNewMT_pre__Def(self, wherex, wherey, screenCoordinates = 1):
   self.fromClass = None
   self.toClass = None
   # try the global constraints...
   res = self.ASGroot.preCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   new_semantic_obj = MT_pre__Def(self)
   res = new_semantic_obj.preCondition ( ASGNode.CREATE )
   if res: return self.constraintViolation(res)
   new_semantic_obj.preAction ( ASGNode.CREATE ) 

   ne = len(self.ASGroot.listNodes["MT_pre__Def"])
   if new_semantic_obj.keyword_:
      new_semantic_obj.keyword_.setValue(new_semantic_obj.keyword_.toString()+str(ne))
   if screenCoordinates:
      new_obj = graph_MT_pre__Def(self.UMLmodel.canvasx(wherex), self.UMLmodel.canvasy(wherey), new_semantic_obj)
   else: # already in canvas coordinates
      new_obj = graph_MT_pre__Def(wherex, wherey, new_semantic_obj)
   new_obj.DrawObject(self.UMLmodel, self.editGGLabel)
   self.UMLmodel.addtag_withtag("MT_pre__Def", new_obj.tag)
   new_semantic_obj.graphObject_ = new_obj
   self.ASGroot.addNode(new_semantic_obj)
   res = self.ASGroot.postCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   res = new_semantic_obj.postCondition(ASGNode.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return
   new_semantic_obj.postAction(ASGNode.CREATE)

   self.mode=self.IDLEMODE
   if self.editGGLabel :
      self.statusbar.event(StatusBar.TRANSFORMATION, StatusBar.CREATE)
   else:
      self.statusbar.event(StatusBar.MODEL, StatusBar.CREATE)
   return new_semantic_obj
def createNewMT_pre__Expr(self, wherex, wherey, screenCoordinates = 1):
   self.fromClass = None
   self.toClass = None
   # try the global constraints...
   res = self.ASGroot.preCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   new_semantic_obj = MT_pre__Expr(self)
   res = new_semantic_obj.preCondition ( ASGNode.CREATE )
   if res: return self.constraintViolation(res)
   new_semantic_obj.preAction ( ASGNode.CREATE ) 

   ne = len(self.ASGroot.listNodes["MT_pre__Expr"])
   if new_semantic_obj.keyword_:
      new_semantic_obj.keyword_.setValue(new_semantic_obj.keyword_.toString()+str(ne))
   if screenCoordinates:
      new_obj = graph_MT_pre__Expr(self.UMLmodel.canvasx(wherex), self.UMLmodel.canvasy(wherey), new_semantic_obj)
   else: # already in canvas coordinates
      new_obj = graph_MT_pre__Expr(wherex, wherey, new_semantic_obj)
   new_obj.DrawObject(self.UMLmodel, self.editGGLabel)
   self.UMLmodel.addtag_withtag("MT_pre__Expr", new_obj.tag)
   new_semantic_obj.graphObject_ = new_obj
   self.ASGroot.addNode(new_semantic_obj)
   res = self.ASGroot.postCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   res = new_semantic_obj.postCondition(ASGNode.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return
   new_semantic_obj.postAction(ASGNode.CREATE)

   self.mode=self.IDLEMODE
   if self.editGGLabel :
      self.statusbar.event(StatusBar.TRANSFORMATION, StatusBar.CREATE)
   else:
      self.statusbar.event(StatusBar.MODEL, StatusBar.CREATE)
   return new_semantic_obj
def createNewMT_pre__Pattern(self, wherex, wherey, screenCoordinates = 1):
   self.fromClass = None
   self.toClass = None
   # try the global constraints...
   res = self.ASGroot.preCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   new_semantic_obj = MT_pre__Pattern(self)
   res = new_semantic_obj.preCondition ( ASGNode.CREATE )
   if res: return self.constraintViolation(res)
   new_semantic_obj.preAction ( ASGNode.CREATE ) 

   ne = len(self.ASGroot.listNodes["MT_pre__Pattern"])
   if new_semantic_obj.keyword_:
      new_semantic_obj.keyword_.setValue(new_semantic_obj.keyword_.toString()+str(ne))
   if screenCoordinates:
      new_obj = graph_MT_pre__Pattern(self.UMLmodel.canvasx(wherex), self.UMLmodel.canvasy(wherey), new_semantic_obj)
   else: # already in canvas coordinates
      new_obj = graph_MT_pre__Pattern(wherex, wherey, new_semantic_obj)
   new_obj.DrawObject(self.UMLmodel, self.editGGLabel)
   self.UMLmodel.addtag_withtag("MT_pre__Pattern", new_obj.tag)
   new_semantic_obj.graphObject_ = new_obj
   self.ASGroot.addNode(new_semantic_obj)
   res = self.ASGroot.postCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   res = new_semantic_obj.postCondition(ASGNode.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return
   new_semantic_obj.postAction(ASGNode.CREATE)

   self.mode=self.IDLEMODE
   if self.editGGLabel :
      self.statusbar.event(StatusBar.TRANSFORMATION, StatusBar.CREATE)
   else:
      self.statusbar.event(StatusBar.MODEL, StatusBar.CREATE)
   return new_semantic_obj
def createNewMT_pre__Proc(self, wherex, wherey, screenCoordinates = 1):
   self.fromClass = None
   self.toClass = None
   # try the global constraints...
   res = self.ASGroot.preCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   new_semantic_obj = MT_pre__Proc(self)
   res = new_semantic_obj.preCondition ( ASGNode.CREATE )
   if res: return self.constraintViolation(res)
   new_semantic_obj.preAction ( ASGNode.CREATE ) 

   ne = len(self.ASGroot.listNodes["MT_pre__Proc"])
   if new_semantic_obj.keyword_:
      new_semantic_obj.keyword_.setValue(new_semantic_obj.keyword_.toString()+str(ne))
   if screenCoordinates:
      new_obj = graph_MT_pre__Proc(self.UMLmodel.canvasx(wherex), self.UMLmodel.canvasy(wherey), new_semantic_obj)
   else: # already in canvas coordinates
      new_obj = graph_MT_pre__Proc(wherex, wherey, new_semantic_obj)
   new_obj.DrawObject(self.UMLmodel, self.editGGLabel)
   self.UMLmodel.addtag_withtag("MT_pre__Proc", new_obj.tag)
   new_semantic_obj.graphObject_ = new_obj
   self.ASGroot.addNode(new_semantic_obj)
   res = self.ASGroot.postCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   res = new_semantic_obj.postCondition(ASGNode.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return
   new_semantic_obj.postAction(ASGNode.CREATE)

   self.mode=self.IDLEMODE
   if self.editGGLabel :
      self.statusbar.event(StatusBar.TRANSFORMATION, StatusBar.CREATE)
   else:
      self.statusbar.event(StatusBar.MODEL, StatusBar.CREATE)
   return new_semantic_obj
def createNewMT_pre__ProcDef(self, wherex, wherey, screenCoordinates = 1):
   self.fromClass = None
   self.toClass = None
   # try the global constraints...
   res = self.ASGroot.preCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   new_semantic_obj = MT_pre__ProcDef(self)
   res = new_semantic_obj.preCondition ( ASGNode.CREATE )
   if res: return self.constraintViolation(res)
   new_semantic_obj.preAction ( ASGNode.CREATE ) 

   ne = len(self.ASGroot.listNodes["MT_pre__ProcDef"])
   if new_semantic_obj.keyword_:
      new_semantic_obj.keyword_.setValue(new_semantic_obj.keyword_.toString()+str(ne))
   if screenCoordinates:
      new_obj = graph_MT_pre__ProcDef(self.UMLmodel.canvasx(wherex), self.UMLmodel.canvasy(wherey), new_semantic_obj)
   else: # already in canvas coordinates
      new_obj = graph_MT_pre__ProcDef(wherex, wherey, new_semantic_obj)
   new_obj.DrawObject(self.UMLmodel, self.editGGLabel)
   self.UMLmodel.addtag_withtag("MT_pre__ProcDef", new_obj.tag)
   new_semantic_obj.graphObject_ = new_obj
   self.ASGroot.addNode(new_semantic_obj)
   res = self.ASGroot.postCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   res = new_semantic_obj.postCondition(ASGNode.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return
   new_semantic_obj.postAction(ASGNode.CREATE)

   self.mode=self.IDLEMODE
   if self.editGGLabel :
      self.statusbar.event(StatusBar.TRANSFORMATION, StatusBar.CREATE)
   else:
      self.statusbar.event(StatusBar.MODEL, StatusBar.CREATE)
   return new_semantic_obj
def createNewMT_pre__FuncDef(self, wherex, wherey, screenCoordinates = 1):
   self.fromClass = None
   self.toClass = None
   # try the global constraints...
   res = self.ASGroot.preCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   new_semantic_obj = MT_pre__FuncDef(self)
   res = new_semantic_obj.preCondition ( ASGNode.CREATE )
   if res: return self.constraintViolation(res)
   new_semantic_obj.preAction ( ASGNode.CREATE ) 

   ne = len(self.ASGroot.listNodes["MT_pre__FuncDef"])
   if new_semantic_obj.keyword_:
      new_semantic_obj.keyword_.setValue(new_semantic_obj.keyword_.toString()+str(ne))
   if screenCoordinates:
      new_obj = graph_MT_pre__FuncDef(self.UMLmodel.canvasx(wherex), self.UMLmodel.canvasy(wherey), new_semantic_obj)
   else: # already in canvas coordinates
      new_obj = graph_MT_pre__FuncDef(wherex, wherey, new_semantic_obj)
   new_obj.DrawObject(self.UMLmodel, self.editGGLabel)
   self.UMLmodel.addtag_withtag("MT_pre__FuncDef", new_obj.tag)
   new_semantic_obj.graphObject_ = new_obj
   self.ASGroot.addNode(new_semantic_obj)
   res = self.ASGroot.postCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   res = new_semantic_obj.postCondition(ASGNode.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return
   new_semantic_obj.postAction(ASGNode.CREATE)

   self.mode=self.IDLEMODE
   if self.editGGLabel :
      self.statusbar.event(StatusBar.TRANSFORMATION, StatusBar.CREATE)
   else:
      self.statusbar.event(StatusBar.MODEL, StatusBar.CREATE)
   return new_semantic_obj
def createNewMT_pre__Name(self, wherex, wherey, screenCoordinates = 1):
   self.fromClass = None
   self.toClass = None
   # try the global constraints...
   res = self.ASGroot.preCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   new_semantic_obj = MT_pre__Name(self)
   res = new_semantic_obj.preCondition ( ASGNode.CREATE )
   if res: return self.constraintViolation(res)
   new_semantic_obj.preAction ( ASGNode.CREATE ) 

   ne = len(self.ASGroot.listNodes["MT_pre__Name"])
   if new_semantic_obj.keyword_:
      new_semantic_obj.keyword_.setValue(new_semantic_obj.keyword_.toString()+str(ne))
   if screenCoordinates:
      new_obj = graph_MT_pre__Name(self.UMLmodel.canvasx(wherex), self.UMLmodel.canvasy(wherey), new_semantic_obj)
   else: # already in canvas coordinates
      new_obj = graph_MT_pre__Name(wherex, wherey, new_semantic_obj)
   new_obj.DrawObject(self.UMLmodel, self.editGGLabel)
   self.UMLmodel.addtag_withtag("MT_pre__Name", new_obj.tag)
   new_semantic_obj.graphObject_ = new_obj
   self.ASGroot.addNode(new_semantic_obj)
   res = self.ASGroot.postCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   res = new_semantic_obj.postCondition(ASGNode.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return
   new_semantic_obj.postAction(ASGNode.CREATE)

   self.mode=self.IDLEMODE
   if self.editGGLabel :
      self.statusbar.event(StatusBar.TRANSFORMATION, StatusBar.CREATE)
   else:
      self.statusbar.event(StatusBar.MODEL, StatusBar.CREATE)
   return new_semantic_obj
def createNewMT_pre__PythonRef(self, wherex, wherey, screenCoordinates = 1):
   self.fromClass = None
   self.toClass = None
   # try the global constraints...
   res = self.ASGroot.preCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   new_semantic_obj = MT_pre__PythonRef(self)
   res = new_semantic_obj.preCondition ( ASGNode.CREATE )
   if res: return self.constraintViolation(res)
   new_semantic_obj.preAction ( ASGNode.CREATE ) 

   ne = len(self.ASGroot.listNodes["MT_pre__PythonRef"])
   if new_semantic_obj.keyword_:
      new_semantic_obj.keyword_.setValue(new_semantic_obj.keyword_.toString()+str(ne))
   if screenCoordinates:
      new_obj = graph_MT_pre__PythonRef(self.UMLmodel.canvasx(wherex), self.UMLmodel.canvasy(wherey), new_semantic_obj)
   else: # already in canvas coordinates
      new_obj = graph_MT_pre__PythonRef(wherex, wherey, new_semantic_obj)
   new_obj.DrawObject(self.UMLmodel, self.editGGLabel)
   self.UMLmodel.addtag_withtag("MT_pre__PythonRef", new_obj.tag)
   new_semantic_obj.graphObject_ = new_obj
   self.ASGroot.addNode(new_semantic_obj)
   res = self.ASGroot.postCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   res = new_semantic_obj.postCondition(ASGNode.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return
   new_semantic_obj.postAction(ASGNode.CREATE)

   self.mode=self.IDLEMODE
   if self.editGGLabel :
      self.statusbar.event(StatusBar.TRANSFORMATION, StatusBar.CREATE)
   else:
      self.statusbar.event(StatusBar.MODEL, StatusBar.CREATE)
   return new_semantic_obj
def createNewMT_pre__Module(self, wherex, wherey, screenCoordinates = 1):
   self.fromClass = None
   self.toClass = None
   # try the global constraints...
   res = self.ASGroot.preCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   new_semantic_obj = MT_pre__Module(self)
   res = new_semantic_obj.preCondition ( ASGNode.CREATE )
   if res: return self.constraintViolation(res)
   new_semantic_obj.preAction ( ASGNode.CREATE ) 

   ne = len(self.ASGroot.listNodes["MT_pre__Module"])
   if new_semantic_obj.keyword_:
      new_semantic_obj.keyword_.setValue(new_semantic_obj.keyword_.toString()+str(ne))
   if screenCoordinates:
      new_obj = graph_MT_pre__Module(self.UMLmodel.canvasx(wherex), self.UMLmodel.canvasy(wherey), new_semantic_obj)
   else: # already in canvas coordinates
      new_obj = graph_MT_pre__Module(wherex, wherey, new_semantic_obj)
   new_obj.DrawObject(self.UMLmodel, self.editGGLabel)
   self.UMLmodel.addtag_withtag("MT_pre__Module", new_obj.tag)
   new_semantic_obj.graphObject_ = new_obj
   self.ASGroot.addNode(new_semantic_obj)
   res = self.ASGroot.postCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   res = new_semantic_obj.postCondition(ASGNode.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return
   new_semantic_obj.postAction(ASGNode.CREATE)

   self.mode=self.IDLEMODE
   if self.editGGLabel :
      self.statusbar.event(StatusBar.TRANSFORMATION, StatusBar.CREATE)
   else:
      self.statusbar.event(StatusBar.MODEL, StatusBar.CREATE)
   return new_semantic_obj
def createNewMT_pre__Null(self, wherex, wherey, screenCoordinates = 1):
   self.fromClass = None
   self.toClass = None
   # try the global constraints...
   res = self.ASGroot.preCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   new_semantic_obj = MT_pre__Null(self)
   res = new_semantic_obj.preCondition ( ASGNode.CREATE )
   if res: return self.constraintViolation(res)
   new_semantic_obj.preAction ( ASGNode.CREATE ) 

   ne = len(self.ASGroot.listNodes["MT_pre__Null"])
   if new_semantic_obj.keyword_:
      new_semantic_obj.keyword_.setValue(new_semantic_obj.keyword_.toString()+str(ne))
   if screenCoordinates:
      new_obj = graph_MT_pre__Null(self.UMLmodel.canvasx(wherex), self.UMLmodel.canvasy(wherey), new_semantic_obj)
   else: # already in canvas coordinates
      new_obj = graph_MT_pre__Null(wherex, wherey, new_semantic_obj)
   new_obj.DrawObject(self.UMLmodel, self.editGGLabel)
   self.UMLmodel.addtag_withtag("MT_pre__Null", new_obj.tag)
   new_semantic_obj.graphObject_ = new_obj
   self.ASGroot.addNode(new_semantic_obj)
   res = self.ASGroot.postCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   res = new_semantic_obj.postCondition(ASGNode.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return
   new_semantic_obj.postAction(ASGNode.CREATE)

   self.mode=self.IDLEMODE
   if self.editGGLabel :
      self.statusbar.event(StatusBar.TRANSFORMATION, StatusBar.CREATE)
   else:
      self.statusbar.event(StatusBar.MODEL, StatusBar.CREATE)
   return new_semantic_obj
def createNewMT_pre__Trigger_T(self, wherex, wherey, screenCoordinates = 1):
   self.fromClass = None
   self.toClass = None
   # try the global constraints...
   res = self.ASGroot.preCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   new_semantic_obj = MT_pre__Trigger_T(self)
   res = new_semantic_obj.preCondition ( ASGNode.CREATE )
   if res: return self.constraintViolation(res)
   new_semantic_obj.preAction ( ASGNode.CREATE ) 

   ne = len(self.ASGroot.listNodes["MT_pre__Trigger_T"])
   if new_semantic_obj.keyword_:
      new_semantic_obj.keyword_.setValue(new_semantic_obj.keyword_.toString()+str(ne))
   if screenCoordinates:
      new_obj = graph_MT_pre__Trigger_T(self.UMLmodel.canvasx(wherex), self.UMLmodel.canvasy(wherey), new_semantic_obj)
   else: # already in canvas coordinates
      new_obj = graph_MT_pre__Trigger_T(wherex, wherey, new_semantic_obj)
   new_obj.DrawObject(self.UMLmodel, self.editGGLabel)
   self.UMLmodel.addtag_withtag("MT_pre__Trigger_T", new_obj.tag)
   new_semantic_obj.graphObject_ = new_obj
   self.ASGroot.addNode(new_semantic_obj)
   res = self.ASGroot.postCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   res = new_semantic_obj.postCondition(ASGNode.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return
   new_semantic_obj.postAction(ASGNode.CREATE)

   self.mode=self.IDLEMODE
   if self.editGGLabel :
      self.statusbar.event(StatusBar.TRANSFORMATION, StatusBar.CREATE)
   else:
      self.statusbar.event(StatusBar.MODEL, StatusBar.CREATE)
   return new_semantic_obj
def createNewMT_pre__Listen(self, wherex, wherey, screenCoordinates = 1):
   self.fromClass = None
   self.toClass = None
   # try the global constraints...
   res = self.ASGroot.preCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   new_semantic_obj = MT_pre__Listen(self)
   res = new_semantic_obj.preCondition ( ASGNode.CREATE )
   if res: return self.constraintViolation(res)
   new_semantic_obj.preAction ( ASGNode.CREATE ) 

   ne = len(self.ASGroot.listNodes["MT_pre__Listen"])
   if new_semantic_obj.keyword_:
      new_semantic_obj.keyword_.setValue(new_semantic_obj.keyword_.toString()+str(ne))
   if screenCoordinates:
      new_obj = graph_MT_pre__Listen(self.UMLmodel.canvasx(wherex), self.UMLmodel.canvasy(wherey), new_semantic_obj)
   else: # already in canvas coordinates
      new_obj = graph_MT_pre__Listen(wherex, wherey, new_semantic_obj)
   new_obj.DrawObject(self.UMLmodel, self.editGGLabel)
   self.UMLmodel.addtag_withtag("MT_pre__Listen", new_obj.tag)
   new_semantic_obj.graphObject_ = new_obj
   self.ASGroot.addNode(new_semantic_obj)
   res = self.ASGroot.postCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   res = new_semantic_obj.postCondition(ASGNode.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return
   new_semantic_obj.postAction(ASGNode.CREATE)

   self.mode=self.IDLEMODE
   if self.editGGLabel :
      self.statusbar.event(StatusBar.TRANSFORMATION, StatusBar.CREATE)
   else:
      self.statusbar.event(StatusBar.MODEL, StatusBar.CREATE)
   return new_semantic_obj
def createNewMT_pre__ConditionBranch(self, wherex, wherey, screenCoordinates = 1):
   self.fromClass = None
   self.toClass = None
   # try the global constraints...
   res = self.ASGroot.preCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   new_semantic_obj = MT_pre__ConditionBranch(self)
   res = new_semantic_obj.preCondition ( ASGNode.CREATE )
   if res: return self.constraintViolation(res)
   new_semantic_obj.preAction ( ASGNode.CREATE ) 

   ne = len(self.ASGroot.listNodes["MT_pre__ConditionBranch"])
   if new_semantic_obj.keyword_:
      new_semantic_obj.keyword_.setValue(new_semantic_obj.keyword_.toString()+str(ne))
   if screenCoordinates:
      new_obj = graph_MT_pre__ConditionBranch(self.UMLmodel.canvasx(wherex), self.UMLmodel.canvasy(wherey), new_semantic_obj)
   else: # already in canvas coordinates
      new_obj = graph_MT_pre__ConditionBranch(wherex, wherey, new_semantic_obj)
   new_obj.DrawObject(self.UMLmodel, self.editGGLabel)
   self.UMLmodel.addtag_withtag("MT_pre__ConditionBranch", new_obj.tag)
   new_semantic_obj.graphObject_ = new_obj
   self.ASGroot.addNode(new_semantic_obj)
   res = self.ASGroot.postCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   res = new_semantic_obj.postCondition(ASGNode.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return
   new_semantic_obj.postAction(ASGNode.CREATE)

   self.mode=self.IDLEMODE
   if self.editGGLabel :
      self.statusbar.event(StatusBar.TRANSFORMATION, StatusBar.CREATE)
   else:
      self.statusbar.event(StatusBar.MODEL, StatusBar.CREATE)
   return new_semantic_obj
def createNewMT_pre__ListenBranch(self, wherex, wherey, screenCoordinates = 1):
   self.fromClass = None
   self.toClass = None
   # try the global constraints...
   res = self.ASGroot.preCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   new_semantic_obj = MT_pre__ListenBranch(self)
   res = new_semantic_obj.preCondition ( ASGNode.CREATE )
   if res: return self.constraintViolation(res)
   new_semantic_obj.preAction ( ASGNode.CREATE ) 

   ne = len(self.ASGroot.listNodes["MT_pre__ListenBranch"])
   if new_semantic_obj.keyword_:
      new_semantic_obj.keyword_.setValue(new_semantic_obj.keyword_.toString()+str(ne))
   if screenCoordinates:
      new_obj = graph_MT_pre__ListenBranch(self.UMLmodel.canvasx(wherex), self.UMLmodel.canvasy(wherey), new_semantic_obj)
   else: # already in canvas coordinates
      new_obj = graph_MT_pre__ListenBranch(wherex, wherey, new_semantic_obj)
   new_obj.DrawObject(self.UMLmodel, self.editGGLabel)
   self.UMLmodel.addtag_withtag("MT_pre__ListenBranch", new_obj.tag)
   new_semantic_obj.graphObject_ = new_obj
   self.ASGroot.addNode(new_semantic_obj)
   res = self.ASGroot.postCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   res = new_semantic_obj.postCondition(ASGNode.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return
   new_semantic_obj.postAction(ASGNode.CREATE)

   self.mode=self.IDLEMODE
   if self.editGGLabel :
      self.statusbar.event(StatusBar.TRANSFORMATION, StatusBar.CREATE)
   else:
      self.statusbar.event(StatusBar.MODEL, StatusBar.CREATE)
   return new_semantic_obj
def createNewMT_pre__Site(self, wherex, wherey, screenCoordinates = 1):
   self.fromClass = None
   self.toClass = None
   # try the global constraints...
   res = self.ASGroot.preCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   new_semantic_obj = MT_pre__Site(self)
   res = new_semantic_obj.preCondition ( ASGNode.CREATE )
   if res: return self.constraintViolation(res)
   new_semantic_obj.preAction ( ASGNode.CREATE ) 

   ne = len(self.ASGroot.listNodes["MT_pre__Site"])
   if new_semantic_obj.keyword_:
      new_semantic_obj.keyword_.setValue(new_semantic_obj.keyword_.toString()+str(ne))
   if screenCoordinates:
      new_obj = graph_MT_pre__Site(self.UMLmodel.canvasx(wherex), self.UMLmodel.canvasy(wherey), new_semantic_obj)
   else: # already in canvas coordinates
      new_obj = graph_MT_pre__Site(wherex, wherey, new_semantic_obj)
   new_obj.DrawObject(self.UMLmodel, self.editGGLabel)
   self.UMLmodel.addtag_withtag("MT_pre__Site", new_obj.tag)
   new_semantic_obj.graphObject_ = new_obj
   self.ASGroot.addNode(new_semantic_obj)
   res = self.ASGroot.postCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   res = new_semantic_obj.postCondition(ASGNode.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return
   new_semantic_obj.postAction(ASGNode.CREATE)

   self.mode=self.IDLEMODE
   if self.editGGLabel :
      self.statusbar.event(StatusBar.TRANSFORMATION, StatusBar.CREATE)
   else:
      self.statusbar.event(StatusBar.MODEL, StatusBar.CREATE)
   return new_semantic_obj
def createNewMT_pre__Model_T(self, wherex, wherey, screenCoordinates = 1):
   self.fromClass = None
   self.toClass = None
   # try the global constraints...
   res = self.ASGroot.preCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   new_semantic_obj = MT_pre__Model_T(self)
   res = new_semantic_obj.preCondition ( ASGNode.CREATE )
   if res: return self.constraintViolation(res)
   new_semantic_obj.preAction ( ASGNode.CREATE ) 

   ne = len(self.ASGroot.listNodes["MT_pre__Model_T"])
   if new_semantic_obj.keyword_:
      new_semantic_obj.keyword_.setValue(new_semantic_obj.keyword_.toString()+str(ne))
   if screenCoordinates:
      new_obj = graph_MT_pre__Model_T(self.UMLmodel.canvasx(wherex), self.UMLmodel.canvasy(wherey), new_semantic_obj)
   else: # already in canvas coordinates
      new_obj = graph_MT_pre__Model_T(wherex, wherey, new_semantic_obj)
   new_obj.DrawObject(self.UMLmodel, self.editGGLabel)
   self.UMLmodel.addtag_withtag("MT_pre__Model_T", new_obj.tag)
   new_semantic_obj.graphObject_ = new_obj
   self.ASGroot.addNode(new_semantic_obj)
   res = self.ASGroot.postCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   res = new_semantic_obj.postCondition(ASGNode.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return
   new_semantic_obj.postAction(ASGNode.CREATE)

   self.mode=self.IDLEMODE
   if self.editGGLabel :
      self.statusbar.event(StatusBar.TRANSFORMATION, StatusBar.CREATE)
   else:
      self.statusbar.event(StatusBar.MODEL, StatusBar.CREATE)
   return new_semantic_obj
def createNewMT_pre__MatchCase(self, wherex, wherey, screenCoordinates = 1):
   self.fromClass = None
   self.toClass = None
   # try the global constraints...
   res = self.ASGroot.preCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   new_semantic_obj = MT_pre__MatchCase(self)
   res = new_semantic_obj.preCondition ( ASGNode.CREATE )
   if res: return self.constraintViolation(res)
   new_semantic_obj.preAction ( ASGNode.CREATE ) 

   ne = len(self.ASGroot.listNodes["MT_pre__MatchCase"])
   if new_semantic_obj.keyword_:
      new_semantic_obj.keyword_.setValue(new_semantic_obj.keyword_.toString()+str(ne))
   if screenCoordinates:
      new_obj = graph_MT_pre__MatchCase(self.UMLmodel.canvasx(wherex), self.UMLmodel.canvasy(wherey), new_semantic_obj)
   else: # already in canvas coordinates
      new_obj = graph_MT_pre__MatchCase(wherex, wherey, new_semantic_obj)
   new_obj.DrawObject(self.UMLmodel, self.editGGLabel)
   self.UMLmodel.addtag_withtag("MT_pre__MatchCase", new_obj.tag)
   new_semantic_obj.graphObject_ = new_obj
   self.ASGroot.addNode(new_semantic_obj)
   res = self.ASGroot.postCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   res = new_semantic_obj.postCondition(ASGNode.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return
   new_semantic_obj.postAction(ASGNode.CREATE)

   self.mode=self.IDLEMODE
   if self.editGGLabel :
      self.statusbar.event(StatusBar.TRANSFORMATION, StatusBar.CREATE)
   else:
      self.statusbar.event(StatusBar.MODEL, StatusBar.CREATE)
   return new_semantic_obj
def createNewMT_pre__Condition(self, wherex, wherey, screenCoordinates = 1):
   self.fromClass = None
   self.toClass = None
   # try the global constraints...
   res = self.ASGroot.preCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   new_semantic_obj = MT_pre__Condition(self)
   res = new_semantic_obj.preCondition ( ASGNode.CREATE )
   if res: return self.constraintViolation(res)
   new_semantic_obj.preAction ( ASGNode.CREATE ) 

   ne = len(self.ASGroot.listNodes["MT_pre__Condition"])
   if new_semantic_obj.keyword_:
      new_semantic_obj.keyword_.setValue(new_semantic_obj.keyword_.toString()+str(ne))
   if screenCoordinates:
      new_obj = graph_MT_pre__Condition(self.UMLmodel.canvasx(wherex), self.UMLmodel.canvasy(wherey), new_semantic_obj)
   else: # already in canvas coordinates
      new_obj = graph_MT_pre__Condition(wherex, wherey, new_semantic_obj)
   new_obj.DrawObject(self.UMLmodel, self.editGGLabel)
   self.UMLmodel.addtag_withtag("MT_pre__Condition", new_obj.tag)
   new_semantic_obj.graphObject_ = new_obj
   self.ASGroot.addNode(new_semantic_obj)
   res = self.ASGroot.postCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   res = new_semantic_obj.postCondition(ASGNode.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return
   new_semantic_obj.postAction(ASGNode.CREATE)

   self.mode=self.IDLEMODE
   if self.editGGLabel :
      self.statusbar.event(StatusBar.TRANSFORMATION, StatusBar.CREATE)
   else:
      self.statusbar.event(StatusBar.MODEL, StatusBar.CREATE)
   return new_semantic_obj
def createNewMT_pre__New(self, wherex, wherey, screenCoordinates = 1):
   self.fromClass = None
   self.toClass = None
   # try the global constraints...
   res = self.ASGroot.preCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   new_semantic_obj = MT_pre__New(self)
   res = new_semantic_obj.preCondition ( ASGNode.CREATE )
   if res: return self.constraintViolation(res)
   new_semantic_obj.preAction ( ASGNode.CREATE ) 

   ne = len(self.ASGroot.listNodes["MT_pre__New"])
   if new_semantic_obj.keyword_:
      new_semantic_obj.keyword_.setValue(new_semantic_obj.keyword_.toString()+str(ne))
   if screenCoordinates:
      new_obj = graph_MT_pre__New(self.UMLmodel.canvasx(wherex), self.UMLmodel.canvasy(wherey), new_semantic_obj)
   else: # already in canvas coordinates
      new_obj = graph_MT_pre__New(wherex, wherey, new_semantic_obj)
   new_obj.DrawObject(self.UMLmodel, self.editGGLabel)
   self.UMLmodel.addtag_withtag("MT_pre__New", new_obj.tag)
   new_semantic_obj.graphObject_ = new_obj
   self.ASGroot.addNode(new_semantic_obj)
   res = self.ASGroot.postCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   res = new_semantic_obj.postCondition(ASGNode.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return
   new_semantic_obj.postAction(ASGNode.CREATE)

   self.mode=self.IDLEMODE
   if self.editGGLabel :
      self.statusbar.event(StatusBar.TRANSFORMATION, StatusBar.CREATE)
   else:
      self.statusbar.event(StatusBar.MODEL, StatusBar.CREATE)
   return new_semantic_obj
def createNewMT_pre__Delay(self, wherex, wherey, screenCoordinates = 1):
   self.fromClass = None
   self.toClass = None
   # try the global constraints...
   res = self.ASGroot.preCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   new_semantic_obj = MT_pre__Delay(self)
   res = new_semantic_obj.preCondition ( ASGNode.CREATE )
   if res: return self.constraintViolation(res)
   new_semantic_obj.preAction ( ASGNode.CREATE ) 

   ne = len(self.ASGroot.listNodes["MT_pre__Delay"])
   if new_semantic_obj.keyword_:
      new_semantic_obj.keyword_.setValue(new_semantic_obj.keyword_.toString()+str(ne))
   if screenCoordinates:
      new_obj = graph_MT_pre__Delay(self.UMLmodel.canvasx(wherex), self.UMLmodel.canvasy(wherey), new_semantic_obj)
   else: # already in canvas coordinates
      new_obj = graph_MT_pre__Delay(wherex, wherey, new_semantic_obj)
   new_obj.DrawObject(self.UMLmodel, self.editGGLabel)
   self.UMLmodel.addtag_withtag("MT_pre__Delay", new_obj.tag)
   new_semantic_obj.graphObject_ = new_obj
   self.ASGroot.addNode(new_semantic_obj)
   res = self.ASGroot.postCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   res = new_semantic_obj.postCondition(ASGNode.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return
   new_semantic_obj.postAction(ASGNode.CREATE)

   self.mode=self.IDLEMODE
   if self.editGGLabel :
      self.statusbar.event(StatusBar.TRANSFORMATION, StatusBar.CREATE)
   else:
      self.statusbar.event(StatusBar.MODEL, StatusBar.CREATE)
   return new_semantic_obj
def createNewMT_pre__Par(self, wherex, wherey, screenCoordinates = 1):
   self.fromClass = None
   self.toClass = None
   # try the global constraints...
   res = self.ASGroot.preCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   new_semantic_obj = MT_pre__Par(self)
   res = new_semantic_obj.preCondition ( ASGNode.CREATE )
   if res: return self.constraintViolation(res)
   new_semantic_obj.preAction ( ASGNode.CREATE ) 

   ne = len(self.ASGroot.listNodes["MT_pre__Par"])
   if new_semantic_obj.keyword_:
      new_semantic_obj.keyword_.setValue(new_semantic_obj.keyword_.toString()+str(ne))
   if screenCoordinates:
      new_obj = graph_MT_pre__Par(self.UMLmodel.canvasx(wherex), self.UMLmodel.canvasy(wherey), new_semantic_obj)
   else: # already in canvas coordinates
      new_obj = graph_MT_pre__Par(wherex, wherey, new_semantic_obj)
   new_obj.DrawObject(self.UMLmodel, self.editGGLabel)
   self.UMLmodel.addtag_withtag("MT_pre__Par", new_obj.tag)
   new_semantic_obj.graphObject_ = new_obj
   self.ASGroot.addNode(new_semantic_obj)
   res = self.ASGroot.postCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   res = new_semantic_obj.postCondition(ASGNode.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return
   new_semantic_obj.postAction(ASGNode.CREATE)

   self.mode=self.IDLEMODE
   if self.editGGLabel :
      self.statusbar.event(StatusBar.TRANSFORMATION, StatusBar.CREATE)
   else:
      self.statusbar.event(StatusBar.MODEL, StatusBar.CREATE)
   return new_semantic_obj
def createNewMT_pre__ParIndexed(self, wherex, wherey, screenCoordinates = 1):
   self.fromClass = None
   self.toClass = None
   # try the global constraints...
   res = self.ASGroot.preCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   new_semantic_obj = MT_pre__ParIndexed(self)
   res = new_semantic_obj.preCondition ( ASGNode.CREATE )
   if res: return self.constraintViolation(res)
   new_semantic_obj.preAction ( ASGNode.CREATE ) 

   ne = len(self.ASGroot.listNodes["MT_pre__ParIndexed"])
   if new_semantic_obj.keyword_:
      new_semantic_obj.keyword_.setValue(new_semantic_obj.keyword_.toString()+str(ne))
   if screenCoordinates:
      new_obj = graph_MT_pre__ParIndexed(self.UMLmodel.canvasx(wherex), self.UMLmodel.canvasy(wherey), new_semantic_obj)
   else: # already in canvas coordinates
      new_obj = graph_MT_pre__ParIndexed(wherex, wherey, new_semantic_obj)
   new_obj.DrawObject(self.UMLmodel, self.editGGLabel)
   self.UMLmodel.addtag_withtag("MT_pre__ParIndexed", new_obj.tag)
   new_semantic_obj.graphObject_ = new_obj
   self.ASGroot.addNode(new_semantic_obj)
   res = self.ASGroot.postCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   res = new_semantic_obj.postCondition(ASGNode.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return
   new_semantic_obj.postAction(ASGNode.CREATE)

   self.mode=self.IDLEMODE
   if self.editGGLabel :
      self.statusbar.event(StatusBar.TRANSFORMATION, StatusBar.CREATE)
   else:
      self.statusbar.event(StatusBar.MODEL, StatusBar.CREATE)
   return new_semantic_obj
def createNewMT_pre__Inst(self, wherex, wherey, screenCoordinates = 1):
   self.fromClass = None
   self.toClass = None
   # try the global constraints...
   res = self.ASGroot.preCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   new_semantic_obj = MT_pre__Inst(self)
   res = new_semantic_obj.preCondition ( ASGNode.CREATE )
   if res: return self.constraintViolation(res)
   new_semantic_obj.preAction ( ASGNode.CREATE ) 

   ne = len(self.ASGroot.listNodes["MT_pre__Inst"])
   if new_semantic_obj.keyword_:
      new_semantic_obj.keyword_.setValue(new_semantic_obj.keyword_.toString()+str(ne))
   if screenCoordinates:
      new_obj = graph_MT_pre__Inst(self.UMLmodel.canvasx(wherex), self.UMLmodel.canvasy(wherey), new_semantic_obj)
   else: # already in canvas coordinates
      new_obj = graph_MT_pre__Inst(wherex, wherey, new_semantic_obj)
   new_obj.DrawObject(self.UMLmodel, self.editGGLabel)
   self.UMLmodel.addtag_withtag("MT_pre__Inst", new_obj.tag)
   new_semantic_obj.graphObject_ = new_obj
   self.ASGroot.addNode(new_semantic_obj)
   res = self.ASGroot.postCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   res = new_semantic_obj.postCondition(ASGNode.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return
   new_semantic_obj.postAction(ASGNode.CREATE)

   self.mode=self.IDLEMODE
   if self.editGGLabel :
      self.statusbar.event(StatusBar.TRANSFORMATION, StatusBar.CREATE)
   else:
      self.statusbar.event(StatusBar.MODEL, StatusBar.CREATE)
   return new_semantic_obj
def createNewMT_pre__LocalDef(self, wherex, wherey, screenCoordinates = 1):
   self.fromClass = None
   self.toClass = None
   # try the global constraints...
   res = self.ASGroot.preCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   new_semantic_obj = MT_pre__LocalDef(self)
   res = new_semantic_obj.preCondition ( ASGNode.CREATE )
   if res: return self.constraintViolation(res)
   new_semantic_obj.preAction ( ASGNode.CREATE ) 

   ne = len(self.ASGroot.listNodes["MT_pre__LocalDef"])
   if new_semantic_obj.keyword_:
      new_semantic_obj.keyword_.setValue(new_semantic_obj.keyword_.toString()+str(ne))
   if screenCoordinates:
      new_obj = graph_MT_pre__LocalDef(self.UMLmodel.canvasx(wherex), self.UMLmodel.canvasy(wherey), new_semantic_obj)
   else: # already in canvas coordinates
      new_obj = graph_MT_pre__LocalDef(wherex, wherey, new_semantic_obj)
   new_obj.DrawObject(self.UMLmodel, self.editGGLabel)
   self.UMLmodel.addtag_withtag("MT_pre__LocalDef", new_obj.tag)
   new_semantic_obj.graphObject_ = new_obj
   self.ASGroot.addNode(new_semantic_obj)
   res = self.ASGroot.postCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   res = new_semantic_obj.postCondition(ASGNode.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return
   new_semantic_obj.postAction(ASGNode.CREATE)

   self.mode=self.IDLEMODE
   if self.editGGLabel :
      self.statusbar.event(StatusBar.TRANSFORMATION, StatusBar.CREATE)
   else:
      self.statusbar.event(StatusBar.MODEL, StatusBar.CREATE)
   return new_semantic_obj
def createNewMT_pre__Seq(self, wherex, wherey, screenCoordinates = 1):
   self.fromClass = None
   self.toClass = None
   # try the global constraints...
   res = self.ASGroot.preCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   new_semantic_obj = MT_pre__Seq(self)
   res = new_semantic_obj.preCondition ( ASGNode.CREATE )
   if res: return self.constraintViolation(res)
   new_semantic_obj.preAction ( ASGNode.CREATE ) 

   ne = len(self.ASGroot.listNodes["MT_pre__Seq"])
   if new_semantic_obj.keyword_:
      new_semantic_obj.keyword_.setValue(new_semantic_obj.keyword_.toString()+str(ne))
   if screenCoordinates:
      new_obj = graph_MT_pre__Seq(self.UMLmodel.canvasx(wherex), self.UMLmodel.canvasy(wherey), new_semantic_obj)
   else: # already in canvas coordinates
      new_obj = graph_MT_pre__Seq(wherex, wherey, new_semantic_obj)
   new_obj.DrawObject(self.UMLmodel, self.editGGLabel)
   self.UMLmodel.addtag_withtag("MT_pre__Seq", new_obj.tag)
   new_semantic_obj.graphObject_ = new_obj
   self.ASGroot.addNode(new_semantic_obj)
   res = self.ASGroot.postCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   res = new_semantic_obj.postCondition(ASGNode.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return
   new_semantic_obj.postAction(ASGNode.CREATE)

   self.mode=self.IDLEMODE
   if self.editGGLabel :
      self.statusbar.event(StatusBar.TRANSFORMATION, StatusBar.CREATE)
   else:
      self.statusbar.event(StatusBar.MODEL, StatusBar.CREATE)
   return new_semantic_obj
def createNewMT_pre__ConditionSet(self, wherex, wherey, screenCoordinates = 1):
   self.fromClass = None
   self.toClass = None
   # try the global constraints...
   res = self.ASGroot.preCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   new_semantic_obj = MT_pre__ConditionSet(self)
   res = new_semantic_obj.preCondition ( ASGNode.CREATE )
   if res: return self.constraintViolation(res)
   new_semantic_obj.preAction ( ASGNode.CREATE ) 

   ne = len(self.ASGroot.listNodes["MT_pre__ConditionSet"])
   if new_semantic_obj.keyword_:
      new_semantic_obj.keyword_.setValue(new_semantic_obj.keyword_.toString()+str(ne))
   if screenCoordinates:
      new_obj = graph_MT_pre__ConditionSet(self.UMLmodel.canvasx(wherex), self.UMLmodel.canvasy(wherey), new_semantic_obj)
   else: # already in canvas coordinates
      new_obj = graph_MT_pre__ConditionSet(wherex, wherey, new_semantic_obj)
   new_obj.DrawObject(self.UMLmodel, self.editGGLabel)
   self.UMLmodel.addtag_withtag("MT_pre__ConditionSet", new_obj.tag)
   new_semantic_obj.graphObject_ = new_obj
   self.ASGroot.addNode(new_semantic_obj)
   res = self.ASGroot.postCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   res = new_semantic_obj.postCondition(ASGNode.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return
   new_semantic_obj.postAction(ASGNode.CREATE)

   self.mode=self.IDLEMODE
   if self.editGGLabel :
      self.statusbar.event(StatusBar.TRANSFORMATION, StatusBar.CREATE)
   else:
      self.statusbar.event(StatusBar.MODEL, StatusBar.CREATE)
   return new_semantic_obj
def createNewMT_pre__Match(self, wherex, wherey, screenCoordinates = 1):
   self.fromClass = None
   self.toClass = None
   # try the global constraints...
   res = self.ASGroot.preCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   new_semantic_obj = MT_pre__Match(self)
   res = new_semantic_obj.preCondition ( ASGNode.CREATE )
   if res: return self.constraintViolation(res)
   new_semantic_obj.preAction ( ASGNode.CREATE ) 

   ne = len(self.ASGroot.listNodes["MT_pre__Match"])
   if new_semantic_obj.keyword_:
      new_semantic_obj.keyword_.setValue(new_semantic_obj.keyword_.toString()+str(ne))
   if screenCoordinates:
      new_obj = graph_MT_pre__Match(self.UMLmodel.canvasx(wherex), self.UMLmodel.canvasy(wherey), new_semantic_obj)
   else: # already in canvas coordinates
      new_obj = graph_MT_pre__Match(wherex, wherey, new_semantic_obj)
   new_obj.DrawObject(self.UMLmodel, self.editGGLabel)
   self.UMLmodel.addtag_withtag("MT_pre__Match", new_obj.tag)
   new_semantic_obj.graphObject_ = new_obj
   self.ASGroot.addNode(new_semantic_obj)
   res = self.ASGroot.postCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   res = new_semantic_obj.postCondition(ASGNode.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return
   new_semantic_obj.postAction(ASGNode.CREATE)

   self.mode=self.IDLEMODE
   if self.editGGLabel :
      self.statusbar.event(StatusBar.TRANSFORMATION, StatusBar.CREATE)
   else:
      self.statusbar.event(StatusBar.MODEL, StatusBar.CREATE)
   return new_semantic_obj
def createNewMT_pre__Print(self, wherex, wherey, screenCoordinates = 1):
   self.fromClass = None
   self.toClass = None
   # try the global constraints...
   res = self.ASGroot.preCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   new_semantic_obj = MT_pre__Print(self)
   res = new_semantic_obj.preCondition ( ASGNode.CREATE )
   if res: return self.constraintViolation(res)
   new_semantic_obj.preAction ( ASGNode.CREATE ) 

   ne = len(self.ASGroot.listNodes["MT_pre__Print"])
   if new_semantic_obj.keyword_:
      new_semantic_obj.keyword_.setValue(new_semantic_obj.keyword_.toString()+str(ne))
   if screenCoordinates:
      new_obj = graph_MT_pre__Print(self.UMLmodel.canvasx(wherex), self.UMLmodel.canvasy(wherey), new_semantic_obj)
   else: # already in canvas coordinates
      new_obj = graph_MT_pre__Print(wherex, wherey, new_semantic_obj)
   new_obj.DrawObject(self.UMLmodel, self.editGGLabel)
   self.UMLmodel.addtag_withtag("MT_pre__Print", new_obj.tag)
   new_semantic_obj.graphObject_ = new_obj
   self.ASGroot.addNode(new_semantic_obj)
   res = self.ASGroot.postCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   res = new_semantic_obj.postCondition(ASGNode.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return
   new_semantic_obj.postAction(ASGNode.CREATE)

   self.mode=self.IDLEMODE
   if self.editGGLabel :
      self.statusbar.event(StatusBar.TRANSFORMATION, StatusBar.CREATE)
   else:
      self.statusbar.event(StatusBar.MODEL, StatusBar.CREATE)
   return new_semantic_obj
def createNewMT_pre__Attribute(self, wherex, wherey, screenCoordinates = 1):
   self.fromClass = None
   self.toClass = None
   # try the global constraints...
   res = self.ASGroot.preCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   new_semantic_obj = MT_pre__Attribute(self)
   res = new_semantic_obj.preCondition ( ASGNode.CREATE )
   if res: return self.constraintViolation(res)
   new_semantic_obj.preAction ( ASGNode.CREATE ) 

   ne = len(self.ASGroot.listNodes["MT_pre__Attribute"])
   if new_semantic_obj.keyword_:
      new_semantic_obj.keyword_.setValue(new_semantic_obj.keyword_.toString()+str(ne))
   if screenCoordinates:
      new_obj = graph_MT_pre__Attribute(self.UMLmodel.canvasx(wherex), self.UMLmodel.canvasy(wherey), new_semantic_obj)
   else: # already in canvas coordinates
      new_obj = graph_MT_pre__Attribute(wherex, wherey, new_semantic_obj)
   new_obj.DrawObject(self.UMLmodel, self.editGGLabel)
   self.UMLmodel.addtag_withtag("MT_pre__Attribute", new_obj.tag)
   new_semantic_obj.graphObject_ = new_obj
   self.ASGroot.addNode(new_semantic_obj)
   res = self.ASGroot.postCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   res = new_semantic_obj.postCondition(ASGNode.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return
   new_semantic_obj.postAction(ASGNode.CREATE)

   self.mode=self.IDLEMODE
   if self.editGGLabel :
      self.statusbar.event(StatusBar.TRANSFORMATION, StatusBar.CREATE)
   else:
      self.statusbar.event(StatusBar.MODEL, StatusBar.CREATE)
   return new_semantic_obj
def createNewMT_pre__Expression(self, wherex, wherey, screenCoordinates = 1):
   self.fromClass = None
   self.toClass = None
   # try the global constraints...
   res = self.ASGroot.preCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   new_semantic_obj = MT_pre__Expression(self)
   res = new_semantic_obj.preCondition ( ASGNode.CREATE )
   if res: return self.constraintViolation(res)
   new_semantic_obj.preAction ( ASGNode.CREATE ) 

   ne = len(self.ASGroot.listNodes["MT_pre__Expression"])
   if new_semantic_obj.keyword_:
      new_semantic_obj.keyword_.setValue(new_semantic_obj.keyword_.toString()+str(ne))
   if screenCoordinates:
      new_obj = graph_MT_pre__Expression(self.UMLmodel.canvasx(wherex), self.UMLmodel.canvasy(wherey), new_semantic_obj)
   else: # already in canvas coordinates
      new_obj = graph_MT_pre__Expression(wherex, wherey, new_semantic_obj)
   new_obj.DrawObject(self.UMLmodel, self.editGGLabel)
   self.UMLmodel.addtag_withtag("MT_pre__Expression", new_obj.tag)
   new_semantic_obj.graphObject_ = new_obj
   self.ASGroot.addNode(new_semantic_obj)
   res = self.ASGroot.postCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   res = new_semantic_obj.postCondition(ASGNode.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return
   new_semantic_obj.postAction(ASGNode.CREATE)

   self.mode=self.IDLEMODE
   if self.editGGLabel :
      self.statusbar.event(StatusBar.TRANSFORMATION, StatusBar.CREATE)
   else:
      self.statusbar.event(StatusBar.MODEL, StatusBar.CREATE)
   return new_semantic_obj
def createNewMT_pre__Equation(self, wherex, wherey, screenCoordinates = 1):
   self.fromClass = None
   self.toClass = None
   # try the global constraints...
   res = self.ASGroot.preCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   new_semantic_obj = MT_pre__Equation(self)
   res = new_semantic_obj.preCondition ( ASGNode.CREATE )
   if res: return self.constraintViolation(res)
   new_semantic_obj.preAction ( ASGNode.CREATE ) 

   ne = len(self.ASGroot.listNodes["MT_pre__Equation"])
   if new_semantic_obj.keyword_:
      new_semantic_obj.keyword_.setValue(new_semantic_obj.keyword_.toString()+str(ne))
   if screenCoordinates:
      new_obj = graph_MT_pre__Equation(self.UMLmodel.canvasx(wherex), self.UMLmodel.canvasy(wherey), new_semantic_obj)
   else: # already in canvas coordinates
      new_obj = graph_MT_pre__Equation(wherex, wherey, new_semantic_obj)
   new_obj.DrawObject(self.UMLmodel, self.editGGLabel)
   self.UMLmodel.addtag_withtag("MT_pre__Equation", new_obj.tag)
   new_semantic_obj.graphObject_ = new_obj
   self.ASGroot.addNode(new_semantic_obj)
   res = self.ASGroot.postCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   res = new_semantic_obj.postCondition(ASGNode.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return
   new_semantic_obj.postAction(ASGNode.CREATE)

   self.mode=self.IDLEMODE
   if self.editGGLabel :
      self.statusbar.event(StatusBar.TRANSFORMATION, StatusBar.CREATE)
   else:
      self.statusbar.event(StatusBar.MODEL, StatusBar.CREATE)
   return new_semantic_obj
def createNewMT_pre__Operation(self, wherex, wherey, screenCoordinates = 1):
   self.fromClass = None
   self.toClass = None
   # try the global constraints...
   res = self.ASGroot.preCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   new_semantic_obj = MT_pre__Operation(self)
   res = new_semantic_obj.preCondition ( ASGNode.CREATE )
   if res: return self.constraintViolation(res)
   new_semantic_obj.preAction ( ASGNode.CREATE ) 

   ne = len(self.ASGroot.listNodes["MT_pre__Operation"])
   if new_semantic_obj.keyword_:
      new_semantic_obj.keyword_.setValue(new_semantic_obj.keyword_.toString()+str(ne))
   if screenCoordinates:
      new_obj = graph_MT_pre__Operation(self.UMLmodel.canvasx(wherex), self.UMLmodel.canvasy(wherey), new_semantic_obj)
   else: # already in canvas coordinates
      new_obj = graph_MT_pre__Operation(wherex, wherey, new_semantic_obj)
   new_obj.DrawObject(self.UMLmodel, self.editGGLabel)
   self.UMLmodel.addtag_withtag("MT_pre__Operation", new_obj.tag)
   new_semantic_obj.graphObject_ = new_obj
   self.ASGroot.addNode(new_semantic_obj)
   res = self.ASGroot.postCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   res = new_semantic_obj.postCondition(ASGNode.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return
   new_semantic_obj.postAction(ASGNode.CREATE)

   self.mode=self.IDLEMODE
   if self.editGGLabel :
      self.statusbar.event(StatusBar.TRANSFORMATION, StatusBar.CREATE)
   else:
      self.statusbar.event(StatusBar.MODEL, StatusBar.CREATE)
   return new_semantic_obj
def createNewMT_pre__Add(self, wherex, wherey, screenCoordinates = 1):
   self.fromClass = None
   self.toClass = None
   # try the global constraints...
   res = self.ASGroot.preCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   new_semantic_obj = MT_pre__Add(self)
   res = new_semantic_obj.preCondition ( ASGNode.CREATE )
   if res: return self.constraintViolation(res)
   new_semantic_obj.preAction ( ASGNode.CREATE ) 

   ne = len(self.ASGroot.listNodes["MT_pre__Add"])
   if new_semantic_obj.keyword_:
      new_semantic_obj.keyword_.setValue(new_semantic_obj.keyword_.toString()+str(ne))
   if screenCoordinates:
      new_obj = graph_MT_pre__Add(self.UMLmodel.canvasx(wherex), self.UMLmodel.canvasy(wherey), new_semantic_obj)
   else: # already in canvas coordinates
      new_obj = graph_MT_pre__Add(wherex, wherey, new_semantic_obj)
   new_obj.DrawObject(self.UMLmodel, self.editGGLabel)
   self.UMLmodel.addtag_withtag("MT_pre__Add", new_obj.tag)
   new_semantic_obj.graphObject_ = new_obj
   self.ASGroot.addNode(new_semantic_obj)
   res = self.ASGroot.postCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   res = new_semantic_obj.postCondition(ASGNode.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return
   new_semantic_obj.postAction(ASGNode.CREATE)

   self.mode=self.IDLEMODE
   if self.editGGLabel :
      self.statusbar.event(StatusBar.TRANSFORMATION, StatusBar.CREATE)
   else:
      self.statusbar.event(StatusBar.MODEL, StatusBar.CREATE)
   return new_semantic_obj
def createNewMT_pre__Subtract(self, wherex, wherey, screenCoordinates = 1):
   self.fromClass = None
   self.toClass = None
   # try the global constraints...
   res = self.ASGroot.preCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   new_semantic_obj = MT_pre__Subtract(self)
   res = new_semantic_obj.preCondition ( ASGNode.CREATE )
   if res: return self.constraintViolation(res)
   new_semantic_obj.preAction ( ASGNode.CREATE ) 

   ne = len(self.ASGroot.listNodes["MT_pre__Subtract"])
   if new_semantic_obj.keyword_:
      new_semantic_obj.keyword_.setValue(new_semantic_obj.keyword_.toString()+str(ne))
   if screenCoordinates:
      new_obj = graph_MT_pre__Subtract(self.UMLmodel.canvasx(wherex), self.UMLmodel.canvasy(wherey), new_semantic_obj)
   else: # already in canvas coordinates
      new_obj = graph_MT_pre__Subtract(wherex, wherey, new_semantic_obj)
   new_obj.DrawObject(self.UMLmodel, self.editGGLabel)
   self.UMLmodel.addtag_withtag("MT_pre__Subtract", new_obj.tag)
   new_semantic_obj.graphObject_ = new_obj
   self.ASGroot.addNode(new_semantic_obj)
   res = self.ASGroot.postCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   res = new_semantic_obj.postCondition(ASGNode.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return
   new_semantic_obj.postAction(ASGNode.CREATE)

   self.mode=self.IDLEMODE
   if self.editGGLabel :
      self.statusbar.event(StatusBar.TRANSFORMATION, StatusBar.CREATE)
   else:
      self.statusbar.event(StatusBar.MODEL, StatusBar.CREATE)
   return new_semantic_obj
def createNewMT_pre__Concat(self, wherex, wherey, screenCoordinates = 1):
   self.fromClass = None
   self.toClass = None
   # try the global constraints...
   res = self.ASGroot.preCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   new_semantic_obj = MT_pre__Concat(self)
   res = new_semantic_obj.preCondition ( ASGNode.CREATE )
   if res: return self.constraintViolation(res)
   new_semantic_obj.preAction ( ASGNode.CREATE ) 

   ne = len(self.ASGroot.listNodes["MT_pre__Concat"])
   if new_semantic_obj.keyword_:
      new_semantic_obj.keyword_.setValue(new_semantic_obj.keyword_.toString()+str(ne))
   if screenCoordinates:
      new_obj = graph_MT_pre__Concat(self.UMLmodel.canvasx(wherex), self.UMLmodel.canvasy(wherey), new_semantic_obj)
   else: # already in canvas coordinates
      new_obj = graph_MT_pre__Concat(wherex, wherey, new_semantic_obj)
   new_obj.DrawObject(self.UMLmodel, self.editGGLabel)
   self.UMLmodel.addtag_withtag("MT_pre__Concat", new_obj.tag)
   new_semantic_obj.graphObject_ = new_obj
   self.ASGroot.addNode(new_semantic_obj)
   res = self.ASGroot.postCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   res = new_semantic_obj.postCondition(ASGNode.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return
   new_semantic_obj.postAction(ASGNode.CREATE)

   self.mode=self.IDLEMODE
   if self.editGGLabel :
      self.statusbar.event(StatusBar.TRANSFORMATION, StatusBar.CREATE)
   else:
      self.statusbar.event(StatusBar.MODEL, StatusBar.CREATE)
   return new_semantic_obj
def createNewMT_pre__Constant(self, wherex, wherey, screenCoordinates = 1):
   self.fromClass = None
   self.toClass = None
   # try the global constraints...
   res = self.ASGroot.preCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   new_semantic_obj = MT_pre__Constant(self)
   res = new_semantic_obj.preCondition ( ASGNode.CREATE )
   if res: return self.constraintViolation(res)
   new_semantic_obj.preAction ( ASGNode.CREATE ) 

   ne = len(self.ASGroot.listNodes["MT_pre__Constant"])
   if new_semantic_obj.keyword_:
      new_semantic_obj.keyword_.setValue(new_semantic_obj.keyword_.toString()+str(ne))
   if screenCoordinates:
      new_obj = graph_MT_pre__Constant(self.UMLmodel.canvasx(wherex), self.UMLmodel.canvasy(wherey), new_semantic_obj)
   else: # already in canvas coordinates
      new_obj = graph_MT_pre__Constant(wherex, wherey, new_semantic_obj)
   new_obj.DrawObject(self.UMLmodel, self.editGGLabel)
   self.UMLmodel.addtag_withtag("MT_pre__Constant", new_obj.tag)
   new_semantic_obj.graphObject_ = new_obj
   self.ASGroot.addNode(new_semantic_obj)
   res = self.ASGroot.postCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   res = new_semantic_obj.postCondition(ASGNode.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return
   new_semantic_obj.postAction(ASGNode.CREATE)

   self.mode=self.IDLEMODE
   if self.editGGLabel :
      self.statusbar.event(StatusBar.TRANSFORMATION, StatusBar.CREATE)
   else:
      self.statusbar.event(StatusBar.MODEL, StatusBar.CREATE)
   return new_semantic_obj
def createNewMT_pre__GenericNode_UMLRT2Kiltera_MM(self, wherex, wherey, screenCoordinates = 1):
   self.fromClass = None
   self.toClass = None
   # try the global constraints...
   res = self.ASGroot.preCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   new_semantic_obj = MT_pre__GenericNode_UMLRT2Kiltera_MM(self)
   res = new_semantic_obj.preCondition ( ASGNode.CREATE )
   if res: return self.constraintViolation(res)
   new_semantic_obj.preAction ( ASGNode.CREATE ) 

   ne = len(self.ASGroot.listNodes["MT_pre__GenericNode_UMLRT2Kiltera_MM"])
   if new_semantic_obj.keyword_:
      new_semantic_obj.keyword_.setValue(new_semantic_obj.keyword_.toString()+str(ne))
   if screenCoordinates:
      new_obj = graph_MT_pre__GenericNode_UMLRT2Kiltera_MM(self.UMLmodel.canvasx(wherex), self.UMLmodel.canvasy(wherey), new_semantic_obj)
   else: # already in canvas coordinates
      new_obj = graph_MT_pre__GenericNode_UMLRT2Kiltera_MM(wherex, wherey, new_semantic_obj)
   new_obj.DrawObject(self.UMLmodel, self.editGGLabel)
   self.UMLmodel.addtag_withtag("MT_pre__GenericNode_UMLRT2Kiltera_MM", new_obj.tag)
   new_semantic_obj.graphObject_ = new_obj
   self.ASGroot.addNode(new_semantic_obj)
   res = self.ASGroot.postCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   res = new_semantic_obj.postCondition(ASGNode.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return
   new_semantic_obj.postAction(ASGNode.CREATE)

   self.mode=self.IDLEMODE
   if self.editGGLabel :
      self.statusbar.event(StatusBar.TRANSFORMATION, StatusBar.CREATE)
   else:
      self.statusbar.event(StatusBar.MODEL, StatusBar.CREATE)
   return new_semantic_obj
def createNewMT_pre__paired_with(self, wherex, wherey, screenCoordinates = 1):
   self.fromClass = None
   self.toClass = None
   # try the global constraints...
   res = self.ASGroot.preCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   new_semantic_obj = MT_pre__paired_with(self)
   res = new_semantic_obj.preCondition ( ASGNode.CREATE )
   if res: return self.constraintViolation(res)
   new_semantic_obj.preAction ( ASGNode.CREATE ) 

   ne = len(self.ASGroot.listNodes["MT_pre__paired_with"])
   if new_semantic_obj.keyword_:
      new_semantic_obj.keyword_.setValue(new_semantic_obj.keyword_.toString()+str(ne))
   if screenCoordinates:
      new_obj = graph_MT_pre__paired_with(self.UMLmodel.canvasx(wherex), self.UMLmodel.canvasy(wherey), new_semantic_obj)
   else: # already in canvas coordinates
      new_obj = graph_MT_pre__paired_with(wherex, wherey, new_semantic_obj)
   new_obj.DrawObject(self.UMLmodel, self.editGGLabel)
   self.UMLmodel.addtag_withtag("MT_pre__paired_with", new_obj.tag)
   new_semantic_obj.graphObject_ = new_obj
   self.ASGroot.addNode(new_semantic_obj)
   res = self.ASGroot.postCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   res = new_semantic_obj.postCondition(ASGNode.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return
   new_semantic_obj.postAction(ASGNode.CREATE)

   self.mode=self.IDLEMODE
   if self.editGGLabel :
      self.statusbar.event(StatusBar.TRANSFORMATION, StatusBar.CREATE)
   else:
      self.statusbar.event(StatusBar.MODEL, StatusBar.CREATE)
   return new_semantic_obj
def createNewMT_pre__match_contains(self, wherex, wherey, screenCoordinates = 1):
   self.fromClass = None
   self.toClass = None
   # try the global constraints...
   res = self.ASGroot.preCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   new_semantic_obj = MT_pre__match_contains(self)
   res = new_semantic_obj.preCondition ( ASGNode.CREATE )
   if res: return self.constraintViolation(res)
   new_semantic_obj.preAction ( ASGNode.CREATE ) 

   ne = len(self.ASGroot.listNodes["MT_pre__match_contains"])
   if new_semantic_obj.keyword_:
      new_semantic_obj.keyword_.setValue(new_semantic_obj.keyword_.toString()+str(ne))
   if screenCoordinates:
      new_obj = graph_MT_pre__match_contains(self.UMLmodel.canvasx(wherex), self.UMLmodel.canvasy(wherey), new_semantic_obj)
   else: # already in canvas coordinates
      new_obj = graph_MT_pre__match_contains(wherex, wherey, new_semantic_obj)
   new_obj.DrawObject(self.UMLmodel, self.editGGLabel)
   self.UMLmodel.addtag_withtag("MT_pre__match_contains", new_obj.tag)
   new_semantic_obj.graphObject_ = new_obj
   self.ASGroot.addNode(new_semantic_obj)
   res = self.ASGroot.postCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   res = new_semantic_obj.postCondition(ASGNode.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return
   new_semantic_obj.postAction(ASGNode.CREATE)

   self.mode=self.IDLEMODE
   if self.editGGLabel :
      self.statusbar.event(StatusBar.TRANSFORMATION, StatusBar.CREATE)
   else:
      self.statusbar.event(StatusBar.MODEL, StatusBar.CREATE)
   return new_semantic_obj
def createNewMT_pre__apply_contains(self, wherex, wherey, screenCoordinates = 1):
   self.fromClass = None
   self.toClass = None
   # try the global constraints...
   res = self.ASGroot.preCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   new_semantic_obj = MT_pre__apply_contains(self)
   res = new_semantic_obj.preCondition ( ASGNode.CREATE )
   if res: return self.constraintViolation(res)
   new_semantic_obj.preAction ( ASGNode.CREATE ) 

   ne = len(self.ASGroot.listNodes["MT_pre__apply_contains"])
   if new_semantic_obj.keyword_:
      new_semantic_obj.keyword_.setValue(new_semantic_obj.keyword_.toString()+str(ne))
   if screenCoordinates:
      new_obj = graph_MT_pre__apply_contains(self.UMLmodel.canvasx(wherex), self.UMLmodel.canvasy(wherey), new_semantic_obj)
   else: # already in canvas coordinates
      new_obj = graph_MT_pre__apply_contains(wherex, wherey, new_semantic_obj)
   new_obj.DrawObject(self.UMLmodel, self.editGGLabel)
   self.UMLmodel.addtag_withtag("MT_pre__apply_contains", new_obj.tag)
   new_semantic_obj.graphObject_ = new_obj
   self.ASGroot.addNode(new_semantic_obj)
   res = self.ASGroot.postCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   res = new_semantic_obj.postCondition(ASGNode.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return
   new_semantic_obj.postAction(ASGNode.CREATE)

   self.mode=self.IDLEMODE
   if self.editGGLabel :
      self.statusbar.event(StatusBar.TRANSFORMATION, StatusBar.CREATE)
   else:
      self.statusbar.event(StatusBar.MODEL, StatusBar.CREATE)
   return new_semantic_obj
def createNewMT_pre__directLink_T(self, wherex, wherey, screenCoordinates = 1):
   self.fromClass = None
   self.toClass = None
   # try the global constraints...
   res = self.ASGroot.preCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   new_semantic_obj = MT_pre__directLink_T(self)
   res = new_semantic_obj.preCondition ( ASGNode.CREATE )
   if res: return self.constraintViolation(res)
   new_semantic_obj.preAction ( ASGNode.CREATE ) 

   ne = len(self.ASGroot.listNodes["MT_pre__directLink_T"])
   if new_semantic_obj.keyword_:
      new_semantic_obj.keyword_.setValue(new_semantic_obj.keyword_.toString()+str(ne))
   if screenCoordinates:
      new_obj = graph_MT_pre__directLink_T(self.UMLmodel.canvasx(wherex), self.UMLmodel.canvasy(wherey), new_semantic_obj)
   else: # already in canvas coordinates
      new_obj = graph_MT_pre__directLink_T(wherex, wherey, new_semantic_obj)
   new_obj.DrawObject(self.UMLmodel, self.editGGLabel)
   self.UMLmodel.addtag_withtag("MT_pre__directLink_T", new_obj.tag)
   new_semantic_obj.graphObject_ = new_obj
   self.ASGroot.addNode(new_semantic_obj)
   res = self.ASGroot.postCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   res = new_semantic_obj.postCondition(ASGNode.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return
   new_semantic_obj.postAction(ASGNode.CREATE)

   self.mode=self.IDLEMODE
   if self.editGGLabel :
      self.statusbar.event(StatusBar.TRANSFORMATION, StatusBar.CREATE)
   else:
      self.statusbar.event(StatusBar.MODEL, StatusBar.CREATE)
   return new_semantic_obj
def createNewMT_pre__directLink_S(self, wherex, wherey, screenCoordinates = 1):
   self.fromClass = None
   self.toClass = None
   # try the global constraints...
   res = self.ASGroot.preCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   new_semantic_obj = MT_pre__directLink_S(self)
   res = new_semantic_obj.preCondition ( ASGNode.CREATE )
   if res: return self.constraintViolation(res)
   new_semantic_obj.preAction ( ASGNode.CREATE ) 

   ne = len(self.ASGroot.listNodes["MT_pre__directLink_S"])
   if new_semantic_obj.keyword_:
      new_semantic_obj.keyword_.setValue(new_semantic_obj.keyword_.toString()+str(ne))
   if screenCoordinates:
      new_obj = graph_MT_pre__directLink_S(self.UMLmodel.canvasx(wherex), self.UMLmodel.canvasy(wherey), new_semantic_obj)
   else: # already in canvas coordinates
      new_obj = graph_MT_pre__directLink_S(wherex, wherey, new_semantic_obj)
   new_obj.DrawObject(self.UMLmodel, self.editGGLabel)
   self.UMLmodel.addtag_withtag("MT_pre__directLink_S", new_obj.tag)
   new_semantic_obj.graphObject_ = new_obj
   self.ASGroot.addNode(new_semantic_obj)
   res = self.ASGroot.postCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   res = new_semantic_obj.postCondition(ASGNode.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return
   new_semantic_obj.postAction(ASGNode.CREATE)

   self.mode=self.IDLEMODE
   if self.editGGLabel :
      self.statusbar.event(StatusBar.TRANSFORMATION, StatusBar.CREATE)
   else:
      self.statusbar.event(StatusBar.MODEL, StatusBar.CREATE)
   return new_semantic_obj
def createNewMT_pre__indirectLink_S(self, wherex, wherey, screenCoordinates = 1):
   self.fromClass = None
   self.toClass = None
   # try the global constraints...
   res = self.ASGroot.preCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   new_semantic_obj = MT_pre__indirectLink_S(self)
   res = new_semantic_obj.preCondition ( ASGNode.CREATE )
   if res: return self.constraintViolation(res)
   new_semantic_obj.preAction ( ASGNode.CREATE ) 

   ne = len(self.ASGroot.listNodes["MT_pre__indirectLink_S"])
   if new_semantic_obj.keyword_:
      new_semantic_obj.keyword_.setValue(new_semantic_obj.keyword_.toString()+str(ne))
   if screenCoordinates:
      new_obj = graph_MT_pre__indirectLink_S(self.UMLmodel.canvasx(wherex), self.UMLmodel.canvasy(wherey), new_semantic_obj)
   else: # already in canvas coordinates
      new_obj = graph_MT_pre__indirectLink_S(wherex, wherey, new_semantic_obj)
   new_obj.DrawObject(self.UMLmodel, self.editGGLabel)
   self.UMLmodel.addtag_withtag("MT_pre__indirectLink_S", new_obj.tag)
   new_semantic_obj.graphObject_ = new_obj
   self.ASGroot.addNode(new_semantic_obj)
   res = self.ASGroot.postCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   res = new_semantic_obj.postCondition(ASGNode.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return
   new_semantic_obj.postAction(ASGNode.CREATE)

   self.mode=self.IDLEMODE
   if self.editGGLabel :
      self.statusbar.event(StatusBar.TRANSFORMATION, StatusBar.CREATE)
   else:
      self.statusbar.event(StatusBar.MODEL, StatusBar.CREATE)
   return new_semantic_obj
def createNewMT_pre__backward_link(self, wherex, wherey, screenCoordinates = 1):
   self.fromClass = None
   self.toClass = None
   # try the global constraints...
   res = self.ASGroot.preCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   new_semantic_obj = MT_pre__backward_link(self)
   res = new_semantic_obj.preCondition ( ASGNode.CREATE )
   if res: return self.constraintViolation(res)
   new_semantic_obj.preAction ( ASGNode.CREATE ) 

   ne = len(self.ASGroot.listNodes["MT_pre__backward_link"])
   if new_semantic_obj.keyword_:
      new_semantic_obj.keyword_.setValue(new_semantic_obj.keyword_.toString()+str(ne))
   if screenCoordinates:
      new_obj = graph_MT_pre__backward_link(self.UMLmodel.canvasx(wherex), self.UMLmodel.canvasy(wherey), new_semantic_obj)
   else: # already in canvas coordinates
      new_obj = graph_MT_pre__backward_link(wherex, wherey, new_semantic_obj)
   new_obj.DrawObject(self.UMLmodel, self.editGGLabel)
   self.UMLmodel.addtag_withtag("MT_pre__backward_link", new_obj.tag)
   new_semantic_obj.graphObject_ = new_obj
   self.ASGroot.addNode(new_semantic_obj)
   res = self.ASGroot.postCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   res = new_semantic_obj.postCondition(ASGNode.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return
   new_semantic_obj.postAction(ASGNode.CREATE)

   self.mode=self.IDLEMODE
   if self.editGGLabel :
      self.statusbar.event(StatusBar.TRANSFORMATION, StatusBar.CREATE)
   else:
      self.statusbar.event(StatusBar.MODEL, StatusBar.CREATE)
   return new_semantic_obj
def createNewMT_pre__trace_link(self, wherex, wherey, screenCoordinates = 1):
   self.fromClass = None
   self.toClass = None
   # try the global constraints...
   res = self.ASGroot.preCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   new_semantic_obj = MT_pre__trace_link(self)
   res = new_semantic_obj.preCondition ( ASGNode.CREATE )
   if res: return self.constraintViolation(res)
   new_semantic_obj.preAction ( ASGNode.CREATE ) 

   ne = len(self.ASGroot.listNodes["MT_pre__trace_link"])
   if new_semantic_obj.keyword_:
      new_semantic_obj.keyword_.setValue(new_semantic_obj.keyword_.toString()+str(ne))
   if screenCoordinates:
      new_obj = graph_MT_pre__trace_link(self.UMLmodel.canvasx(wherex), self.UMLmodel.canvasy(wherey), new_semantic_obj)
   else: # already in canvas coordinates
      new_obj = graph_MT_pre__trace_link(wherex, wherey, new_semantic_obj)
   new_obj.DrawObject(self.UMLmodel, self.editGGLabel)
   self.UMLmodel.addtag_withtag("MT_pre__trace_link", new_obj.tag)
   new_semantic_obj.graphObject_ = new_obj
   self.ASGroot.addNode(new_semantic_obj)
   res = self.ASGroot.postCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   res = new_semantic_obj.postCondition(ASGNode.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return
   new_semantic_obj.postAction(ASGNode.CREATE)

   self.mode=self.IDLEMODE
   if self.editGGLabel :
      self.statusbar.event(StatusBar.TRANSFORMATION, StatusBar.CREATE)
   else:
      self.statusbar.event(StatusBar.MODEL, StatusBar.CREATE)
   return new_semantic_obj
def createNewMT_pre__hasAttribute_S(self, wherex, wherey, screenCoordinates = 1):
   self.fromClass = None
   self.toClass = None
   # try the global constraints...
   res = self.ASGroot.preCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   new_semantic_obj = MT_pre__hasAttribute_S(self)
   res = new_semantic_obj.preCondition ( ASGNode.CREATE )
   if res: return self.constraintViolation(res)
   new_semantic_obj.preAction ( ASGNode.CREATE ) 

   ne = len(self.ASGroot.listNodes["MT_pre__hasAttribute_S"])
   if new_semantic_obj.keyword_:
      new_semantic_obj.keyword_.setValue(new_semantic_obj.keyword_.toString()+str(ne))
   if screenCoordinates:
      new_obj = graph_MT_pre__hasAttribute_S(self.UMLmodel.canvasx(wherex), self.UMLmodel.canvasy(wherey), new_semantic_obj)
   else: # already in canvas coordinates
      new_obj = graph_MT_pre__hasAttribute_S(wherex, wherey, new_semantic_obj)
   new_obj.DrawObject(self.UMLmodel, self.editGGLabel)
   self.UMLmodel.addtag_withtag("MT_pre__hasAttribute_S", new_obj.tag)
   new_semantic_obj.graphObject_ = new_obj
   self.ASGroot.addNode(new_semantic_obj)
   res = self.ASGroot.postCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   res = new_semantic_obj.postCondition(ASGNode.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return
   new_semantic_obj.postAction(ASGNode.CREATE)

   self.mode=self.IDLEMODE
   if self.editGGLabel :
      self.statusbar.event(StatusBar.TRANSFORMATION, StatusBar.CREATE)
   else:
      self.statusbar.event(StatusBar.MODEL, StatusBar.CREATE)
   return new_semantic_obj
def createNewMT_pre__hasAttribute_T(self, wherex, wherey, screenCoordinates = 1):
   self.fromClass = None
   self.toClass = None
   # try the global constraints...
   res = self.ASGroot.preCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   new_semantic_obj = MT_pre__hasAttribute_T(self)
   res = new_semantic_obj.preCondition ( ASGNode.CREATE )
   if res: return self.constraintViolation(res)
   new_semantic_obj.preAction ( ASGNode.CREATE ) 

   ne = len(self.ASGroot.listNodes["MT_pre__hasAttribute_T"])
   if new_semantic_obj.keyword_:
      new_semantic_obj.keyword_.setValue(new_semantic_obj.keyword_.toString()+str(ne))
   if screenCoordinates:
      new_obj = graph_MT_pre__hasAttribute_T(self.UMLmodel.canvasx(wherex), self.UMLmodel.canvasy(wherey), new_semantic_obj)
   else: # already in canvas coordinates
      new_obj = graph_MT_pre__hasAttribute_T(wherex, wherey, new_semantic_obj)
   new_obj.DrawObject(self.UMLmodel, self.editGGLabel)
   self.UMLmodel.addtag_withtag("MT_pre__hasAttribute_T", new_obj.tag)
   new_semantic_obj.graphObject_ = new_obj
   self.ASGroot.addNode(new_semantic_obj)
   res = self.ASGroot.postCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   res = new_semantic_obj.postCondition(ASGNode.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return
   new_semantic_obj.postAction(ASGNode.CREATE)

   self.mode=self.IDLEMODE
   if self.editGGLabel :
      self.statusbar.event(StatusBar.TRANSFORMATION, StatusBar.CREATE)
   else:
      self.statusbar.event(StatusBar.MODEL, StatusBar.CREATE)
   return new_semantic_obj
def createNewMT_pre__leftExpr(self, wherex, wherey, screenCoordinates = 1):
   self.fromClass = None
   self.toClass = None
   # try the global constraints...
   res = self.ASGroot.preCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   new_semantic_obj = MT_pre__leftExpr(self)
   res = new_semantic_obj.preCondition ( ASGNode.CREATE )
   if res: return self.constraintViolation(res)
   new_semantic_obj.preAction ( ASGNode.CREATE ) 

   ne = len(self.ASGroot.listNodes["MT_pre__leftExpr"])
   if new_semantic_obj.keyword_:
      new_semantic_obj.keyword_.setValue(new_semantic_obj.keyword_.toString()+str(ne))
   if screenCoordinates:
      new_obj = graph_MT_pre__leftExpr(self.UMLmodel.canvasx(wherex), self.UMLmodel.canvasy(wherey), new_semantic_obj)
   else: # already in canvas coordinates
      new_obj = graph_MT_pre__leftExpr(wherex, wherey, new_semantic_obj)
   new_obj.DrawObject(self.UMLmodel, self.editGGLabel)
   self.UMLmodel.addtag_withtag("MT_pre__leftExpr", new_obj.tag)
   new_semantic_obj.graphObject_ = new_obj
   self.ASGroot.addNode(new_semantic_obj)
   res = self.ASGroot.postCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   res = new_semantic_obj.postCondition(ASGNode.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return
   new_semantic_obj.postAction(ASGNode.CREATE)

   self.mode=self.IDLEMODE
   if self.editGGLabel :
      self.statusbar.event(StatusBar.TRANSFORMATION, StatusBar.CREATE)
   else:
      self.statusbar.event(StatusBar.MODEL, StatusBar.CREATE)
   return new_semantic_obj
def createNewMT_pre__rightExpr(self, wherex, wherey, screenCoordinates = 1):
   self.fromClass = None
   self.toClass = None
   # try the global constraints...
   res = self.ASGroot.preCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   new_semantic_obj = MT_pre__rightExpr(self)
   res = new_semantic_obj.preCondition ( ASGNode.CREATE )
   if res: return self.constraintViolation(res)
   new_semantic_obj.preAction ( ASGNode.CREATE ) 

   ne = len(self.ASGroot.listNodes["MT_pre__rightExpr"])
   if new_semantic_obj.keyword_:
      new_semantic_obj.keyword_.setValue(new_semantic_obj.keyword_.toString()+str(ne))
   if screenCoordinates:
      new_obj = graph_MT_pre__rightExpr(self.UMLmodel.canvasx(wherex), self.UMLmodel.canvasy(wherey), new_semantic_obj)
   else: # already in canvas coordinates
      new_obj = graph_MT_pre__rightExpr(wherex, wherey, new_semantic_obj)
   new_obj.DrawObject(self.UMLmodel, self.editGGLabel)
   self.UMLmodel.addtag_withtag("MT_pre__rightExpr", new_obj.tag)
   new_semantic_obj.graphObject_ = new_obj
   self.ASGroot.addNode(new_semantic_obj)
   res = self.ASGroot.postCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   res = new_semantic_obj.postCondition(ASGNode.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return
   new_semantic_obj.postAction(ASGNode.CREATE)

   self.mode=self.IDLEMODE
   if self.editGGLabel :
      self.statusbar.event(StatusBar.TRANSFORMATION, StatusBar.CREATE)
   else:
      self.statusbar.event(StatusBar.MODEL, StatusBar.CREATE)
   return new_semantic_obj
def createNewMT_pre__hasArgs(self, wherex, wherey, screenCoordinates = 1):
   self.fromClass = None
   self.toClass = None
   # try the global constraints...
   res = self.ASGroot.preCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   new_semantic_obj = MT_pre__hasArgs(self)
   res = new_semantic_obj.preCondition ( ASGNode.CREATE )
   if res: return self.constraintViolation(res)
   new_semantic_obj.preAction ( ASGNode.CREATE ) 

   ne = len(self.ASGroot.listNodes["MT_pre__hasArgs"])
   if new_semantic_obj.keyword_:
      new_semantic_obj.keyword_.setValue(new_semantic_obj.keyword_.toString()+str(ne))
   if screenCoordinates:
      new_obj = graph_MT_pre__hasArgs(self.UMLmodel.canvasx(wherex), self.UMLmodel.canvasy(wherey), new_semantic_obj)
   else: # already in canvas coordinates
      new_obj = graph_MT_pre__hasArgs(wherex, wherey, new_semantic_obj)
   new_obj.DrawObject(self.UMLmodel, self.editGGLabel)
   self.UMLmodel.addtag_withtag("MT_pre__hasArgs", new_obj.tag)
   new_semantic_obj.graphObject_ = new_obj
   self.ASGroot.addNode(new_semantic_obj)
   res = self.ASGroot.postCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   res = new_semantic_obj.postCondition(ASGNode.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return
   new_semantic_obj.postAction(ASGNode.CREATE)

   self.mode=self.IDLEMODE
   if self.editGGLabel :
      self.statusbar.event(StatusBar.TRANSFORMATION, StatusBar.CREATE)
   else:
      self.statusbar.event(StatusBar.MODEL, StatusBar.CREATE)
   return new_semantic_obj
def createNewMT_pre__GenericEdge_UMLRT2Kiltera_MM(self, wherex, wherey, screenCoordinates = 1):
   self.fromClass = None
   self.toClass = None
   # try the global constraints...
   res = self.ASGroot.preCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   new_semantic_obj = MT_pre__GenericEdge_UMLRT2Kiltera_MM(self)
   res = new_semantic_obj.preCondition ( ASGNode.CREATE )
   if res: return self.constraintViolation(res)
   new_semantic_obj.preAction ( ASGNode.CREATE ) 

   ne = len(self.ASGroot.listNodes["MT_pre__GenericEdge_UMLRT2Kiltera_MM"])
   if new_semantic_obj.keyword_:
      new_semantic_obj.keyword_.setValue(new_semantic_obj.keyword_.toString()+str(ne))
   if screenCoordinates:
      new_obj = graph_MT_pre__GenericEdge_UMLRT2Kiltera_MM(self.UMLmodel.canvasx(wherex), self.UMLmodel.canvasy(wherey), new_semantic_obj)
   else: # already in canvas coordinates
      new_obj = graph_MT_pre__GenericEdge_UMLRT2Kiltera_MM(wherex, wherey, new_semantic_obj)
   new_obj.DrawObject(self.UMLmodel, self.editGGLabel)
   self.UMLmodel.addtag_withtag("MT_pre__GenericEdge_UMLRT2Kiltera_MM", new_obj.tag)
   new_semantic_obj.graphObject_ = new_obj
   self.ASGroot.addNode(new_semantic_obj)
   res = self.ASGroot.postCondition(ASG.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return

   res = new_semantic_obj.postCondition(ASGNode.CREATE)
   if res:
      self.constraintViolation(res)
      self.mode=self.IDLEMODE
      return
   new_semantic_obj.postAction(ASGNode.CREATE)

   self.mode=self.IDLEMODE
   if self.editGGLabel :
      self.statusbar.event(StatusBar.TRANSFORMATION, StatusBar.CREATE)
   else:
      self.statusbar.event(StatusBar.MODEL, StatusBar.CREATE)
   return new_semantic_obj
def createNew_Model(self, wherex, wherey, screenCoordinates = 1):
   self.toClass = None
   self.fromClass = None
   new_semantic_obj = ASG_MT_pre__UMLRT2Kiltera_MM(self)
   ne = len(self.ASGroot.listNodes["ASG_MT_pre__UMLRT2Kiltera_MM"])
   if new_semantic_obj.keyword_:
      new_semantic_obj.keyword_.setValue(new_semantic_obj.keyword_.toString()+str(ne))
   if screenCoordinates:
      new_obj = graph_ASG_ERmetaMetaModel(self.UMLmodel.canvasx(wherex), self.UMLmodel.canvasy(wherey), new_semantic_obj)
   else: # already in canvas coordinates
      new_obj = graph_ASG_ERmetaMetaModel(wherex, wherey, new_semantic_obj)
   new_obj.DrawObject(self.UMLmodel, self.editGGLabel)
   self.UMLmodel.addtag_withtag("ASG_MT_pre__UMLRT2Kiltera_MM", new_obj.tag)
   new_semantic_obj.graphObject_ = new_obj
   self.ASGroot.addNode(new_semantic_obj)
   self.mode=self.IDLEMODE
   if self.editGGLabel :
      self.statusbar.event(StatusBar.TRANSFORMATION, StatusBar.CREATE)
   else:
      self.statusbar.event(StatusBar.MODEL, StatusBar.CREATE)
   return new_semantic_obj
def fillTypesInformation(self):
    objs = []
    obj = ATOM3TypeInfo(self)
    params  = []
    obj.setValue(("String", "ATOM3String", params, (None, 0) ))
    objs.append(obj)
    obj = ATOM3TypeInfo(self)
    params  = []
    param = ATOM3String("None")
    params.append(param)
    param = ATOM3String("None")
    params.append(param)
    param = ATOM3String("1")
    params.append(param)
    obj.setValue(("Boolean", "ATOM3Boolean", params, (None, 0) ))
    objs.append(obj)
    obj = ATOM3TypeInfo(self)
    params  = []
    obj.setValue(("Integer", "ATOM3Integer", params, (None, 0) ))
    objs.append(obj)
    obj = ATOM3TypeInfo(self)
    params  = []
    obj.setValue(("Float", "ATOM3Float", params, (None, 0) ))
    objs.append(obj)
    obj = ATOM3TypeInfo(self)
    params  = []
    param = ATOM3String("self.types")
    params.append(param)
    obj.setValue(("Attribute", "ATOM3Attribute", params, (None, 0) ))
    objs.append(obj)
    obj = ATOM3TypeInfo(self)
    params  = []
    param = ATOM3String("[1,1,1,self.types]")
    params.append(param)
    param = ATOM3String("ATOM3Attribute")
    params.append(param)
    param = ATOM3String("self.types")
    params.append(param)
    obj.setValue(("List", "ATOM3List", params, (None, 0) ))
    objs.append(obj)
    obj = ATOM3TypeInfo(self)
    params  = []
    param = ATOM3String("[]")
    params.append(param)
    param = ATOM3String("1")
    params.append(param)
    param = ATOM3String("1")
    params.append(param)
    obj.setValue(("Enum", "ATOM3Enum", params, (None, 0) ))
    objs.append(obj)
    obj = ATOM3TypeInfo(self)
    params  = []
    obj.setValue(("Constraint", "ATOM3Constraint", params, (None, 0) ))
    objs.append(obj)
    obj = ATOM3TypeInfo(self)
    params  = []
    obj.setValue(("Action", "ATOM3Action", params, (None, 0) ))
    objs.append(obj)
    obj = ATOM3TypeInfo(self)
    params  = []
    param = ATOM3String("'class0'")
    params.append(param)
    param = ATOM3String("None")
    params.append(param)
    obj.setValue(("Appearance", "ATOM3Appearance", params, (None, 0) ))
    objs.append(obj)
    obj = ATOM3TypeInfo(self)
    params  = []
    obj.setValue(("BottomType", "ATOM3BottomType", params, (None, 0) ))
    objs.append(obj)
    obj = ATOM3TypeInfo(self)
    params  = []
    obj.setValue(("Link", "ATOM3Link", params, (None, 0) ))
    objs.append(obj)
    obj = ATOM3TypeInfo(self)
    params  = []
    obj.setValue(("Port", "ATOM3Port", params, (None, 0) ))
    objs.append(obj)
    obj = ATOM3TypeInfo(self)
    params  = []
    obj.setValue(("Connection", "ATOM3Connection", params, (None, 0) ))
    objs.append(obj)
    obj = ATOM3TypeInfo(self)
    params  = []
    param = ATOM3String("None")
    params.append(param)
    param = ATOM3String("None")
    params.append(param)
    param = ATOM3String("1")
    params.append(param)
    obj.setValue(("MSEnum", "ATOM3MSEnum", params, (None, 0) ))
    objs.append(obj)
    obj = ATOM3TypeInfo(self)
    params  = []
    obj.setValue(("Text", "ATOM3Text", params, (None, 0) ))
    objs.append(obj)
    self.typeList.setValue(objs)

