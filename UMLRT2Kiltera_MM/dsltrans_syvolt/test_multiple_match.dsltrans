<?xml version="1.0" encoding="UTF-8"?>
<dsltrans:TransformationModel xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:dsltrans="http://dsltrans/2.0">
  <source xsi:type="dsltrans:FilePort" filePathURI="somefile.xmi">
    <metaModelId metaModelURI="rt_new.ecore" metaModelName="rt.Rt"/>
  </source>
  <source xsi:type="dsltrans:Sequential" description="first" previousSource="//@source.0">
    <metaModelId metaModelURI="klt_new.ecore" metaModelName="klt.Klt"/>
    <hasRule description="r1">
      <match>
        <class xsi:type="dsltrans:AnyMatchClass" className="State"/>
        <class xsi:type="dsltrans:AnyMatchClass" className="Transition"/>
        <class xsi:type="dsltrans:AnyMatchClass" className="Transition"/>
        <class xsi:type="dsltrans:AnyMatchClass" className="Transition"/>
        <association xsi:type="dsltrans:PositiveMatchAssociation" associationName="relMatch" source="//@source.1/@hasRule.0/@match.0/@class.0" target="//@source.1/@hasRule.0/@match.0/@class.2"/>
      </match>
      <apply>
        <class className="ProcDef"/>
      </apply>
    </hasRule>
  </source>
  <source xsi:type="dsltrans:Sequential" description="second" previousSource="//@source.1">
    <metaModelId metaModelURI="klt_new.ecore" metaModelName="klt.Klt"/>
    <hasRule description="r2">
      <match>
        <class xsi:type="dsltrans:AnyMatchClass" className="State"/>
        <class xsi:type="dsltrans:AnyMatchClass" className="Transition"/>
        <association xsi:type="dsltrans:PositiveMatchAssociation" associationName="relMatch" source="//@source.2/@hasRule.0/@match.0/@class.0" target="//@source.2/@hasRule.0/@match.0/@class.1"/>
      </match>
      <apply>
        <class className="ProcDef"/>
        <class className="LocalDef"/>
        <association associationName="relApply" source="//@source.2/@hasRule.0/@apply/@class.0" target="//@source.2/@hasRule.0/@apply/@class.1"/>
      </apply>
      <backwards xsi:type="dsltrans:PositiveBackwardRestriction" targetClass="//@source.2/@hasRule.0/@apply/@class.0" sourceClass="//@source.2/@hasRule.0/@match.0/@class.0"/>
      <backwards xsi:type="dsltrans:PositiveBackwardRestriction" targetClass="//@source.2/@hasRule.0/@apply/@class.0" sourceClass="//@source.2/@hasRule.0/@match.0/@class.1"/>
    </hasRule>
  </source>
</dsltrans:TransformationModel>
